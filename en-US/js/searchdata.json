fulltextindex = [["824570635","Spectrometer Configuration Commands","824570635.html","",null," This chapter describes all TopSpinspectrometerconfiguration commands. These are commands which must be executed once, after installing a new version of the NMR Suite. "],["824582667","cf","824582667.html","",null,""],["812807691","Configuration of a Workstation to Control a Spectrometer","812807691.html","",null," If the Workstation does control a spectrometer be sure that your spectrometer is booted.   Clickcfin the Configuration check window or typecfin the command line of the TopSpin main window.  Enter the NMR administration password in the next window and clickOk. Every time you want to access or change the configuration this password request will appear.    The first cf window is displayed.   Most likely you will select an existing configuration and clickNextto confirm this configuration. ClickNew Spectrometerto start a new configuration. In this example the configuration CAB AV4 400 MHZ BASIC is an existing spectrometer configuration for an Avance Neo 400 MHz spectrometer. If only the Bruker_default_TRX_600 configuration is shown (see below), then a previous configuration could either not be detected or doesn't exist.   If an older TopSpin version with an appropriate configuration exists, then you can load it by clicking on New Spectrometer. The following window will be displayed.    You can choose from one of the following three options.   Import a datastation from … This will bei explained in chapterConfiguration of a Processing-Only Workstation Using an Existing Spectrometer ConfigurationandConfiguration of a Processing-Only Workstationand only makes sense when you configure a processing-only workstation and not a spectrometer.  Import as spectrometer from... Browse to the TopSpin configuration directory where you want to import from.   Use the option AV connected to workstation at local IP address 149.236.99.9. This is the recommended option, if available.   Both options 2 and 3 will bring you back to the main cf window. It will now show the imported configuration.      ClickNextto continue the configuration. A window with the basic spectrometer frequency will be displayed.      Check or enter the spectrometer description, the 1H frequency of the magnet and magnet polarity. Enablepower checkand clickNext.  The progress of the configuration procedure is displayed.    Depending on the hardware configuration optional devices will be displayed. Please keep in mind that this is an example. Specific entries may be different.      When finished, clickNext. A summary window will be displayed.        ClickNext. The channel routing window will be displayed. Check and correct it, if necessary.      ClickClose. The Additional Setups window will be displayed.      Note:The most important next configuration steps areEdprobe,ExpinstallandEdprosol.  Edprobe   ClickEdprobe. The Edprobe window will be displayed.    If the current probe is recognized through the PICS (Probe Identification Control System), then it will automatically be selected.   ClickEdit Propertiesto check or set the properties. ClickClose. The probe RF connections will be displayed.      Check and correct them, if necessary. ClickSave and CloseorClose. Expinstall   ClickExpinstall. A Password request window is displayed.      Enter the NMR administration password to display the first Expinstall window.      ClickNext, if there are no modified Bruker-Parameter files, AU-programs and Pulse-programs or files and programs are archived in a different directory. Individual Parameter files, AU-programs and Pulse-programs with different names to the original Bruker files will not be affected during the installation.  In the next window select the type of acquisition. In the example a High Resolution System has been checked.      ClickNext.      Select the spectrometer or data station configuration forexpinstall. Here theCAB AV4 400 MHZ BASIChas been selected. If this window is not displayed, then TopSpin has found only one valid configuration, namely the one for the current spectrometer, and immediately continues with the next window. ClickNext.  In the next window select the items to use for the spectrometer or the processing-only Workstation configuration. Accepting the default settings is a good choice. Then clickNext.      In the next window enter the basic frequency of the spectrometer and the pre-scan delay. All settings should be correct. Nevertheless in case of a configuration to control a spectrometer they should be checked. ClickNext.      ClickNextto display a summary of options executed byexpinstall.      Check this list.  To change an option, clickBackto the window(s) where corrections have to be done. Then clickFinish.  The installation of the selected items will start now. Wait until this process has finished. In the TopSpin status line the progress of the installation is monitored. At the end of expinstall a Cron check window is displayed.      ClickAutomatic Backupto open the NMR Save window.      Define the locations for saving and restoring the installation and user files.  ClickAutomatic Backupto periodically save the configuration specific files. It might be useful to save the periodical backups on a network drive. Enter the network drive as location of backup file in the NMR_Save window. ClickAutomatic Backup, the chosen drive is set and cannot be edited anymore. For more information see Backup and restore of important files with nmr_save.   Set job, options and rules for an periodical backup.  Note: The command box cannot be edited!      ClickOKand enter the NMR administration password.  In the NMR Save window, clickSave. The compilation of an AU program will start. When this process is finished the Additional configuration programs window is displayed. Edprosol   ClickEdprosolto enter the probe and solvent dependent parameters. It is necessary to execute Edprobe first (see above) because the probe parameters are needed.    For detailed information about the parameters and how to define them please refer to the Bruker Edprosol manual. Optional commands You may want to check the optional configuration commands as listed below in the last cf window.      When done, clickFinish.                           "],["812813323","Configuration of a Processing-Only Workstation Using an Existing Spectrometer Configuration","812813323.html","",null," If the Workstation does not control a spectrometer but is used in connection with a particular spectrometer, e.g. for setting up experiments, processing or plotting you should configure it like that spectrometer. To transfer the configuration of the spectrometer to the processing-only Workstation execute the following steps:   Save the desired configuration on your spectrometer Workstation withnmr_save(see Backup and restore of important files with nmr_save)      Copy this archive file to the processing-only Workstation.  Restore the configuration with thenmr_restorecommand to the processing-only Workstation (see Backup and restore of important files with nmr_save)      The spectrometer configuration is now available. It will appear in the expinstall window and can be used to configure the Processing-only system.  Clickcfin the Configuration check window or typecfin the command line of theTopSpinmain window. Enter the NMR administration password when prompted for it. In thecfwindow, clickNew Spectrometer. Enter the pathname to the above imported spectrometer configuration or clickBrowseto select it.    Here the configuration stored as remote_spect has been selected:      ClickSelect, the name will be entered in the “from” field:      ClickOKand enter a suitable name for the spectrometer configuration to describe it in a meaningful way, e.g. av400_neo:      ClickSave.    Thecfwindow will be displayed. ClickCanceland continue withedprobeandexpinstall.    In theexpinstallwindow, the available spectrometer list should show the av400_neo entry. Select it and continue as outlined in the previous chapter.         "],["2102860555","Configuration of a Processing-Only Workstation","2102860555.html","",null," If the Workstation does not control a spectrometer and is just used for processing only, then only expinstall needs to be executed. Proceed as outlined in the previous chapters and for instance selectBruker_default_TRX_600as an example configuration.    "],["824616587","cortab","824616587.html","",null," NAME cortab-Setup acquisition correction table DESCRIPTION The commandcortabopens a window from which amplifier and receiver correction tables for acquisition can be created (see the next figure).  Cortab Main Window Before this window is opened, you are prompted for the NMR Administration password. The correction tables are used to correct the non-linearity of the pulse power level versus the pulse length, and also to cancel out the influence of the receiver gain on the phase of the resulting spectrum. The amplifier linearization is performed in a range from -6 to above 75 dB and involves both amplitude linearization and phase correction, whereas the receiver phase correction is performed in a receiver gain range from 0.25 to above 1000. For the amplifier linearization, it is required that the amplifier output is connected to an external attenuator (the Cortab Box) which, in turn, is connected to the receiver input. The Cortab program will inform you how to connect the cables. The result of an amplifier linearization is a correction table which is a list of correction values for the pulse amplitudes and phase values. It also contains a check sum which makes it possible to detect whether the file has been changed in any way other than by Cortab. An example of a correction table is shown in the next table.   Correction Table     AMP_POWER     # power  in dB correction in %   -6.000  0.000   -5.000  -32.644   -4.000  -38.510   -3.000  -37.361   -2.000  -35.032   -1.000  -31.672   0.000  -29.128   1.000  -24.939   2.000  -22.977   .. ..     72.000  -0.008   AMP_PHASE     # power in dB correction in degree   -6.000  0.000   -5.000  -0.636   -4.000  0.622   .. ..     72.000  4.323   # real probe input power in [W] (at -6dB)   AMP_VALUE     60.000000  0.00   # NAME_OF_TABLE:  amp2_1H_2   # DATE_OF_ORIGIN:  2010\/01\/05-14:23:22.356   ##END     # hash MD5: 99 A6 79 CA 61 B1 75 1D 2E D1 6C 79 84 FD 08 2F Once a correction table exists for a specific nucleus and routing, it is automatically used by acquisition commands likezg(this can be verified in theedaspwindow of the acquisition data set by a green dot, shown in the next figure.   If you want to check the accuracy of the amplifier linearization, Cortab allows you to do that by running a so called verification test. This test is always performed after the linearization procedure but can also be done in a separate experiment. The receiver phase linearization (\"REC Phase Linearization\") is independent and may be performed even if other correction tables already exist. It creates an additional table where theoretical and experimentally determined receiver gain values are listed (rec<x>_calibration.txt). Amplifier linearization can be performed in two possible ways: For the linearization the amplifier output is connected to the HPPR preamplifier (as in an NMR experiment) and the preamplifier output is connected to the Cortab Box. The signal path including the preamplifier is used for the linearization procedure because it is a better simulation of the NMR experiment. The Cortab window allows you to set up the linearization experiments for various nuclei, perform these experiments and view the results. Correction tables that already exist are displayed in a list ('Available Correction Tables'). The list also contains a key word ('amp', ’pow’ or 'rec') for each correction table, indicating whether the respective table belongs to an amplifier (amp) or a Receiver (rec). In case of an amplifier table the respective maximum amplifier output power (measured at the input of the probe) is also displayed. The ’pow’ key does not represent a correction table but indicates that merely a maximum output power value is defined for a certain routing without the existence of a correction table. If an amplifier table is generated for the respective routing, ’pow’ will be replaced by ’amp’. In the reverse case, if an amplifier table is deleted, ’amp’ will be replaced by ’pow’ provided that the amplifier table contains a valid output power value. A regular Cortab session involves the steps listed below. Each step is specified by the corresponding button in the main Cortab window. New Experiment To start a new experiment the Power Check (POWCHCK) must be deactivated. Clicking this button opens a dialog box where you can define one or more Cortab experiments. Cortab experiments should be defined for each nucleus and routing that you intend to use in your NMR measurements, an exception being the Receiver Phase Linearization which is frequency independent and needs to be performed only for one single (arbitrarily chosen) nucleus. The following functions are available:   BLA Power Definition without measurement (this generates an ’pow’table)  BLA Verification  REC Phase Linearization + Verification (this generates a ’rec’ table)  REC Phase Verification In case a Cortab box is installed some further experiments are possible (see description of Cortab box features below). BLA and REC experiments must be executed in two separate series because they require different hardware connections. First you must set up one series for the REC functions and execute this series (seeStart Experimentsbelow). Then you can set up and execute a second series for the amplifier linearization.  NOTICE   Please note that the Cortab correction is mainly determined by the BLA linearization (see theCorrection Table). This improves the quality of the resulting correction tables. The verification procedure is optional. It allows you to check the quality of the respective linearization results. It simply repeats the linearization but does not create a correction table. Instead, the existing correction table is used and the resulting amplitude and phase values are stored together with the calculated 'ideal' values in the verification files (seeView Verificationbelow). Thus, the verification files are directly correlated with the quality of the correction tables used. Note that you can also run a verification procedure without doing a linearization first. This can be useful to compare the corrected with the uncorrected amplifier characteristics.   New Experiment=>Select Opens the routing table (likeedasp) where you can determine the appropriate hardware routing for the chosen experiment. In case of a REC phase correction, however, the complete routing is determined by the software and no user interaction is necessary. After clicking theSAVE' button, the selected experiment (function) is added to the scheduled series. Instructions are displayed regarding the required hardware connections. Carefully follow the outlined instructions (e.g. to find the preamplifier which must not be used) to prevent damaging the hardware units of the spectrometer. In one Cortab series, you can add:   experiments for various nuclei   one nucleus with various routings   linearization and verification You cannot, however, set an REC correction and a BLA linearization in one series because they require different hardware connections. After having scheduled the experiment, you are prompted for the maximum amplifier output power. This value corresponds to the power (in Watts) measured at the output of the respective HPPR preamplifier module (i.e. at the input of the probe) when you are pulsing with maximum power and using the routing you have already specified. If this power is already known by the system, it will be displayed, otherwise zero is shown. A valid output value is crucial for any kind of output power limitation (e.g. to reduce the possibility of probe damage) of the acquisition software. However, if the respective power value is not known, you can either use zero (ignoring the power limitation possibilities of the acquisition software) or measure it with a wattmeter. In the following dialog window (Quick Experiment Setup) you will be able to (optionally) select a variable number of additional nuclei (together with their amplifier output power, as mentioned above) that are to be linearized with the same routing as the experiment you have already determined. This saves time because you only need to set up the routing table once, even if you want to generate a linearization table for multiple nuclei. The nuclei are selected by applying a user defined search pattern using the tokens ',' (separator) and '-' (nucleus range); for example, the search pattern “1H, 31P-29Si” would select both 1H and all the nuclei in the frequency range between 31P and 29Si. The system automatically stores the last ten search patterns so that they can be reused for further setups (e.g. with a different routing). It is also possible to edit the search patterns by editing the respective filequick_exp_setup.txtin thecortab\/etcdirectory.  New Experiment=>Finish Closes the dialog box and returns to the main Cortab window Start Experiments Clicking this button executes all experiments in the currently scheduled series. They are performed in the order in which they appear in the list. If a correction table already exists for the current experiment, it is renamed by appending the current date to its name. Its file will be overwritten if a further experiment with the identical setting is started at the same date. Please note that you must, temporarily, switch off the peak power limitation in order to run Cortab. To do that, runcfdeactivating POWCHK. After Cortab has finished, runcfagain activating POWCHK. At the beginning of the linearization, you may be prompted for the total external attenuation used. Cortab uses this value to generate scaled correction tables. Each linearization experiment involves the following steps:   A receiver gain test This determines the optimum receiver gain for the current experiment. If this is successful, the experiment continues with the next step. If this is not successful, the experiment aborts and an information window will appear telling what to do. Just follow the instructions.  The actual Cortab experiment, for example the BLA amplifier linearization. In principle, you are ready now. The correction table has been created and it will automatically be used by the acquisition. If, however, you want to check the Cortab result, you can do that with theView Verificationbutton (or - for a quick preview - by simply moving the mouse over the respective table entry in the Cortab Main Window), or simply double-click on an entry of the 'Available Correction Tables' list as described below. View Verification This button is only active when an entry is selected in the Available Correction Tables list of the Cortab window. Clicking this button (or double-clicking a list element) will then open a window where the results of the selected experiment are shown. The window consists of the following fields:   Date of the experiments  A list of dates at which Cortab experiments were performed.  Name of the experiments When a date is selected, a list of result filenames created at that date is displayed. The respective file extensions denote the creation time of each test. For example:   Amp_Power_res<1048>    Amp_Phase_res<1048> When you click an entry, the contents of the corresponding file are shown. Note that files like Amp_Power_res do not contain the actual correction values but rather the theoretical “perfect” values and the experimental values acquired on the base of the existing correction table. The smaller the difference between theoretical and experimental values, the better is the corresponding correction table. Therefore, the result files contain two simple statistical key values which make it easier to estimate the overall quality of the correction file (average deviation and standard deviation from the theoretical values). The smaller these values are, the better is the correction table used for the verification. NOTICE   Please note that verification files can be deleted to save disk space without affecting the correction tables they correspond to.   A data field where the contents of the selected file are displayed.  Furthermore, the following push buttons are available:   View Graph Opens a window with graphical and printable representation of the Cortab result.   OK Closes theView Graphwindow and returns to the main Cortab window. Scheduled Experiments Clicking this button opens a dialog box where the currently scheduled experiments are shown. The dialog box contains the following buttons:   Remove All: removes all experiments from the scheduled list.  Remove: removes the selected experiment from the list.  OK: exits the dialog box and returns to the main Cortab window.  Cortab experiments use two spectrometer channels simultaneously:   The pulse channel: selected by the user in the Cortab New Experiment, i.e. the channel that is routed to the amplifier) that is being corrected.  The observe channel: automatically selected by the Cortab program. If the pulse channel is f1, the observe channel is f2. Otherwise the observe channel is f1. USING A CORTAB BOX If a Cortab box is installed some further experiments are available:   BLA Linearization + Verification + Power Scaling (generates the ’amp’ table and measures the maximum output power of the amplifier).  BLA Power Measurement (measures the maximum output power of the amplifier).  Additionally, in the Cortab box Routing Scheme in the New Experiment Window (see the next figure), it has to be determined which amplifier is connected to which input of the Cortab box. After that it is possible to set up and schedule experiments for all amplifiers selected in the Cortab box Routing Scheme since the Cortab box will switch the amplifier outputs automatically for each experiment.   Cortab - New Experiment SEE ALSO zg     "],["2905530123","edcstm","2905530123.html","",null," NAME edcstm– edit customer \/ system setup DESCRIPTION The commandedcstmopens a window where customer \/ system information can be edited. This window can also be opened fromManage | Spectrometer | Experiment \/ Parameters | Edit customer \/ system information (edcstm). The information entered here is used in preparation of the spectrometer and \/ or accessory acceptance protocols. All general information provided in these reports is taken fromedcstmwindow.    It contains three sections of information:   Customer Info Customer Name*, Operator Name, Company*, Address, Postal Code, City*, Country, Phone Contact Customer*, Mobile, Fax and E-Mail*  Bruker Info Engineer*, Office*, Central Hotline Phone*, Central Hotline E-Mail*  System Info Order No. *, Contact Service No., System Type, Console Part and Serial No., Coil, Dewar, Shim System Offset*, Shim System Angle, CryoProbe Order No., Location, Register No. It is advisable to enter the information as precisely as possible. The content will be used in spectrometer acceptance protocols, accessory installation protocols, repair and maintenance protocols etc. The file is also copied into thesavelogsarchive to provide help desk functions with system and contact information. NOTICE   Please note that the fields marked with * are required fields. Some information will automatically be taken from the installation procedure (commandcf). To edit this information the NMR administration password is required. OUTPUT FILES   <tshome>\/conf\/global\/edcstm.info   "],["824638219","ednuc","824638219.html","",null," NAME ednuc- Editnuclei table DESCRIPTION The commandednucopens the nuclei table showing a list of nuclei with their names, receptivity, spin andbasic frequency (see the next figure).  ednuc - Nuclei table The buttons of the nuclei table have the following functions:   Add\/Edit Edit a table entry or add a new one. A dialog is opened (see the next figure) where you can enter or change values. If you enter a newNucleus, an entry is added to the list, otherwise the current entry is edited.  Delete Delete the selected entry\/entries.  Restore Restore the original nuclei table. All changes you made will be undone. This must be done once, if you have changed the basic frequency withcf.  Save Save any changes the nuclei table. You will be prompted for the NMR administration password.  Close Close the nuclei table.  ednuc - Add new nucleus NOTICE   Note that double-clicking a table entry also opens the dialog you see in the figure above but only allows you to change the frequency. INPUT FILES   <tshome>\/conf\/instr\/<instrum>\/   nuclei-nuclei table  <tshome>\/exp\/stan\/nmr\/lists\/   nuclei.all- complete nuclei table (input andRestore) OUTPUT FILES   <tshome>\/conf\/instr\/<instrum>\/   nuclei- nuclei table SEE ALSO edsolv,edprobe,edlock,edprosoll   "],["824649611","edprosol","824649611.html","",null," NAME edprosol- Editprobe andsolventdependent parameters DESCRIPTION The commandedprosolopens a dialog box in which you can set the probe andsolvent dependent (Prosol) parameters (see the next figure). This is typically done during the installation of your spectrometer for all probes and solvents you want to use. However, you can also runedprosolagain at a later time to set theProsol parameters for additional probes and\/or solvents. Setting theProsol parameters involves the following steps:   Select the probe, solvent(s) and nucleus by clicking:   Probe By default, the current probe (as defined withedprobe) is selected. Prosol parameters must be defined for each probe separately. To select a probe click on theSelect …field: a list of all available probes will be shown.   Solvent The default value isgeneric.If you keep that value, the same prosol values will be stored for all solvents. If, however, you select a specific solvent, the prosol parameters will be specifically stored for that solvent. Ifgetprosolis executed and prosol parameters exist for the solvent in the dataset then these values are read, otherwise the generic values are read.  Observe \/ Decouple The combination of the Observe and Decouple nuclei is read from the current dataset. If one wants to set prosol values for a certain nucleus then the nucleus can be selected through the Observe \/ Decouple drop-down list or by directly clicking on the corresponding nucleus line.  Observe Comment \/ Decouple Comment This step is optional. You can enter two comment lines; for example the conditions under which the pulses\/power levels have been determined (filters etc.).    Edit prosol parameters (Base View) The above figure shows the default layout of theedprosolwindow (Base View). Theedprosolmenu bar offers the following functions:   File:contains functions for file handling  Edit:contains two primary functions(amongstothers): Set Default Pulse Widths:resets pulses to the default values. Set Default Descriptions:resets the descriptions to the default values.  View: allows to toggle between two display modes:Base View and Full View. Compared to theBase Viewoption theFull Viewoption shows additionally the relations between the prosol parameters and the pulses used in the pulse program. The relations are stored in the assignment file that can be selected in the Pulse Assign File line.   Edit prosol parameters (Full View, no pulse assign file selected).  Edit prosol parameters (Full View, pulse assign file selcted). In Full View mode once a pulse assign file has been selected, the iconallows to view the relations between the prosol parameters and the pulses used in the pulse program (column rel). If no pulse assign file has been selected, the iconappears in this column. In both view modes the iconallows to calculate all power levels of all pulses that correspond to the respective observe or decouple pulse. A dialogue window opens and the user can choose to calculate all pulses of the set or only the calculated pulses:  Prosol: Calculating dialog window  NOTICE   Calculating all pulses of the set will include also individually calibrated pulses.  View Mode for Powertoggles the power levels between Watt and dB.   Help: provides access to the prosol-related help files. There are four different tabs to enter the pulses and power levels used in Bruker pulse programs:   90 deg. Pulses Shows the list of 90 deg. observe and decouple pulses.  HR Square Pulses Shows the list of square pulses (e.g. cpd pulses and roesy and tocsy spinlock pulses).  HR Shaped Pulses Shows the list of shaped pulses (e.g. selective excitation pulses, selective refocusing pulses, bandselective excitation pulses).  Others Shows some general pulses and delays that are not nucleus dependent, like the pre-scan delay DE, FILCOR etc. FILCOR is a correction to the acqt0 value which is used by the baseopt filter. It takes into account that the excitation signals as well as the FID need some time to propagate through the cables and the transmitter or receiver, respectively. This propagation time creates an inevitable delay between the excitation and the receiving of the FID. In contrast to the value acqt0 which depends solely on the pulse program, FILCOR is a hardware correction value. Typical values are in the order of 1 μsec or less.  The buttons on the bottom of theedprosolwindow provide functionality to save, print and copy the prosol parameters.  To the left of theSavebutton, you will find the following buttons:   Last Save Resets the prosol parameters to the last backup.  Print Print the currently selected prosol parameters.  Copy to Probe Open a list of all probes. You can select the probe(s) for which you want to store the prosol parameters.  Copy to Solvent Open a list of all solvents. You can select the solvent(s) for which you want to store the prosol parameters and then clickSaveto store it. Theedprosolwindow allows you to set up aprobe dependenttune file. You can do that by clickingEdit |Edit tunefile. Probe dependent tune files are read by the commandtune.sx. The prosol parameters are interpreted by thegetprosolcommand that copies them to the corresponding acquisition parameters. Therelations between prosol and the pulses used in the pulse program are listed in the relation files (pulse assign files). If the pulse program refers to a specific relations file (pulse assign file) it will be interpreted. If no relations file is specified in the pulse program the default relations file will be interpreted. NOTICE   Note thatgetprosolis automatically performed as part of the IconNMRautomation. Note that theprobe andsolvent dependent lock parameters are set withedlock. INPUT FILES   <tshome>\/exp\/stan\/nmr\/lists\/group\/ example- exampletune file (input for firstFile|Edit tunefile)  <tshome>\/prog\/tcl\/xwish3_scripts edprosol- Tcl\/Tk script that is started byedprosol  <tshome>\/prog\/tcl\/libtix\/prosol\/lib\/lists routing- default spectrometer routing INPUT AND OUTPUT FILES If you select Solvent(s)All:   <tshome>\/conf\/instr\/<instrum>\/prosol\/<probeID>\/   nucleus.channel.amplifier- standard prosol parameters  params- global (channel independent) prosol parameters  tunefile- probe dependent tune file (input forFile|Edit tunefile) If you select a specific solvent:   <tshome>\/conf\/instr\/<instrum>\/prosol\/<probeID>\/<solvent>   nucleus.channel.amplifier- standard prosol parameters  params- global (channel independent) prosol parameters  tunefile- probe dependent tune file (input forFile|Edit tunefile)   SEE ALSO getprosol,edlock          "],["824664843","edscon","824664843.html","",null," NAME edscon-Edit spectrometer constants DESCRIPTION The commandedsconopens a dialog window, where you can set certainspectrometer parameters (constants) (see the next figure).   Edscon  The term constant refers to the fact that these parameters count for all datasets.edsconmust be executed once as part of the spectrometer configuration. Changes in theedsconparameters can be stored by clickingOK. You will be prompted for the NMR Administrator password. BLKTR is an array of amplifier blanking preset times. This means they only allow RF signals to pass during the time they are blanked. Because of the finite switching time, blanking is triggered before the start of the RF pulse. The amplifier is blanked BLKTR μsec before the pulse. It is unblanked (allows no further RF passing) at the end of the pulse. The use of theedsconpreset parameter BLKTR can be switched off by inserting the statement presetoff at the beginning of a pulse program. This has the same effect as setting all elements of BLKTR to zero. In this case, the blanking steps described above occur at the beginning of the RF pulse. Nevertheless, you can enable the preset blanking for each individual channel, e.g.: 2μ gatepulse1;enable blanking for channel f1 2μ gatepulse1|2;enable blanking for channel f1 and f2 In this example, the blanking of the transmitter and preamplifier is triggered 2 μsec before the RF pulse. Theedscondialog box also shows the so calledpre-scan subdelays. These are all part of thepre-scan delay DE. This is a hidden delay (it is not specified in the pulse program) that is automatically introduced by thegostatement. DE consists of 5 pre-scan delays DE1, DERX, DEADC, DEPA and DE itself. The sub-delays DE1, DERX, DEPA and DEADC are global parameters which depend on the properties of the respective spectrometer hardware. DE is also set globally but can be changed temporarily by defining a value in the pulse program. DE mostly depends on the dead time of the probe, but also on the digitization mode of the current experiment For DIGMOD=baseopt it is additionally adjusted by the software in order to meet the preconditions for this procedure. DE starts with the \"go = ..\" instruction of the pulse program. All delays end simultaneously at the beginning of the data sampling. They act as pre-delays to the data sampling. At the beginning of each subdelay a certain action is performed:   DE1: the intermediate frequency (if required) is added to the frequency of the observe channel. This corresponds to the execution of the syrec statement (default 4.5 μsec).  DERX: thereceiver gate is opened (default 1.5 μsec).  DEADC: the digitizer is enabled (default 0.5 μsec).  DEPA: thepreamplifier is switched from transmit to observe mode (default 4.5 μsec). For example, a DERX value of 3 μsec would mean that the receiver gate is opened 3μsec before the data sampling starts. Please note that there is also a mandatory order required for those predelays in order to start the data sampling correctly, i.e. DE1 >= DEPA >= DERX >= DEADC. Normally, the default values, which have been set during the installation of your spectrometer, can be used. Each subdelay has a maximum of DE - 1 μsec. In most pulse programs, data sampling is performed by thegostatement, which automatically triggers the actions mentioned above after the corresponding pre-scan subdelay. If, however, data sampling is performed by theadcstatement, these actions must explicitly be specified in the pulse program. Each action can be performed by a statement with the same name, in lower case letters, as the corresponding pre-scan subdelay. For example, the receiver gate can be opened with thederxstatement. You can typeedpulzgadcto look at an example of a pulse program using theadcstatement. For more information on this topic click: Help|Manuals|Programming Manuals|Pulse Programming INPUT AND OUTPUT FILES   <tshome>\/conf\/instr\/<instrum>\/   scon- spectrometer constants SEE ALSO cf  "],["824676235","edsolv","824676235.html","",null," NAME edsolv-Editsolvent table DESCRIPTION The commandedsolvopens the solvent table (see the next figure).  edsolv This table contains one line for each solvent and shows the solvent name and a short description. Foredsolv, the Solvents tab is automatically selected and highlighted. Please note that the same table is also opened with theedlockcommand. Then, the Lock tab is automatically selected and highlighted. TheSolventstab offers the following functionalities:   TheEdittab offers the following functions:   Add new solvent   The easiest way to add a new solvent is to right click on an existing solvent with properties close to your new solvent. SelectCopy and pastesolvent to copy from this existing solvent to the new solvent. Enter the name of the new solvent and its description. Example: For a new solvent CD2Cl2 right click on CDCl3, which has similar properties. Enter the name of the new solvent CD2Cl2 and in the description field, enter dichloromethane-d2. For the CD2Cl2 example, enter 176K for the melting point and 312K for the boiling point. These two values are just reference for now but might be used in future. You can define the solvent as hidden, specify if this solvent is used as lock solvent and activate the Auto Phase mode. Change to the Lock Parameters by clicking theLock tab, select the new solvent and right click to selectEdit Lock parameters. You'll find all parameters of the solvent used for copy and paste in the first step.   In the Signals part, change the shift in ppm according to the signal used for locking in your new solvent. For the CD2Cl2 example, change the shift of the dichloromethane resonance to 5.33 ppm.  You might want to optimize further lock parameters as described in Optimizing Lock Parameters (seeedlock) Select thespectrum reference tab, right click the new solvent to selectEdit spectrum reference parameters. Adjust the reference shift and search width according to your needs. For the most commonly used reference standard TMS just leave the reference shift at 0 ppm and the search width at 0.5 ppm. In this case the search range is +\/- 0.25 ppm around 0 ppm, which is suitable for TMS. Please note, all solvents not marked as lock solvents will only appear in the list if theShow no locking solventsis active in the Solvents pull down menu (see above). These solvents cannot be used with the lock command.  Edit solvent The parameters entered here are shown when you click on thePropertiestab. Double-clicking on a solvent line in thePropertiestable opens theEdit Solventdialog.  Delete solvent  Copy and paste solvent  Copy the selected probe to all solvent  Copy probe to all solvents  Delete probe from all solvents  Search solvent You can also right-click in the table to add, edit, delete, copy and paste or hide a solvent. Before you start an experiment, you must set the parameter SOLVENT to an entry from the solvent table. If you do this fromeda, you can click the arrow button to the right of this parameter and select an entry from thesolvent list.  SEE ALSO ednuc,edprobe,edlock,edprosol    "],["824686859","edsp","824686859.html","",null," NAME edsp\/edasp-Set up nuclei andspectrometer routing  edspnuclei and spectrometer routing  DESCRIPTION The commandedspallows you to set up the nuclei and the spectrometer routing for the current experiment.edspis equivalent toedaspexcept for the following: edaspreads the irradiation frequencies offsets OFS1, OFS2, OFS3 etc. from the current dataset.edspreads the irradiation frequencies that were last saved.    Information about the amplifiers can be easily obtained by dragging the mouse on the amplifier in theedsp\/edaspwindow (see figure above).  Probe wiring can also be inspected:  The following figures will present several features (tabs) that can be obtained through the mainedsp\/edaspwindow:  edsp\/edasp: show receiver wiring  edsp\/edaspafterrparC13CPD all  edsp\/edasp: tab shows probe wiring and probe power at probe in  edsp\/edasp\"param\"  edspreads the irradiation frequencies offsets OFS1, OFS2, OFS3 etc. that were stored by the previousedsporedasp. As such,edsp\/edaspallows you to transfer the frequency offset for a certain nucleus from one dataset to another. For example: DATASET 1   rpar PROTON all   edasporedsp=>     BF1 500.130 MHz NUC1     SFO1 500.135 Mhz F1     OFS15000.00Hz 1H SAVE  DATASET 2   rpar C13CPD all  edsp\/edasp:rpar13CPD all    edsp=>     BF1 125.757 MHz NUC1     SFO1 125.758 Mhz F1     OFS1 1000.00 Hz 13C     BF2 500.130 MHz NUC2     SFO2 500.135 Mhz F2     OFS25000.00Hz 1H The irradiation frequencies SFO1, SFO2 etc. are automatically adjusted to the corresponding frequency offsets. The commandedspwill be executed as part of thespectrometer configuration (commancf) and must be executed beforeexpinstallwhich installs the standard parameter sets. INPUT AND OUTPUT PARAMETERS seeedasp INPUT AND OUTPUT FILES seeedasp SEE ALSO cf,edasp,expinstall          "],["824697483","expinstall","824697483.html","",null," NAME expinstall-Installpulse programs, AU programs,parameter sets etc. DESCRIPTION The commandexpinstallinstalls pulse programs,AU programs, parameter sets and various other resources for spectrometer usage. On a spectrometer, it must be performed once, after the installation ofTopSpin and aftercfhas been done. On a datastation,cfis not needed and you can runexpinstallimmediately after the installation of TopSpin. Configure a Spectrometer   ClickManage | Spectrometer | Experiments\/Parameters |expinstallor enterexpinstallon the command line. A password request window is displayed.  NMR Super-User Password Request    Enter NMR administrator password to display the first Expinstall window.  expinstall: AU programs installation and compilation window  ClickNext.Bruker supplies Parameter files, AU-programs, Pulseprograms and other files in particular folders.Expinstallmoves these folders to<TopSpin installation dir.>\/exp\/stan\/nmr\/_expinstall_automatic_backupand installs new copies.  Individual Parameter files, AU-programs, Pulseprograms and other files that reside in user-specific folders are not affected by expinstall.  In the next window select the type of acquisition. In the example a High Resolution System has been checked.     ClickNext   Select the spectrometer or data station configuration forexpinstall. Here theCAB AV4 400 MHZ BASIChas been selected. If this window is not displayed, then TopSpin has found only one valid configuration, namely the one for the current spectrometer, and immediately continues with the next window. ClickNext.  In the next window enter the basic frequency of the spectrometer and the pre-scan delay. All settings should be correct. Nevertheless in case of a configuration to control a spectrometer they should be checked. ClickNext.   Click Next to display a summary of options executed byexpinstall.   Check this list.  To change an option, clickBackto the window(s) where corrections have to be done.Then clickFinish. The installation of the selected items will start now. Wait until this process has finished. In the TopSpin status line the progress of the installation is monitored. At the end ofexpinstalla Cron check window is displayed.  Configure a Datastation like a Spectrometer If you want to configure your datastation like your spectrometer, you must first copy theconfiguration directory:   <tshome>\/conf\/instr\/<instrum> From that spectrometer to the data station. Here:   <tshome> is TopSpin home, the directory where TopSpin is installed. NOTICE   Note that this can be different on the spectrometer than on the datastation.  <instrum> is theconfiguration name. See also the description of the commandnmr_save. After copying theconfiguration directory, executeexpinstallas described above for the spectrometer. INPUT PARAMETERS If the taskConvert standard parameter setsis selected,expinstalluses the following input parameters: From the parameter sets as delivered with TopSpin:   BF1 – BF8 - basic frequencies for channel f1 to f8.  SFO1- SFO8 -irradiation (carrier) frequencies for channels f1 to f8.  IN0 - increment for delay D0 (2D and 3D parameter sets only).  IN10 - increment for delay D10 (3D parameter sets only).  SW - spectral width in ppm.  SPOFFS[0-63] -shaped pulse frequency offset. OUTPUT PARAMETERS If the taskConvert standard parameter setsis selected,expinstallstores the following parameters in the parameter sets:   BF1 – BF8 - basic frequencies for channel f1 to f8.  SFO1- SFO8 -irradiation (carrier) frequencies for channels f1 to f8.  SF - spectralreference frequency.  IN0 - increment for delay D0 (2D and 3D parameter sets only).  IN10 - increment for delay D10 (3D parameter sets only).  SW - spectral width in ppm.  SPOFFS[0-63] - shaped pulse frequency offset.  DIGTYP -digitizer type.  DR - digital resolution.  DIGMOD - digitizer mode.  DECIM - decimation factor of the digital filter.  DE - prescan delay.  All routing parameters as defined with the commandsedsp \/ edasp. SEE ALSO cf, (cplbruk, cpluser, compileall, rpar, wpar)       "],["824711179","ha","824711179.html","",null," NAME ha-Show hardware Ethernet addresses. DESCRIPTION The commandhaopens the dialog window showing the addresses of the Ethernet accessible hardware devices. For each device, the Ethernet address is displayed and anOpenbutton is available. Clicking this button opens the default web browser showing the respective hardware configuration. Here, you can set various configuration settings.  ha The commandhacan also be started from the TopSpin menu: ClickSpectrometer => Setup => Ethernet addresses of hardware or ClickOptions => Spectrometer Tools => Ethernet addresses of hardware SEE ALSO cf  "],["824722571","nmr_save, nmr_restore, user_save, user_restore","824722571.html","",null," NAME nmr_save-Save installation specific files nmr_restore- Restore installation specific files user_save- Save user specific files user_restore- Restore user specific files DESCRIPTION The commandsnmr_saveanduser_savesave installation\/user specific files in a backup TAR-file. The commandsnmr_restoreanduser_restoreextract a backup TAR-file to the same or to a different installation. All these commands open the dialog window shown in the next figure, the individual commands being available as tabs.  nmr_save Here you can specify:   Location of the backup file: the storage directory of the backup file.  Installation to be saved: The TopSpin home directory.  Spectrometer configuration: as enter duringcf. Furthermore, you can select   Display default information: the path of the created backup file.  Display additional information: the path of the created backup file, information about directories being saved and converting\/renaming information. The buttonDefine cron jobopens the cron dialog where you can define a periodic save of Bruker or user files (see also commandcron). Here you can save or restore all TopSpin user defined files. This includes:   Spectrometer configuration files (cf)  Parameter sets (rpar,wpar)  Pulse program (edpul,edcpul)  AU programs (edau)  Plot editor layouts (plot,autoplot)  Shim files (rsh,wsh)  IconNMR user information (iconnmr)  Program Licenses (TopSpin, NMRSim, NMR Guide)  Various lists likef1,ds(edlist,zg,gs)  TopSpin macros (edmac)  Probe and solvent dependant parameters (edprosol)  Lock parameters (edlock)  Probe information (edprobe)  Nucleus information (ednuc)  RF Shapes and gradients etc. Furthermore the filesprog\/logfiles\/heliumlog, prog\/logfiles\/heliumloig.errandBruker\/licenses\/license.datwill be saved with the ending.backup. NOTICE   Please note that these files will be stored in the folderconf\/instr\/, no longer in the original folder. Furthermore beginning with TopSpin 3.0 the whole directory<diskless>\/crco_data\/cryotool_log\/will be saved. For more details about the commands nmr_save, nmr_restore, user-save and user-restore please refer to the respective Bruker TopSpin Installation Guides for Windows XP, Windows Vista or Linux. INPUT AND OUTPUT FILES   <tshome> \/nmr_backup   nmr_backup_<date>-<time>.tar(nmr_save)  nmr_backup_<username>-<date>-<time>.tar(user_save)  <tshome>\/exp\/stan\/nmr\/au\/src\/   nmr_save- AU program executed bynmr_save INPUT AND OUTPUT DIRECTORIES nmr_save stores various subdirectories\/files of:   <tshome>\/exp\/stan\/nmr\/py\/  <tshome>\/exp\/stan\/nmr\/lists  <tshome>\/exp\/stan\/nmr\/par\/  <tshome>\/exp\/stan\/nmr\/au\/src\/  <tshome>\/plot\/layouts\/  <tshome>\/conf\/instr\/  <tshome>\/prog\/tcl\/xwish3_scripts\/  <tshome>\/exp\/stan\/nmr\/parx\/preemp\/  <tshome>\/QTP\/  <tshome>\/data\/final\/nmr\/protocolfiles\/  <tshome>\/conf\/global  <tshome>\/prog\/server\/export.conf user_save stores various subdirectories\/files of:   <userhome>\/.topspin-<hostname>  <tshome>\/exp\/stan\/nmr\/py\/  <tshome>\/exp\/stan\/nmr\/lists  <tshome>\/exp\/stan\/nmr\/par\/  <tshome>\/exp\/stan\/nmr\/au\/src\/ INPUT AND OUTPUT DIRECTORIES SEE ALSO cf,expinstall, (cron)  "],["824734731","paracon","824734731.html","",null," NAME paracon-Change the basic frequency in parameter sets DESCRIPTION The commandparaconchanges the basic frequency in parameter sets. This allows you to use parameter sets that were created on a spectrometer with a different frequency. It opens dialog box shown in the next figure.  paracon Here you can setup a list of available parameter sets. You can select Bruker and\/or User defined parameter sets and uses a match string. The matching parameter sets appear in the right part of the dialog box. To start the conversion, select one or more parameter sets and clickOK. INPUT AND OUTPUT PARAMETERS Acquisition parameters:   BF1 - BF8 - basic frequency for frequency channel f1 to f8.  SFO1 - SFO8 - irradiation (carrier) frequencies for channels f1 to f8.  O1 - O8 - irradiation frequency offset for frequency channel f1 - f8 in Hz.  SW - spectral width in ppm. Processing parameters:   SF - spectralreference frequency. INPUT AND OUTPUT FILES   <tshome>\/exp\/stan\/nmr\/par\/*\/   acqu - acquisition parameters  proc - processing parameters SEE ALSO expinstall  "],["2837247499","Miscellaneous","2837247499.html","",null,""],["2829738507","Using two different gradient systems","2829738507.html","",null," In some special configurations your spectrometer can be equipped with two different kinds of gradient amplifiers:   The internal GAB in the BSMS common to most spectrometers  An additional imaging gradient system (BGA, GREAT) In most of such cases, there are also two different probes available, one which should be used together with the GAB and another one which should be used together with the imaging system. Once the assignment of a specific probe to a certain type of gradient amplifier system and the preemphasis settings for that probe have been saved, the acquisition (and in particular alsotopshim) will always take those saved settings and choose the gradient system according to the currently installed probe, as specified inedprobe. Choosing a different gradient system for a specific probe can be accomplished as follows (applies also for the rare case of using the same probe with two different gradient systems):   If you need your current preemphasis settings for future work, make a backup before: entersetpreand click onwrite to epuand close thesetprewindow  Entersetpre -selectand choose the desired system by clicking on it  Then the usualsetprewindow pops up  Perform all relevant settings there  Click onsave as default, otherwise these changes will have no effect  Remember that this overrides all your previous settings for the default configuration The respective parameters formerly used inedscon(GRADCHAN, GRADPRE) have no effect anymore. "],["824745355","Lock Commands","824745355.html","",null," This chapter describes the commands that are involved in locking the magnetic field. Avance spectrometers use adigital lock which is provided by theBSMS unit. Locking the magnetic field is done by measuring the signal of a lock nucleus and adjusting the magnetic field whenever its frequency shifts. Common lock nuclei are 2H and 19F.  NOTICE   Please note that the Fourier 80 Lock procedures are described in the Fourier 80 User Manual. "],["824749835","edlock","824749835.html","",null," NAME edlock- Edit thelock table DESCRIPTION The commandedlockopens the lock table; a dialog box in which thelock parameters can be set (see the next figure). Foredlock, theLocktab is automatically selected and highlighted. Please note that the same table is also opened with theedsolvcommand. Then, theSolventtab is automatically selected and highlighted.  edlock edlockmust be executed once for eachprobe and eachlock nucleus. The lock parameters can be determined from theBSMS display (commandbsmsdisp). Before you runedlock, you must have defined the currentprobe with the commandedprobe. Furthermore, you must have defined thelock nucleus by setting the parameter LOCNUC. This can be done withedaor by enteringlocnucon the command line. In most experiments, the lock nucleus isdeuterium. As such, LOCNUC is set to 2H in mostBruker standard parameter sets (seerpar). Whenedlockis executed for the first time on a certain probe, a default lock table, which is delivered with TopSpin, is opened. The main part of the lock table shows a list ofsolvents and, for each solvent, thelock parameters. Most lock parameters are used for locking the magnetic field during the acquisition. Others, however, are used forreferencing the spectrum after the acquisition has finished. With a right-click on a solvent line several commands and options become available (see screenshot below).   Lock Parameters Used To Lock The Magnetic Field:   Lock Power - power used to irradiate the lock nucleus (-60 to 0 dB)  Lock Power Instep - displays the Initial Step for the Lock Power. This value is used for the Initial Lock Step, to be added to the Lock Power. Example: For CDCl3, the Lock Power is -28, the InStep is +10, so the Initial Lock Power Step will be done with -18 dB.  Loop Gain - lock regulator gain (-80 to 0 dB). It is set at the end of the acquisition to the loop gain currently set on the BSMS unit. This usually, but not necessarily corresponds to the value of the Loop Gain in the table. If lock-in was performed with the commandlock, the loop gain is first read from the table and set on the BSMS unit. However, usingautolockorLock on\/offin bsmsdisp performs lock-in without first reading the table.  Loop Time - lock regulator time constant (0.001 - 1.0 seconds).  Loop Filter - lock regulator cut-off frequency of the lowpass filter (1 - 200 Hz).  Lock Phase - the phase of the lock signal.  Shift [ppm] - Chemical shift of the lock nucleus (irradiation frequency offset).  Relative intensity - provides the relative intensity where a solvent has several signals.  Type - if a solvent has several signals, then Type defines which signal is used for locking. This is either the sharpest or the best separated one. Typically, the most intense signal is used (see relative intensity). Relative intensity and type are only shown when a solvent has been selected. The lock parameters are interpreted by the commandslockandlopo.  The loop gain, loop time and loop filter can also be set with the TopSpin commandslgain,ltimeandlfilter, respectively. Furthermore, they can also be set from the BSMS keyboard menu. NOTICE   Note the difference between loop gain which can be set inedlockor withlgainand lock gain which can be set in the BSMS display. The AU programloopadjautomatically optimizes the lock phase, lock gain, loop gain, loop filter and loop time. Note thatloopadjoptimizes these parameters for best long-term stability, but not for best lineshape, resolution or homogeneity (for more information typeedauloopadjand look at the header of the AU program).  Optimizing Lock Parameters Lock Power After the sample has been locked and shimmed, start the auto-power routine from thebsmsdispcommand. For lock solvents with long T1 relaxation times (e.g. CDCl3), auto-power might take an unacceptably long time. In this case a manual optimization of the lock power is recommended. Increase the lock power until the lock signals begins to oscillate (until saturation), and then reduce the power level slightly (approximately 3 - 6 dB). Do not reduce too much, as this will affect the field stability. Alternatively, you might use a gradient experiment (e.g. Parameter set COSYGPSW, or the pulse programpreempgp2) to observe the gradients on the lock. In case of optimum lock power, the lock signal will return to normal level after the gradient. An overshoot before returning to the normal level is caused by saturation, so reduce the lock power until this overshoot is no longer visible. Lock Phase Use the auto-phase feature inbsmsdispto optimize the Lock Phase. Lock Gain Use the auto-gain feature inbsmsdispto optimize the Lock Gain. Loop Gain, Loop Time and Loop Filter Generally, these parameters should be already suitable in the default Bruker Solvent list, so there should be no need to change them. However, the AU program loopadj can be used to automatically optimize loop gain, loop time and loop filter for optimal long-term stability. Alternatively, the following procedure might be used: Note the Lock Gain value after the auto-gain routine has optimized it. Using this value, select the appropriate values for the loop filter, loop gain and loop time as shown in the following table:      Lock RX Gain (after auto gain) [dB]  Loop Filter [Hz]  Loop Gain [dB]  Loop Time [sec]   120  20  -17.9  0.681     30  -14.3  0.589   110  50  -9.4  0.464     70  -6.6  0.384     100  -3.7  0.306   100  160  0.3  0.220     250  3.9  0.158     400  7.1  0.111   90  600  9.9  0.083     1000  13.2  0.059     1500  15.2  0.047     2000  16.8  0.041 Example: Auto-gain determines a lock gain of 100 dB. From the table, the user should set the loop filter to 160 Hz, the loop gain to 0.3 dB and the loop time to 0.220 sec. This procedure is recommended to use with shielded magnets. For non-shielded magnets a general procedure cannot be given, so the relation between the three parameters should be determined individually. If in doubt, it is recommended to leave the Bruker default parameters unchanged. Optimizing Lock Phase At the top of theedlocktable, the auto phasing of the lock signal can be turned on or off. When auto phase is turned on, the algorithm can be selected from the dropdown list. Autophase and lock are treated differently. The behavior of the lock command with respect to Autophase handling can be controlled independently with a checkbox in theedlockwindow. When turned on, the FFA algorithm (Spectrum) is used. The default behavior is no Autophase during lock andlock level defaultfor the algorithm. In this state the table will contain the lock phase column. With Autophase turned on, the lock phase column is not needed and therefore unavailable. There are three selections for the Autophase algorithm:   Lock level default:This uses the old algorithm, optimization via lock level.  Enhanced lock level:This also uses the old algorithm, but with wider range. It will therefore need more time.  Spectrum:This is the new algorithm (FFA). It will also take longer, but not that much, because a spectrum is measured anyway during locking. This is the recommended selection if Autophase is activated for the L-TRX and execution time is not critical, e.g. in case of high throughput samples. Calibration of the Autophase offset This calibration is mandantory ifAutophaseis selected and spectrum selected for the algorithm. It can be selected via the pull down menu entryBSMS|Calibrate Autophase offset. This control can also be added to the BSMS Display (bsmsdisp) if needed. The following window will be displayed:  Please follow the instructions, insert the recommended sample and clickOKwhen finished.  Please wait until the offset calibration is ready (approximately 1½-2 minutes). The result can be checked on the ELCB Webpage. ClickLOCK|LOCK Configuration|Autolock Configurationand checkPhase offset FFA to Lock.  The ELCB Webpage can also be used to activate the Phase offset calibration. Use the BSMS Service Page and chooseCalibration |Auto Lock Phase Calibration. Again, use a suitable sample as outlined in the Auto Phase Calibration Info field.  NOTICE   Important: The phase offset calibration should be repeated if the 2H Preamplifier is exchanged.  Lock Parameters Used To Reference The Spectrum: Clicking theSpectrum reference tabopens the default list of spectrum reference parameters for the default solvents.     Noise – Signal to Noise value for reference signal detection (initially 10)  Reference Shift [ppm]- chemical shift of thereference signal (default 0).  Reference Shift Corr. [ppm] – additional chemical shift correction value. This value is added after the referencing signal has been detected and referenced.  Search Width [ppm] - This specifies the search width window for the reference signals, e.g. a value of 0.5 ppm will search from -0.25 to 0.25 ppm from the specified reference shift.  Signal Regions – relative intensity scaling of spectrum peaks is performed on the listed regions. The gaps between the regions are excluded. These parameters are interpreted by the commandsref.  TheBSMS Taboffers the following functionalities:  BSMSTab Help menu In IconNMRautomation, the lock parameters are read from the lock table and used as they are. For more information, refer to the spectrometer hardware documentation which is available on the BASH CDROM.  INPUT AND OUTPUT PARAMETERS See DESCRIPTION above SEE ALSO lock,lopo,edprobe,lockdisp,lgain, ltime, lfilter          "],["824763531","lgain, ltime, lfilter","824763531.html","",null," NAME lgain - Set thelock regulatorloop gain. ltime - Set thelock regulatorloop time. lfilter - Set thelock regulatorloop filter. SYNTAX lgain [<gain>] ltime [<time>] lfilter [<filter>] DESCRIPTION The commandlgainallows you to set the loop gain, a lock regulator parameter. It takes one argument; a loop gain value between -80 and 0 dB. This value is only used when the lock-in process is done by pressingLock On\/OfforAutolock. When lock-in is done with the TopSpin commandlock, the loop gain is set to theedlockparameterLGain. ltimeandlfilterwork likelgain, except that they set the regulator parameters loop time and loop filter, respectively.  ltime  lfilter  lgain The AU programloopadjautomatically optimizes lock gain, lock phase, loop time, loop gain and loop filter. The regulator (loop) parameters can also be set in the BSMS display. For information on how to determine the lock parameters clickHelp|Manuals |Acquisition User Guides|Basic 1D and 2D Experiments. Furthermore, you can refer to the spectrometer hardware documentation which is available on the BASH CDROM. USAGE IN AU PROGAMS LTIME(value) LGAIN(value) LFILTER(value) SEE ALSO lock,lopo,edlock    "],["824772619","lock","824772619.html","",null," NAME lock-Lock the magnetic field SYNTAX lock [ <solvent> | -acqu | -noauto ] DESCRIPTION The commandlockperforms thelock-in procedure. It takes one argument and can be used in the following ways:   lock Opens a dialog box with a list ofsolvents (see the next figure).  lock When you select a solvent and clickOK, it reads thelock parameters for that solvent from the lock table which has been set up with the commandedlockand performs anautolock. Theautolockprocedure is also suitable for solvents with multiple lock signals. For each solvent with multiple signals only one lock signal is defined in theedlocktable. Right-click in the table to copy or export the selected entry or to modify the table properties. NOTICE   Note thatlockonly shows the Solvents for the current lock nucleus (parameter LOCNUC), in this case 2H.    lock <solvent> Reads the lock parameters for the specified solvent and performs anautolockaccordingly.  lock–acqu Reads the lock parameters for the solvent defined by the acquisition parameter SOLVENT and performs anautolock. NOTICE   Note that IconNMR executeslock-acqu.  lock–noauto Reads the lock parameters for the solvent defined by the acquisition parameter SOLVENT and performs alock. It does not adjust the field (capture range 10 units). Theautolockprocedure involves the following steps:   Irradiation of the lock nucleus with frequencyLock Freq+Reference Shift.  Acquisition of the lock nucleus FID.  Fourier transform and magnitude calculation of the acquired FID.  Determination of the position of the lock signal in the spectrum.  Adjusting the Field such that the lock signal is exactly on resonance.  Optimization thelock power andlock gain. NOTICE   Note that the lockirradiation frequency (Lockfreq+Reference Shift) issolvent dependent. The value ofReference Shiftis thechemical shift of the lock nucleus in the current solvent. As such, the irradiation frequency is approximately on resonance andlockneeds to make only minimum field adjustments (capture range 1000 units). The advantage of this procedure is that the signal of thereference substance (e.g.TMS) appears at approximately the same position for each solvent.  Thelock signal can be viewed in the lock display window which can be opened with the commandlockdisp(see the description of this command). The lock-in procedure can also be performed through thebsmsdispcommand by pressing theAuto LockorLock On\/Offkey.  In that case the lock parameter values that are currently stored on the BSMS unit are used. These can be modified in the BSMS display. INPUT PARAMETERS   Set by the user withedaor by typingsolventetc.:   SOLVENT - sample solvent (input forlock-acquandlock-auto)  LOCNUC - lock nucleus  Set by the user withedlock:   See alsoedlock. USAGE IN AU PROGRAMS   LOCK Executes the commandlock -acqu. SEE ALSO edlock,lopo,lockdisp,lgain, ltime, lfilter   "],["824790411","lockdisp","824790411.html","",null," NAME lockdisp-Open the lock display window. DESCRIPTION The commandlockdispopens thelock display window in which the lock signal is shown (see the next figure).  Lock Display with locking signal At the top of the lock window the following buttons are available: Open the User Preferences window [set] (see next figure).   lockdisp: Lock Display Preferences  Toggle lock monitor mode. Lock current sample. Togglelockdisplay mode betweensingleanddualcolor. Toggle grid: both, vertical, horizontal, off single. Detach lock window from main TopSpin window. Select TopSpin main window. Close the lock display window.  The lock signal is the NMR signal of thelock nucleus, typically 2H or 19F. The lock display can be used in two different ways:   When the field is unlocked. In this case thelock frequency is swept andlock signal shows a pattern of wiggles with a maximum intensity at the resonance frequency. This pattern can be used to set the field value and lock phase. The field value can be adjusted from the BSMS display (bsmsdisp) until the maximum lock signal lies at the center of the lock display window. The lock phase can be adjusted until the intensity is about the same on both sides of the center.   lockdisp:lockdisplay before locking. The wiggles here represent the2H signal observed in CW mode    When the field is locked. In this case the lock frequency is kept at the resonance position of the lock nucleus and is only adjusted in responds to changes in the magnetic field. The lock signal is a horizontal line in the upper part of the lock display window. Furthermore, the position of this line can be used forshimming the magnet. When thehomogeneity of the field improves, the lock signal increases, i.e. the line moves upward. SEE ALSO lock,edlock            "],["824800267","lopo","824800267.html","",null," NAME lopo- Setthelock parameters. DESCRIPTION The commandloposhows a list of available solvents (see the next figure).  lopo When you select a solvent and clickOK, it sets the lock parameters according to theedlocktable. As such, thelock power,loop gain,loop time,loop filter,lockphase and frequency shift are set to the lock table values of Lockpower, LoopGain, LoopTime, LoopFilt, LockPhase and Distance, respectively. These values are set on the BSMS unit without performing lock-in. Right-click in the table to copy or export the selected entry or to modify the table properties. The commandlopois useful if you want to observe thelock signal first. Thelock-in procedure can then be performed by pressing theLock On\/OfforAutolockkey in the BSMS display. NOTICE   Note that:   lopo=>Autolockis equivalent tolock-acqu   lopo=>Lock On\/Offis equivalent tolock-noauto INPUT PARAMETERS   Set by the user withedaor by typingsolventetc.:   SOLVENT - sample solvent  LOCNUC - lock nucleus  Set by the user withedlock:   See alsoedlock INPUT FILES   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   acqu- acquisition parameters  <tshome>\/conf\/instr\/   probe - current probe as defined byedprobe  <tshome>\/conf\/instr\/<instrum>\/   2Hlock - lock table for nucleus 2H  19Flock - lock table for nucleus 19F <tshome>\/conf\/instr\/<instrum>\/prosol\/<probeID>\/<solvent>\/ bsmspar- solvent and probe dependent lock parameters USAGE IN AU PROGRAMS   LOPO SEE ALSO lock,edlock,lockdisp,lgain, ltime, lfilter  "],["824811659","Shim Commands","824811659.html","",null," This chapter describes the commandswhich are involved in shimming the magnet. Shimming can be started with reading an appropriateshim set for the current sample and then optimizing the shim through the BSMS display (bsmsdisp). In automation, the optimization is performed by an automatic shimming procedure. Furthermore, if you are using a gradient probe, you can perform gradient shimming. All shim commands can be reached through the Shim tab.   NOTICE   Please note that the Fourier 80 Shim procedures are described in the Fourier 80 User Manual.  "],["824816139","autoshim","824816139.html","",null," NAME autoshim-Autoshim switching DESCRIPTION The commandautoshimcontrols the autoshim function of the BSMS unit. It takes one argument and can be used as follows:   autoshim on   turn autoshimming on   autoshim off   turn autoshimming off Enteringautoshimon the command line has the same effect as pressing the AUTOSHIM key through the BSMS display. The shims for which the step size is set to a value greater than 0 are optimized. It is typically used in automation. USAGE IN AU PROGRAMS   AUTOSHIM_ON  AUTOSHIM_OFF SEE ALSO tune,edtune,rsh, wsh, vish,delpar, delgp, delsh "],["2541217675","bsmsdisp","2541217675.html","",null,"  NAME bsmsdisp– Opens the BSMS (Bruker Smart Magnet control System) control panel.  The BSMS provides an overview of the most important features and states of the shim system and magnet. It can be opened in four different ways:   from the TopSpin menu clickingAcquire | Shim | Shim manually using BSMS (bsmsdisp):      with right click in the Lock display in the Acquisition Status Bar |BSMS panel:    clicking the BSMS iconin the TopSpin menu bar  or by typingbsmsdispin the command line.  The BSMS Control Suite main window is opened:   The BSMS Main window tab offers the most prominent functions to control the magnet and the shim system:   AUTO – Automatic lock, phase, power, gain and shim procedure  LOCK – Switch lock on \/ off, lock phase, lock power, lock gain  SAMPLE – LIFT or SPIN the sample on\/off, Measure (show the actual spin rate in Hz), Rate (show\/set the intended spin rate), Always locked shown green (is shown if the lock is on), Lock lost shown red (shows if the lock is lost)  SHIM – displays a subset of currently available shim gradients  The control window offers the possibility to change the respective values using the control knob, in steps using the stepsize or entering absolute values manually.  The STD BY buttonoffers the possibility to deselect the settings.  Shut down BSMS – is recommended before hardware turn-off  Config. – offers the possibility to show the BSMS window in TopSpin or in an external window.  The status bar at the bottom of the BSMS window shows the status of the current sample (down, missing or up) and the current shim coil temperature.  The tabLock\/Leveloffers the possibility to change advanced lock parameters (e.g., AUTO, LOCK, LOOP, SWEEP, HELIUM LEVEL, SHIM COIL TEMPERATURE).  The tabShimoffers the possibility to change advanced LOCK & SPIN parameters and shows the complete set of shim parameters, dependent from the shim system.  BSMS shim panel window (BoSS II shim system)  The tabAutoshimoffers the possibility to turn the shim on or off and to select the shim gradients and their interval to be used duringautoshim.  NOTICE   Please note that all shim coordinates are inactive if their absolute value is set to 0. To activate shims forautoshimyou need to activate the absolute value higher than 0. The tabServiceoffers some more possibilities to control and check the BSMS, e.g. Helium Level and coil temperature settings.  Please note that this service should only be used by experienced users.  The tabServiceoffers the following functionalities:   Helium Level – check the helium level and set Alarm level  Unlock BSMS  Check lock of BSMS – status check  BSMS logfile – show logfile  Coil temperature settings – change Maximum \/ Minimum coil temperature The tabLogshows current error messages, error messages history and info messages which can be cleared or printed:  TheHelptab refers to detailed information about the BSMS functionalities. See also edlock,lock,autoshim           "],["824825227","edtune","824825227.html","",null," NAME edtune-Edit thetune file SYNTAX edtune [<name>] DESCRIPTION The commandedtuneopens a dialog box where you can edit an existing tune file or create a new one (see the next figure). The tune files you see listed here are delivered with TopSpin.  edtune The following buttons are available:   Edit probe tunefile   Edit the probe specific tune file as it was created withedprosol.  Edit   Edit the selected tune file. The file will be opened in an editable window which offers aSaveand aSave asbutton. The latter one allows you to save the tune file under a different name, i.e. create a new tune file.  Execute   Execute the selected tune file. This will run the commandtune.  Delete   Delete the selected tune file.  Cancel   Quit theedtunedialog box. Tune files are used by thetunecommand which performsautomatic shimming.   edtunecan take one argument and can be used as follows:   edtune<name> Edits the specified tune file. If the specified file does not exist, an error message will appear. The format of a tune file is described for thetunecommand. INPUT AND OUTPUT FILES   <tshome>\/exp\/stan\/nmr\/lists\/group\/   example- standard tune file  my_tunefile- user defined tune file  <tshome>\/conf\/instr\/<instrum>\/prosol\/<probeID>\/   tunefile- probe dependent tune file (input foredtune=>Probe tunefile) SEE ALSO tune,rsh, wsh, vish,delpar, delgp, delsh  "],["824835851","rsh, wsh, vish","824835851.html","",null," NAME rsh-Read a set of shim values wsh- Write a set ofshim values vish- View ashim file SYNTAX rsh [<name>] wsh [<name>] vish [<name>] Please note that for rsh and vish the -acqu uses the shim file form the current dataset. DESCRIPTION The*shall open the shim dialog box when they are entered without arguments (see the next figure).  Read shim values  The following buttons are available:   Read Executes the commandrsh, reading the specified shim file. When you click on a shim set, its values are loaded to the shim unit.rshcan also be entered on the command line with a shim file as an argument. After reading ashim file, it is usually necessary to optimize theshims, especially the Z and Z2shim. You can do that from theBSMS display (commandbsmsdisp).rshswitches the autoshim function of the BSMS unit off. If you press theAUTOSHIMkey in the BSMS display or enterautoshimon, the shims will be continuously optimized during the experiment. rsh -acqureads the shim values from the current dataset.  Write Executes the commandwshwriting the shim values which are currently installed on the shim unit to the specified shim file.wshcan also be entered on the command line with a shim file as an argument.  Write Shim Values    View Executes the commandvishopening the specified shim file with an editor.vishcan also be entered on the command line with a shim file as an argument.  Delete Deletes the selected shim file. If he*shcommands are entered the command line with an argument, then they may contain wildcards; for example: rsh a* lists all shim files beginning with “a” NOTICE   Note thatrsh,wshandvishopen the dialog box with theRead,WriteandViewbutton activated, respectively. INPUT FILES   <tshome>\/exp\/stan\/nmr\/lists\/bsms\/   shim files USAGE IN AU PROGRAMS   RSH(name)  WSH(name) SEE ALSO edtune,tune   "],["824847243","tune","824847243.html","",null,"  NAME tune-Performautomatic shimming of the magnet SYNTAX tune [<tunefile> | .sx] DESCRIPTION The commandtuneshims the magnet in anautomatic procedure according to ashim definition file. This file is called thetune file and can be set up with the commandedtune. The commandtunetakes one argument and can be used in one of the following ways: tune Displays a list of available tune files (see the next figure).  Select one of the available tune files When you select an entry and click theExecutebutton, the corresponding tune file is interpreted and auto shimming is performed accordingly. tune <tunefile> Perform auto shimming according to the specified tune file. tune.sx Perform auto shimming according to the tune file as it is specified for the current probe. This tune file can be setup from theedprosoldialog box by clickingFile|Edit Tunefile. An example tune file is delivered with TopSpin. You can use this as it is or modify it to your needs and store it under a different name. The statements you can use in a tune file are listed below. NOTICE   Note that some of these statements are settings whereas others are commands. Settings in a tune file:   USE_FIDAREA   Flag indicating to use the area under theFID envelope as a criterion for fieldhomogeneity.  USE_LOCKLEVEL   Flag indicating to use thelock level as a criterion for field homogeneity.  LOCKDWELL n   The number of measurements used for determining the current lock level. The measured values are averaged to suppress the effects of the noise on the lock level. Only used when USE_LOCKLEVEL is defined.  MAXLOCK m   The maximumlock level. Can be used to keep the lock signal from moving out of the display during the shimming procedure. The lock level is displayed at theTopSpin status line whiletuneis running.  DELAY n   The time (in seconds) between adjusting a shim and reading the new lock level. In the exampletune file, DELAY is set to one second which is usually enough for the lock level to settle.  SET <shim> w c   Set the maximum step size (width) and the convergence limit for theSIMPLEXcommand. These parameters can be set for each shim separately. An example is:  SET Z1 20 3 TIMES n .. END Loop structure; all statements within the loop will be executedntimes. Nested loops are possible to a depth of five. Commands in a Tune File   ROTATION ON WAIT   Switches thesamplerotation on, using thespin rate currently set on theBSMS unit.  ROTATION OFF WAIT   Switches the sample rotation off. NOTICE    Please note that these two commands are useful when switching from on-axis shims (Z1, Z2 etc ...) to off-axis shims (X, Y, XY...) since the first set (Z shims) are typically shimmed with a rotating sample and the off-axis shims (X, Y,XY ...) are adjusted with a non-rotating sample.    RSH,RSH <filename>   Reads ashim file. If an argument is specified, RSH will read the corresponding shim file. If not, it will read the shim file with the name of the solvent defined by the acquisition parameter SOLVENT.  Z s i,Z2 s i, ...,XY s i   Optimizes single shims. These commands take two arguments: s = step size; theshim increment used as long as thelock level increases i = iterations; the maximum number of steps after passing the maximum  A shim is first changedsunits in one direction. If this increases the lock level, the shim is changed againsunits in the same direction. This is repeated until a shim change decreases the lock level. Then the direction of change is reversed and the step size is reduced. This process is continued until one of the following criteria has been met:   The lock level has not changed significantly during the last step.  The maximum number of iterations (i) has been performed.  The step size has been reduced to one. Examples ofshim commands are:     Z 10 3     Z2 10 3     Z3 10 3   SIMPLEX <shim1 shim2 etc.>   Optimizes the specified shims according to thesimplex algorithm which can be used for lock level andFID areashimming. SIMPLEX uses the step size and convergence limit defined by the SET statement (see above). The simplex algorithm is described in theexamplefile (see INPUT FILES below).  AUTOSHIM ON <shim1=m,shim2=n, ...>   Switches on the automatic shimming function on theshim unit after thetunecommand has finished. This command allows you to adjust the shims continuously during the entire experiment. Only the shims that are specified as arguments to theAUTOSHIMONcommand will be optimized. For each shim, you can specify the step size used for auto shimming. If you do not specify the step size, the default value of 5 is used. An example of this command is:  AUTOSHIM ON Z1=2 Z2   Since this command becomes effective after thetunecommand has finished, it can be specified anywhere in the tune file.  AUTOSHIM OFF   Switches off automatic shimming on theshim unit. It makes sure that automatic shimming is switched off when it was switched on before, either from the last executed tune file or manually from the BSMS display. NOTICE   Note that it would not make sense to use AUTOSHIM ON and AUTOSHIM OFF within one tune file.  LOCKPHASE s i   Optimize thelockphase. This command takes two arguments:   s = step size   i = iterations; the maximum number of steps  As an alternative to theautomatic shimming withtune, you can optimize the shims manually from the BSMS display. If the shims are far away from the optimum, you can read a standard shim set with the commandrshand then do manual shimming. An alternative to the simplex procedure intuneis the AU programsimplex. INPUT FILES   <tshome>\/exp\/stan\/nmr\/lists\/group\/   example- tune file  <tshome>\/conf\/instr\/<instrum>\/prosol\/<probeID>\/   tunefile- tune file for the current probe (input fortune.sx) USAGE IN AU PROGRAMS   TUNE(tunefile)  TUNESX Eexecutes the commandtune.sx SEE ALSO edtune,rsh, wsh, vish,delpar, delgp, delsh  "],["2540237323","topshim","2540237323.html","",null," NAME TopShim– Automatic shimming tool DESCRIPTION The commandtopshimopens the automatic shimming tool. For further information please refer to the Gradient Shimming Manual underHelp | Manuals | Acquisition – Application Manuals | Topshim. SEE ALSO tune,edtune,rsh, wsh, vish,delpar, delgp, delsh   "],["824860171","Probe Commands","824860171.html","",null," Thischapter describes the commands which are involved in probe handling. This includes probe selection, the tuning and matching procedure and sample insert and eject. "],["824864651","atma","824864651.html","",null," NAME atma-Automatictuning and matching ofATMprobes. USAGE atma [exact | coarse] [high]. Typeatmaoptionsfor a complete list of options. DESCRIPTION The commandatmaperformstuning andmatching of an ATMprobe. It will automatically perform the following steps:   Stop thesamplerotation if it is on.  Read the nucleus with the lowest frequency as it was set up withedasp.  Determine the optimum sweep width and number of steps.  Tune and match the probe.  Repeat step 3 to 4 for all other nuclei which were set up withedaspin the order of increasing frequency.  Turn on the sample rotation if it was on beforeatmawas started.  The commandatmacan be used with various options, for example:   atmaexactwill determine the optimum tuning and matching more precisely thenatmawithout an argument and will therefore be slower.  atmacoarsewill determine the optimum tuning and matching less precisely thenatmawithout an argument and will therefore be faster.  atmahighwill start with the nucleus with the highest frequency, and tune and match the probe for each nucleus in the order of decreasing frequency.  atma resetwill reset all data collected by the atma software on the workstation and on the probe if it is an IProbe  atmastoreWobb <x>will automatically save the wobble curve after optimisation.<x>stands for the respective procno of the used dataset. If more than one nucleus should be stored than the respectively next wobble curve n+1 will bei stored in the procno number<x+1>(see also commandwbwr). Typeatmaoptionsfor a complete list of options.  On ATM probes,atmacan be used instead of thewobb. These two commands differ in the following respects:   atmais fully automatic whereaswobbrequires the user to perform thetuning andmatching manually.  atmaautomatically determines the optimal sweep width and number of steps whereaswobbuses the values of WBSW and WBST, respectively.  wobbmust be terminated withstoporhaltwhereasatmaautomatically finishes when optimum tuning and matching is reached. If you want to interruptatma, you can do that with the commandkill.  Automatic tuning and matching is not only convenient, it also allows you to tune and match the probe during automation. In IconNMR, you can choose to do that before each experiment, after each sample change or after each solvent change. For more information on the tuning and matching process, seewobb.   Please note: When using an IProbe, the command might appear unresponsive due to processes that can take a few minutes:   After installation of a new TopSpin version the atma server might install a new firmware to the IProbe electronics.  After finishing an automatic tuning procedure, the data on the probe might need compres-sion. In both cases, the status is reported accordingly in theatmmwindow or the topspin status bar. INPUT PARAMETERS   NUC1 - NUC4 - nuclei as defined withedasp INPUT FILES   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   acqu- acquisition parameters  <tshome>\/conf\/instr\/<instrum>\/   nuclei- nuclei table  <tshome>\/prog\/wobble\/   acqu_go4-wobble parameters  Pulsprog_X-wobblepulse program SEE ALSO atmm,wobb,wbwr "],["824874507","atmm","824874507.html","",null," NAME atmm-Manualtuning andmatching of ATMprobes. USAGE atmm [manWbsw] Typeatmmoptionsfor a complete list of options. DESCRIPTION  The commandatmmis a manual tuning and matching procedure for ATMprobes. It is not needed very often because ATM probes are designed for automatic tuning and matching withatma. Sometimes, however, theprobesresonance frequency is so far away from the optimum thatatmawould take very long to finish or would fail. In practice, this only occurs for certain nuclei at broadbandprobes. In that case,atmmallows you to manually tune and match the probe for that nucleus. atmmperforms the following steps:   It reads the nucleus with the lowest frequency as it was set up withedasp.  It determines the optimum sweep width and number of steps.  It shows the reflected power (tuning\/matching curve) in the TopSpin acquisition data field.  It opens theatmmcontrol window from where you can:   See information about the connected probe and the status of the atma server.  Select the nucleus for which you want to tune and match the probe. By default, the nucleus with the lowest frequency is selected.  Start ATMA with a click on the start button which will perform an automatic tuning\/matching. The positions will be stored for further use ofatmaoratmm.  Open an optional window where the complex wobble curve (real and imaginary part) is displayed in a sophisticated representation visualizing more information compared to a conventional wobble curve; this can be helpful to optimize more quickly. Instead of the normal wobble curve, a circle with a red dot is shown which has to be moved into the center of the coordinate system to achieve optimal tuning\/matching.  Perform coarse tuning\/matching on broadband probes. This is the equivalent of setting thesliders on a non ATM probe to predefined numbers.  Perform fine tuning\/matching while observing the curve in the TopSpin acquisition data field. This is the equivalent of turning the knobs or moving the sliders on a nonATM probe. Seewobbfor a description on how to reach the optimum tuning and matching. During tuning and matching with the arrow keys, the positions are saved for the current channel and nucleus combination.atmmwill move to these positions automatically on startup if the channel and nucleus combination will be selected again after rerouting.  ClickCloseto finish the tuning\/matching process.  Ifatmmis used with the argumentmanWbsw, it does not determine the sweep width and number of steps automatically but interprets the parameters WBSW and WBST, respectively.atmmoptionswill show you a complete list of arguments. The difference betweenatmmandwobbis that:   atmmcan only be used on ATM probes.  atmm, when used without arguments, automatically determines the optimum sweep width and number of steps whereaswobbuses the values of WBSW and WBST, respectively.  atmmallows you to optimize tuning and matching from TopSpin whereaswobbrequires you to turn the knobs (or move the sliders) on the probe. For more information on the tuning and matching process, seewobb.   Please note: When using an IProbe, the command might appear unresponsive due to processes that can take a few minutes:   After installation of a new TopSpin version the atma server might install a new firmware to the IProbe electronics.  After finishing an automatic tuning procedure, the data on the probe might need compres-sion. In both cases, the status is reported accordingly in theatmmwindow or the topspin status bar. INPUT PARAMETERS   NUC1 - NUC4 - nuclei as defined withedasp  WBSW - sweep width (only used byatmm manwbsw)  WBST - number of steps (only used byatmm manwbsw) INPUT FILES   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   acqu- acquisition parameters  <tshome>\/prog\/wobble\/   acqu_go4-wobble parameters  Pulsprog_X-wobble pulse program SEE ALSO atma,wobb  "],["824927627","edprobe","824927627.html","",null," NAME edprobe– Edit the probe table DESCRIPTION The commandedprobeopens the probe table editor:  edprobe The table has columns for Nickname (optional), Probe ID and description of configured probes. The Nickname can be freely chosen to identify a probe for the user more easily. The entry which is defined as the current probe is highlighted. If an automatic probe detection through PICS is available, then the currently connected probe is automatically shown as the current probe. In that case theSet as currentbutton is greyed out.  The probe table has a menuManagein the upper left corner that offers the following commands:  Add a new probe Import old probes View Properties Print Flash Pics   Add a new probe The probe dialog editor will be opened where you can define a new probe. The nameof the new probe will be the combination of Part number and Serial number. With Template, one can select typical probe configurations. This simplifies the entry of the probe parameters.  Add a new probe Import old probes If older (edprobe) definitions of probes are available in the current installation, they are listed in the import table. By selecting an entry, all settings of this probe are imported to the probe table.  import View Properties Opens the Probe Properties of the selected entry for viewing only.  Print Opens the printing dialog for the Edprobe Probes Table. Flash Pics Allows to flash the PICS of the current probe  flashpics This requires that the probe is connected with a PICS cable. Only digitally signed PICS files can be used to flash the probe. A new PICS file must be copied (flashed) to a probe if, for some reason, the current PICS of the probe has become corrupted or when additional parameters describing probe features become available in TopSpin. At the bottom of theedprobedialog you can select following buttons:    Edit Properties Opens the Probe Properties of the selected entry for editing.  Edit probe properties with PICS If the probe is connected with a PICS cable, only a few properties can be changed, see figure above. For probes without PICS, all properties can be adjusted, see figure below.  Edit probe properties with no PICS  Edit RF Connections It displays a new window where the wiring between the amplifier or preamplifier and the probe connectors can be defined, see figure below:  Set as current The highlighted entry will be defined as current probe. This button is only active when no automatic probe detection with PICS is available. Delete The selected entry will be deleted (not possible for the currently installed probe). Close Close the probe table editor. By exitingedprobe, if current probe parameters have changed, theEdit RF Connectionswindow is displayed where the preamplifier probe connections must be defined.  The current probe as defined withedprobe, is interpreted by the commandsedprosol,edlock,lock,lopoandsetpreas well as during IconNMR automation. At the end of an acquisition the current probe is stored in the acquisition status parameter PROBHD (seedpa).  The input files of edprobe command: ▪ <tshome>\/conf\/instr\/probehead - current probes name ▪ <tshome>\/conf\/instr\/spectrometer name\/<part #>_<serial #>.par - probe parameters SEE ALSO cf,atma,atmm,wobb          "],["824885131","ej, ij","824885131.html","",null," NAME ej-Eject thesamplefrom the magnet. ij-Insert thesample into the magnet. DESCRIPTION The commandejejects the sample from the magnet. It switches on theair flow and keeps it on until it is explicitly switched off, for example withij. The commandijinserts the sample into the magnet. This command is used when themagnetair flow is on and the sample is floating on top of it.ijgradually reduces the air flow to zero so that the sample is lowered into the magnet. As an alternative to the commandejandij, you can also press the LIFT ON\/OFF button though the BSMS display. The SAMPLE DOWN indicator in the shimming panel of the BSMS display is lit when thesample is positioned correctly in the probe. The SAMPLE UP indicator is lit when the sample has reached the top of the magnet. The SAMPLE MISSING indicator is lit if the sample is somehow positioned between the magnet top and the probe, either moving up or down or being stuck. The latter can happen, for instance, when the air flow is too high. USAGE IN AUTOMATION EJ IJ SEE ALSO ro "],["824893451","ro","824893451.html","",null," NAME ro-Switch thesamplerotation on or off SYNTAX ro [ acqu | on | off | off wait ] DESCRIPTION The commandroswitches the sample rotation on or off. When entered without arguments, it opens a dialog box (see the next figure).  ro Here, you can set the rotation frequency and start\/stop the rotation. rotakes up to two parameters and an be used as follows:   roon Switches the sample rotation on with the spin rate currently set thorugh the BSMS display (visible when you press the SPIN RATE key).  roacqu Sets the spin rate to the value of the acquisition parameter RO, then switches rotation on and waits for 60 seconds. If spin rate has not been reached within that time, an error message appears.  rooff Switches the sample rotation off.  ro off wait Switches the sample rotation off and waits until the rotation has reached zero. During the waiting time theBSMS unit cannot be accessed by other commands.  ro<value> Sets the acquisition parameter RO to <value>.  As an alternative to the commandro, you can press the SPIN ON\/OFF, and SPIN RATE keys through the BSMS display (commandbsmsdisp) INPUT PARAMETERS   RO -samplerotation frequency (input forroacqu) INPUT FILES   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   acqu- acquisition parameters USAGE IN AU PROGRAMS   ROT Executes the commandroacqu.  ROTOFF Executes the commandrooff wait. SEE ALSO ej, ij  "],["824903307","wbwr","824903307.html","",null," NAME wbwr-save wobble curve to disk DESCRIPTION The commandwbwrsaves the wobble curve to disk. NOTICE   Please note that the command is only valid in the wobble mode (first enter commandwobb). wbwrprompts the user to enter a PROCNO which will be used to store the wobble curve.  wbwr As an alternative towbwrentered on the command line, the button can be clicked in the TopSpin toolbar. The wobble curve is stored as processed data (1r) and not as raw data (fid.). This provides the additional option of using standard processing tools like e. g. multiple display. In addition,wbwrcan directly be entered together with an additional parameter denoting the PROCNO that should be used, i.e. \"wbwr 4\". OUTPUT FILES   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/<procno>\/   1r - the wobble curve  procs - processing status bar SEE ALSO wobb  "],["824915467","wobb","824915467.html","",null," NAME wobb-Manualtuning andmatching of theprobe. USAGE wobb [high][ext50][raw][all][f1][f2][f3][f4] DESCRIPTITION The commandwobballows you to manually tune and match the probe. It opens the wobble window showing the wobble curve (see the next figure).  wobb The buttons have the following functions: Change the number ofwobble steps [wbst]. Change thewobble sweep width [wbsw]. Change thewobble frequency. Switch to thenext channel\/nucleus (if available). Stop the wobble procedure. Turn the tuning and matching knobs on the probe until the wobble curve is exactly in the middle and its minimum reaches the zero line. An NMR probe must be tuned and matched because it is aresonance circuit. If itsresonance frequency andimpedance are the same as thetransmitter frequency and impedance, respectively, the fulltransmitter power is transferred to the probe. However, if either or both are different, part of the transmitter power is reflected by the probe. This results in a longer 90° pulse or, for a givenpulse length, a smaller flip angle. NOTICE   Note that a multi nuclearprobe has a resonance circuit for each nucleus and each nucleus must be tuned and matched separately.  The commandwobbis normally used without argument. It can, however, be used with arguments. For example:   wobbhigh Starts with the nucleus with the highest frequency and continues in the order of decreasing frequency.  wobbext50 Uses an external 50 ohm resistor as areference.  wobbf1 Starts with frequency channel f1. It continues with the next higher frequency or, if the argumenthighis also used, with the next lower frequency.  wobbf2 Starts with frequency channel f2. It continues with the next higher frequency or, if the argumenthighis also used, with the next lower frequency.  wobb f<x> f<y>:simultaneous wobbling of channels F<x> and F<y> in edasp. For WBSW the respective array entries are used, i.e. WBSW[0] for channel F1, WBSW[1] for channel F2 etc. If WBSW[x] is 0 then WBSW[0] is used as a fallback.  wobb all: simultaneous wobbling of all channels in edasp using the respective WBSW entries.  wobb wbst 1024 f1 wbsw 4.5 f2 wbsw 60: simultaneous wobbling of channels f1 and f2 with WBST=1024, and f1 using 4.5MHz and f2 using 60MHz for WBSW    Thewobbcommand allows you to optimize both theprobesresonance frequency (tuning) andimpedance (matching). It sends a low power RF signal to the probe and sweeps that signal over a certain frequency range. The number of steps (frequencies) within that range is defined by the acquisition parameter WBST. The width of the frequency range is defined by WBSW. The center frequency depends on the nucleus; SFO1 for NUC1, SFO2 for NUC2 etc. The deviation of the probe impedance from the nominal 50 ohm is shown as function of the frequency in the TopSpin data field. This is the so calledwobble curve. At the probesresonance frequency, the curve shows a dip, the minimum reflected power. Tuning the probe means adjusting its resonance frequency until it reaches SFO1. Matching the probe means adjusting itsimpedance until the reflected power reaches zero. The entirewobble procedure involves the following steps:   Stop thesamplerotation if this is on, for example withrooff, or by pressing the SPIN ON\/OFF button through the BSMS display.  Setup the nucleus or nuclei for the current experiment withedasp. This will automatically set the parameters SFO1, SFO2 etc.  ClickAcquire | Observe fid windowor enteracquto switch to the TopSpin acquisition menu. If, however, tuning and matching is observed on thepreamplifier, this step can be skipped (see below).  Enterwobb. The wobble curve will appear in the TopSpin data field showing a dip at a certain frequency. At the center of the data field, you will see a vertical line. If you do not see the dip, it probably lies outside of the data field. In that case, you should click thebutton or enterwbchanto increase the sweep width. You can do this whilewobbis running.  When the dip is visible, you can start tuning and matching as follows:   Turn thetuning knob until the dip lies across the vertical line.  Turn thematching knob until the dip has reached a minimum. Matching influences tuning, so the dip probably moves away from the center.  Turn the tuning knob until the dip lies at the center again. Tuning influences matching, so the dip probably moves up again.  Turn the matching knob until the dip reaches a minimum again.  Continue this process until the dip lies exactly across the vertical line and reaches the x-axis.  In case of a multi nuclei experiment, you have to switch to the next nucleus. For multiple channel experiments (2D, 3D etc.) tuning and matching of the cannels (e.g.1H,13C,15N) interdependent. The commandwobb allwill work on all nuclei in parallel. Note thatwobbautomatically starts with the nucleus with the lowestbasic frequency. You can switch to the nucleus with the next higher frequency in two possible ways:   PressChannel Selectat the HPPR. This will automatically select the nucleus with the next higher frequency.  Clickor enterwbchanin TopSpin. Answer the question \"Do you want to change the nucleus\" withyes.  Repeat step5for the current nucleus.  If your experiment involves more than two nuclei, repeat step6for each further nucleus.  Clickor enterstopon the command line to finish the wobble procedure. A probe has atuning knob (labeledT) andmatching knob (labeledM) for eachresonance circuit. Most probes have two, one for 1H and one for X-nuclei. When the tuning knob reaches the end of its range before the probe is properly tuned, you should turn it to the middle of its range, adjust matching, then tuning, then matching etc. A similar procedure can be used if the matching knob reaches the end of its range. The process of tuning and matching can also be followed on theHPPR preamplifier. Some people find that more convenient and it is necessary when the computer screen is not visible from the position of the probe. The horizontal row of LED’s indicates tuning, the vertical row indicates matching. When you turn the tuning or matching knob at the probe, you will see how the number of lit LED’s changes. The probe is perfectly tuned when only one LED (a green one) is lit. The same holds for matching. In practice, proper tuning and matching means that only green LED’s are lit. If the LED update seems to be very slow, this might be caused by the time consuming update of the wobble curve in the TopSpin acquisition display. In that case, you can simply clickto close the wobble window. Broadbandprobes usually havesliders for tuning and matching rather than turning knobs. These have the advantage that their positions are numbered. The default slider positions for each nucleus are usually written on cards that are kept with the probe. When wobbling is started with these default values, only some fine tuning and matching is required. Theproberesonance frequency andimpedance is dependent on the sample. This can be a problem in automation, where several samples are measured but the probe is only matched and tuned on one of them. BrukerATM probes support automatic tuning and matching which can be preformed on every sample during automation (see description of the commandsatmmandatma). INPUT PARAMETERS   Set by the user withedaor by typingwbst,wbswetc.:   WBST - number ofwobble steps  WBSW -wobble sweep width  Set by the user withedasporeda=> NUC1:   NUC1 - NUC4 - the nuclei for which the probe is tuned and matched  SFO1 - SFO4 - irradiation frequency INPUT FILES   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   acqu- acquisition parameters  <tshome>\/prog\/wobble\/   acqu_go4-wobble parameters  Pulsprog_X-wobble pulse program SEE ALSO atma,atmm,edasp         "],["824933259","Parameter Handling Commands","824933259.html","",null," This chapter describes commands which are involved in parameter handling. This involves the setting of acquisition parameters, probe\/solvent dependent parameters and nuclei assignment. Furthermore, the usage of predefined parameters sets is discussed. "],["824937739","ased","824937739.html","",null," NAME ased-Edit acquisition parameters used in pulse program DESCRIPTION The commandasedopens a dialog box with the acquisition parameters which are used for the current experiment (see the next figure).  ased This means thatasedshows much less parameters thenedawhich shows all acquisition parameters. Enteringasedon the command line is equivalent to clicking theAcquParstab and then clicking thebutton. The following buttons are available: Undo the last modification (unused for status parameters). Switch to all acquisition parameters. Force parse of the pulse program. Set probe\/solvent dependant parameters. Open the nuclei and routing table. Create a multi-receiver or a multi-dataset acquisition. In front of the probe name the search function allows to go to a specific parameter. asedcompiles and interprets the pulse program defined by PULPROG. For pulses, delays and constants, the parameter description in the right column of theasedwindow is taken from the comment section at the end of the pulse program. INPUT AND OUTPUT PARAMETERS   For all experiments:   PULPROG - pulse program used for the acquisition.  TD -time domain; number of raw data points.  NS - number of scans.  DS - number ofdummy scans.  SWH - spectral width in Hz.  AQ -acquisition time in seconds.  RG -receiver gain.  DW -dwell time.  DE -pre-scan delay.  For each frequency channel defined withedasp:   NUCx - nucleus for channel x.  SFOx -irradiation frequency for channel x.  All delays, pulse lengths,power levels etc. defined in the pulse program, e.g.:   D[1] -relaxation delay.  P[1] - 90° pulse length.  PL[1] - power level for pulse.  PCPD[1] -CPDpulse length. INPUT FILES   <tshome>\/exp\/stan\/nmr\/lists\/pp\/ (primary source) or <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/lists\/pp (fallback if not found in primary source)   The pulse program defined by PULPROG  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   acqu- acquisition parameters OUTPUT FILES   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   acqu- acquisition parameters SEE ALSO eda,edcpul         "],["824947595","dpa","824947595.html","",null," NAME dpa-Display theacquisition status parameters DESCRIPTION The commanddpadisplays the acquisition status parameters (see the next figure).  dpa These are set by acquisition commands and represent thestatus of theraw data. Enteringdpaon the command line is equivalent to clicking theAcquParstab and then clicking thebutton. The following buttons are available: Undo the last modification (unused for status parameters). Show pulse program parameters . Switch to acquisition parameters. Set probe\/solvent dependent parameters. Open and set the nuclei and routing. Show the status of the nuclei and routing information (edasp-s). Collapse all submenus. Read shim values from current dataset (rsh shimvalues). Search for the parameter specified in the search field.  Acquisition status parameters can also be viewed by entering their names on the command line. For example:   sns Displays the acquisition status parameter NS.  std Displays the acquisition status parameter TD. On multidimensional data, the parameter values for each direction are shown. INPUT FILES   <dir>\/data\/<user>\/<name>\/nmr\/<expno>\/   acqus- acquisition status parameters On 2D and 3D data the filesacqu2sandacqu3sare used for the indirect directions, respectively (see also chapter Parameter Files). SEE ALSO eda,dpa            "],["824959755","eda","824959755.html","",null," NAME eda-Edit acquisition parameters. DESCRIPTION The commandedaopens a dialog box in which you can set all acquisition parameters (see the next figure).  eda Enteringedaon the command line is equivalent to clickingAcquParsin the tab bar of the data window. The following buttons are available: Undo the last modification. Can be used repeatedly. Show pulse program parameters. Switch to acquisition status parameters. Set probe\/solvent dependant parameters. Open and set the nuclei and routing. Show the status of the nuclei and routing information (edasp-s). Changeraw dataset dimensionality (parameter PARMODE). Collapse\/expand all parameter sections. Search for the parameter specified in the search field.  Inside the parameter editor, you can do the following actions:   Select an acquisition parameter submenu, e.gExperiment, at the left of the dialog box. The submenu is highlighted and the corresponding parameters will appear in the right part of the dialog box.  Click in a parameter field, e.g. TD, to set the parameter value. It is automatically stored.  Hit theTabkey to jump to the next parameter field.  HitShift-Tabto jump to the previous parameter field.  Use the scroll bar at the right of the dialog box to move to parameters further up or down in the dialog box. NOTICE   Note that thebuttons to the right of the PULPROG parameter allow you to show the pulse program list or edit the current pulse program, respectively. This applies to all parameters that refer to a filename. Parameters can also be set by entering their names on the command line. A dialog window will appear where you can enter the parameter value(s). For example: td On a 1D data set.  TD - Size of fid or on a 2D data set:  TD - Size of fid (F2, F1) Alternatively, you can specify the parameter value as an argument on the command line, For example; td 8k The time domain will be set to 8k. INPUT AND OUTPUT PARAMETERS All acquisition parameters. INPUT FILES   <tshome>\/classes\/prop\/   pared.prop- parameter properties file.  <tshome>\/exp\/stan\/nmr\/form\/   acqu.e- format file foreda. INPUT AND OUTPUT FILES   <dir>\/data\/<user>\/<name>\/nmr\/<expno>\/   acqu- acquisition parameters for the acquisition (direct) direction.  acqu2- acquisition parameters for F1 (2D) or F2 (3D) indirect direction.  acqu3- acquisition parameters for the F1 direction (3D). SEE ALSO dpa, (edp)              "],["824971147","edasp","824971147.html","",null," NAME edasp- Set up nucleiandspectrometer routing DESCRIPTION The commandedaspallows you to set up the nuclei and the spectrometer routing for the current experiment. It opens therouting table showing the currentnuclei selection andamplifier routing. Here you can specify the nucleus or nuclei to be used for the experiment. For the f1logical frequency channel, you can click the NUC1 button and select a nucleus from the appearing list. Thebasic frequency, BF1, is automatically set. Then you can specify the frequency offset; OFSH1 for 1H or OFSX1 for X nuclei. Theirradiation frequency SFO1 is automatically calculated as the sum of the basic frequency and frequency offset. NOTICE   Note that the parameters NUC1, BF1 and SFO1 also appear inedabut cannot be set from there. However, the frequency offset (OFSH1 or OFSX1) appears inedaas O1 and can be set from there. In a multi nuclear experiment, you can set up the parameters for channel f2, f3 etc. in the same way as described for f1. The routing table also shows thespectrometer routing. The hardware elements which have been detected when the spectrometer was configured (withcf) will appear in this list. When you select a nucleus for a certain channel, the default routing is automatically set. Normally, this can be left as it is. Only in very special cases it is useful to change it. The routing table consists of the following stages:   Channel---FCU---Amplifier---Swibox\/I ---Swibox\/O---Preamplifier You can set up the routing by connecting an element from one stage to an element of the next stage. A connection can be installed or removed by clicking the two elements involved. The routing must follow the following rules:   Between thelogical frequency channels and FCU’s any combination is allowed but only one to one.  An FCU can be connected to one amplifier only but an amplifier can be connected to multiple FCU’s. Furthermore, FCU1 can only be connected to the first three amplifiers and FCU2 can only be connected to the first four amplifiers.  The first four amplifiers are automatically connected toswitchbox input in a fixed way. These connections cannot be changed.  Between the switchbox input and switchbox output, any connection is allowed but only one to one.  Between the switchbox output and thePreamplifier modules, any connection is allowed but only one to one. Make sure that the cables are connected accordingly.  The output of the fifth and sixth amplifier must be connected directly to the preamplifier modules. Any combination is allowed but only one to one and only to preamplifier modules which are not connected to a switchbox output. Avance spectrometers which are used forsolid state experiments usually containhigh power amplifiers with two output stages:   A low power output: typically 150 W for 1H or 300 W for X nuclei.  Ahigh power output: typically 1000 W for 1H or X nuclei. The second output appears as an extra stage in therouting table to the right of the switchbox. If you use the second output stage, the switchbox is always bypassed. If you make a routing connection which is not allowed, you will get a message that it is illegal. You must remove it before you can save the routing table. Some connections are allowed but not recommended. In that case, you only get a warning. At the bottom of the routing table you will find the following buttons:   SAVE - save therouting table and quit.  SWITCH F1\/F2 - exchange the F1 and F2 nucleus including the frequency and frequency offset.  SWITCH F1\/F3 - exchange the F1 and F3 nucleus including the frequency and frequency offset.  DEFAULT - set the defaultamplifier routing for the current nuclei.  CANCEL - quit without saving any changes.  PARAM - shows therouting parameters.  In a 2D dataset, NUC1 has a different function in the two directions. In F2, it works like in 1D experiments; it opens the routing table. In F1, it opens the nuclei list and allows you to select the nucleus for this direction. The same principle holds for 3D data; in F3, NUC1 opens the routing table, in F2 and F1 it opens the nuclei list. Thespectrometer routing is stored under the current dataset in the acquisition parameters FCUCHAN, RSEL, SWIBOX, PRECHAN and HPMOD (see the description of these parameters). These can be viewed by clicking the PARAM button in the routing table. NOTICE   Note that these parameters appear inedaand can be set from there. This, however is not very common as setting them from the routing table is much more convenient. InBruker parameter sets (seerpar), the routing parameters have been set according to the configured hardware. This corresponds to the routing that will be set by clicking thedefaultbutton in the routing table. The connections between the Switchbox output and thePreamplifier modules are fixed; they cannot be changed. However, if you startedaspwith the argumentsetpreamp, you can change these connections or remove them all by clickingClear preamplifier connections. If you make any changes here, you must make sure that the cables at the spectrometer are connected accordingly. The commandedaspsetpreampis implicitly called as a part of spectrometer configuration (commandcf). INPUT AND OUTPUT PARAMETERS Set graphically fromedaspby connecting routing elements:   FCUCHAN -logical frequency channel - FCU connections.  RSEL - FCU - amplifier connections.  SWIBOX -Switchbox input - Switchbox output connections.  PRECHAN - Switchbox output -Preamplifier module connections.  HPMOD -high power amplifier - Preamplifier module connections. INPUT AND OUTPUT FILES   <dir>\/data\/<user>\/<name>\/nmr\/<expno>\/   acqu- acquisition parameters.  <tshome>\/conf\/instr\/<INSTRUM>\/   specpar- routing parameters. SEE ALSO edsp,eda,cf,expinstall "],["824980235","getprosol","824980235.html","",null," NAME getprosol-Getprobe andsolvent dependent parameters DESCRIPTION The commandgetprosolreads the probe and solvent dependent parameters (theprosol parameters) and copies them to the corresponding acquisition parameters. Enteringgetprosolon the command line is equivalent to clicking theAcquParstab and then clicking thebutton. Therelations between the prosol and acquisition parameters are shown in tableDefault relations between prosol and acquisition parameters. These are the defaultrelations which apply to most standard high resolution experiments.Protein,DNA\/RNA,LC-NMR and several other types of experiments require different relations which are defined in the files,triple,triple_na,lcnmr, etc., respectively (see INPUT FILES). To use relations other than default, the so calledrelations file must be specified in the pulse program. You can do that by editing the pulse program (withedpuloredcpul) and adding the line:   prosol relations=<filename> before the actual pulse sequence. To look at an example, you can enteredpullc2oredpulzgesgp. NOTICE   Note that the filedefault, for default relations can, but does not need to be specified in the pulse program.   Default relations between prosol and acquisition parameters     Description  edprosol  eda    F1 90°hardpulse length  P90[F1]  P[0], P[1]   F1 180° hard pulse length  P90[F1]*2  P[2]   F2 90 ° hard pulse length  P90[F2]  P[3]   F2 180° hardpulse length  P90[F2]*2  P[4]   F1Tocsy spin lock 60° pulse length  PTOC[F1]*0.66  P[5]   F1 Tocsy spin lock 90° pulse length  PTOC[F1]  P[6]   F1 Tocsy spin lock 180° pulse length  PTOC[F1]*2  P[7]   F1Roesy spin lock pulse length  PROE[F1]  P[15]   Gradient 1pulse length  P_grad1  P[16]   F1 Tocsy trim pulse length  P_mlev  P[17]   Gradient 2pulse length  P_grad2  P[19]   F3 90° hard pulse length  P90[F3]  P[21]   F3 90° hard pulse length  P90[F3]*2  P[22]   F1 HSQC trim pulse length  P_hsqc  P[28]   F2 Roesy spin lock pulse length  PROE[F2]  P[31]   F1 90° hard pulsepower level  PL90[F1]  PL[1]   F2 90° hard pulse power level  PL90[F2]  PL[2]   F3 90° hard pulse power level  PL90[F3]  PL[3]   F1 Tocsy spin lock power level  PLTOC[F1]  PL[10]   F1 Roesy spin lock power level  PLROE[F1]  PL[11]   F2CPD power level  PLCPDP[F2]  PL[12]   F2 Second CPD (bilev) power level  PLCPD2[F2]  PL[13]   F3 CPD power level  PLCPDP[F3]  PL[16]   F2Homodecoupling power level  PLHD[F2]  PL[24]   Gradient recovery delay  D_grad  D[16]   F2CPD pulse length  PCPDP[F2]  PCPD[2]   F2 CPDpulse length  PCPDP[F3]  PCPD[3] Usage Of Getprosol With Command Line Options The commandgetprosol(get probe and solvent dependent parameters from the edprosol table) can be called with three options:   The nucleus.  P90, the value for 90° hard pulse length.  PL90, the value for 90°hard pulse power level. The existing prosol parameterset, set up byedprosol, is not modified. getprosol Nuc P90 PL90recalculates standard hard power levels with: PLx = 20*log (Px\/P90) and the standard soft power levels PLSH1 - PLSH16 by: PLSHx = 20*log (integFac*Px\/totRot * (P90\/90.0) where integFac (=SHAPE_INTEGFAC) and totRot (SHAPE_TOTROT) are read from the shapes<TOPSPINHOME>\/exp\/stan\/nmr\/lists\/wave\/PNSHx and <TOPSPINHOMME>\/exp\/stan\/nmr\/lists\/wave\/Gaus1.100(e.g.) INPUT AND OUTPUT PARAMETERS See tableDefault relations between prosol and acquisition parameters. INPUT FILES   <tshome>\/conf\/instr\/<instrum>\/prosol\/relations   default- relations file for most experiments  triple- relations file for Protein experiments  triple_na- relations file for DNA experiments  lcnmr- relations file for LC-NMR  etc.  <tshome>\/conf\/instr\/<instrum>\/prosol\/<probeID>\/<solvent>   nucleus.channel.amplifier- prosol parameters OUTPUT FILES   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   acqu- acquisition parameters  relations- copy of the input relations file SEE ALSO edprosol,eda, setprosol  "],["824998027","Pulse and AU Program Commands","824998027.html","",null," This chapter describes commands for the setup of pulse programs, gradient programs, CPD programs etc. Furthermore, it describes the setup of various lists which can be used in acquisition like variable pulse or variable delay lists. "],["825002507","edcpul, edpul","825002507.html","",null," NAME edcpul-Edit thecurrentpulse program. edpul– Edit any pulse program. SYNTAX edcpul [<name>] edpul [<name>] DESCRIPTION The commandedcpulopens the TopSpin editor showing the current pulse program (see the next figure). The current pulse program is defined as the pulse program of the foreground dataset as defined by the acquisition parameter PULPROG.  edcpul Brukerpulseprograms are opened inviewmode which means they cannot be modified. The dialogFilemenu offers you the following functions:   Open This will open theedpuldialog where you can open any available pulse program. The current pulse program is automatically highlighted.  edpul: list of pulse programs  Save as... Allows you to save the pulse program under a different name  Print This will print the pulse program The buttonopens a graphical presentation of the pulse program:  All parameters as set in the current dataset are provided in the graphical display. The buttonwrites the pulse program name to the acquisition parameters. User definedpulseprograms are opened ineditmode and can be modified. The dialogFilemenu offers you the following extra functions:   New Allows you to open a new pulse program.  Save Allows you to save the pulse program under the same name Besides the File menu, the dialog offers theeditandsearchmenu with common edit\/search functions. INPUT PARAMETERS To be set withedaor by typingpulprog:   PULPROG - the current pulse program (input ofedcpul) INPUT FILES   <tshome>\/exp\/stan\/nmr\/lists\/pp   Bruker and user defined pulse programs  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   acqu- acquisition parameters OUTPUT FILES   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   acqu- acquisition parameters (output ofedcpul<name>) SEE ALSO edgp, (edcpd)      "],["825013131","edgp","825013131.html","",null," NAME edgp - Editgradient programs SYNTAX edgp [<name>] DESCRIPTION The commandedgpallows you to list, create or edit gradient programs. If you enteredgpwithout arguments, a list of all gradient programs is displayed (see the next figure).  edgp This shows alist of all Bruker and\/or User gradient programs and allows you to edit or delete them. To list Bruker gradient programs:   ClickOptions => Bruker defined  To list User gradient programs:   ClickOptions => User defined  To list all gradient programs:   ClickOptions => All defined  To edit the selected gradient program:   Double-click the gradient program or select the gradient program and clickEdit. The gradient program will be shown in an editor and can be saved by clickingSave. To save it under a different name, clickSave as ...  To create a new gradient program:   ClickFile --> Newand write the gradient program in the appearing editor or   Double-click an existing gradient program, modify the contents to your needs and store it under a different name by clickingSave as ...  To delete a gradient program   ClickDeleteand clickOKin the warning dialog. If you enter the command with an argument, i.e.edgp <name>, the gradient program <name> is opened or, if it does not exist, it is created. The argument may contain wildcards, e.g.edgp a*displays a list of all gradient programs which start with a. Bruker gradient programs must be installed with the command: expinstallbefore they can be opened withedgp. edgpuses the editor which is defined in the TopSpin User Preferences. To change it, enterset, clickMiscellaneousand select or change the editor. INPUT AND OUTPUT FiLES   <tshome>\/exp\/stan\/nmr\/lists\/gp\/*   gradient programs SEE ALSO edcpul, (edpu)l,expinstall  "],["825022987","edlist, dellist","825022987.html","",null," NAME edlist- Editvarious lists. dellist-Delete various lists. SYNTAX edlist [<type> <list> ] dellist [<type> <list>] DESCRIPTION The commandedlistopens a dialog box with theEdit...option selected:  edlist  Just select the desiredList typeand clickOK. The available files of the chosen list type appear and can be edited. To create a new list file:   Open an existing file, edit it and clickSave as ... to save it under a different name.     or   Enter a name in the fieldNew file, clickOK, enter the list in the appearing editor and clickOK. Lists types that can be edited withedlistare shown in the tableLists used in acquisition. They are used by the acquisition, for example, avdlist is read by the pulse program statementvd. A variable delay list can be set up and used as follows:   Create a variable delay list withedlist.  Set the acquisition parameter VDLIST to the name of that list.  Specify thevdstatement in the pulse program. Other lists can be used in a similar way. They typically contain one value per line and the number of lines is unlimited. The type of the list that is interpreted is determined by the type of pulse program statement. The list name is determined by an acquisition parameter. NOTICE   Note, however, that SREGLST is a processing parameter.   Lists used in acquisition     List type  Description  Defined by parameter  Read by pulse program statements    vd  delay list  VDLIST  vd,ivd,vdidx   vp  pulse list  VPLIST  vp,ivp,vpidx   vc  counter list  VCLIST  lotoxtimesc,ivc   va  amplitude list  VALIST  define list<power>   vt  temperature list  VTLIST  RVTLIST, VT, IVTLIST, DVTLIST   f1  frequency list (Avance)  FQLIST  fql,fq2,fq3etc.   sp  list of shapes  SPNAM  list<shape>   phase  variable phase list  PHLIST  list<phase>   masr  MAS spin rate list    AU prog. Multimas   gp  Gradient Files  GPNAM  list<gp>  NOTICE   RVTLIST, VT, IVTLIST, DVTLIST: Note that these are AU program macros rather than pulse program statements. Delay Lists Delay lists contain any number of delay values with the corresponding units, e.g.: 10u 5m 2s where u = microseconds (µs), m = milliseconds and s = seconds. They are interpreted by the pulse program statements: vd- read value from the current position in the delay list ivd- increment the delay list position to the next value \"vdidx=n\"- set the index to positionnin the delay list Pulse Lists Pulse lists contain any number of pulse length values with the corresponding units, e.g.: 10u 20m where u = microseconds and m = milliseconds. They are interpreted by the pulse program statements: vp- read value from the current position in the pulse list ivp- increment the pulse list position to the next value \"vpidx=n\"- set the index to positionnin the pulse list A variable pulse list can only be used for hard pulses, not for shaped pulses. Counter Lists A variable counter list contains any number of loop counter values, e.g.: 4 7 20 They are interpreted by the pulse program statement: lo toxtimesc Where x is apulse program label andcis the value at the current position of the counter list ivc increment the counter list position to the next value Variable Amplitude (power) Lists Avariable amplitude list contains any number of power values, e.g.: -6.0 0.0 3.0 6.0 The entries represent attenuation values in dB. The usage of a VA list is different from pulse and delays lists. You must define the statement by which a VA list is accessed in the pulse program. Such a statement can have any name, for example the namevanamis used in the examples below. The suffixes.inc,.decand.rescan be used to increment, decrement and reset the lists position, respectively. Furthermore, the caret operator (^) allows you to read a list value and increment the list position with one statement. The following pulse program entries illustrate the use of a variable amplitude list: definelist<power>vanam=<$VALIST> definition of the power list d1vanam:f2vanam.dec set the power to the current value of the list and decrement the index d1vanam[2]:f3 set the power to the second value of the list \"vanam.idx =vanam.idx+3\" increment the list index by 3 d1vanam^:f4 set power to the current value of the list increment the index As an alternative to using a list defined by the parameter VALIST, you can explicitly define a variable amplitude (power) list filename or even the list values in the pulse program. The following examples illustrates such definitions: define list<power> vanam=<my_filename> define list<power> vanam={10 30 50 70} NOTICE   Note that the second definition does not require a list file. Note that variable amplitude lists can only be accessed using define statements as described above. The statement va does not exist. More information on using variable amplitude lists can be found under: Help|Manuals| Programming Manuals |Pulse Programming Temperature Lists A variable temperature list contains any number of temperature values (in Kelvin), e.g.: 300 320 340 Temperature lists are interpreted by the AU program macros:   RVTLIST Open the temperature list defined by VTLIST  VT Read value from the current position in the temperature list and set thetemperature unit accordingly.  IVTLIST Increment the current position in the temperature list to the next value.  DVTLIST Decrement the current position in the temperature list to the previous value. NOTICE   Note that temperature lists are only interpreted by AU program macros, not by pulse program statements. Frequency Lists Frequency lists contain theirradiation frequency preceded by the letter O on the first line (optional) and any number offrequency offset values on subsequent lines, e.g.: O 500.13 3000 3150 3200 They are interpreted by pulse program statements like: 30m fq1:f1 Read the current value from the list defined by FQ1LIST to channel f1 d1 fq2:f1 Read the current value from the list defined by FQ2LIST to channel f1 d11 fq3:f2 Read the current value from the list defined by FQ3LIST to channel f2 NOTICE   Note that thefq1,fq2etc. statements must be specified with a delay. In contrast to thevdandvpstatements, they automatically increment the current position in the list to the next value. In the above example, the offset values in the list are added to the frequency specified on the first line, independent of the channel. If, however, the first line would be omitted, the offset values in the list are added to the values of SFO1, SFO2 etc. for the respective channels. Shape Lists Shape lists are handled in the same way as Amplitude lists. The pulse program statement: definelist<shape>shl=<$VALIST> will read the file name provided in the parameter VALIST from the shape directory<tshome>\/exp\/stan\/nmr\/lists\/sp. Alternatively, you can use the pulse program statement: definelist<shape>shl=<shapelist> which will read the file shapelist from the shape directory<tshome>\/exp\/stan\/nmr\/lists\/sp. Note that more details on shape lists can be found underHelp|Manuals| Programming Manuals |Pulse Programming Phase Lists Phase lists are handled in the same way as Amplitude lists. The pulse program statement: definelist<phase>Phlist1=<myphaselist> will read the file myphaselist from the phase directory<tshome>\/exp\/stan\/nmr\/lists\/\/phase. Alternatively you can use the pulse program statement: definelist<phase>Phlist2=<$PHLIST> which will read the file name provided in the parameter PHLIST from the phase directory<tshome>\/exp\/stan\/nmr\/lists\/phase. Note that more details on phase lists can be found underHelp|Manuals| Programming Manuals |Pulse Programming Masr Lists MASR lists contain any number of MAS spin rate values in Hz, e.g.: 3000 3500 4000 4500 They are interpreted by the AU programmultimas. This AU program will ask you if you want to use a list or enter the start and increment value interactively. If you choose the former (default), it will offer you the available MASR lists. There are alternative ways of defining and using lists in acquisition. Rather than using a predefined statements likevd, you can define your own statement in the pulse program to access a certain list. For example, the statements: definelist<delay>vdnam=<$VDLIST> definelist<delay>vdfil=<my_file> definelist<delay>vdval={0.1 0.2 0.3 0.4} Allows you to use the statementsvdnam,vdfilandvdvalto read a value from a delay list. The use of lists via define statements is fully described above for the variable amplitude lists. More information on user defined lists can be found under: Help|Manuals | Programming Manuals |Pulse Programming Gradient Programs Gradient Programs lists are handled in the context of the parameter GRADIENT in the acquisition parameter list. Note that more details on gradient files can be found inHelp | Manuals | Programming Manuals | Pulse Programming   edlistcan be used in one of the following ways:   edlist- opens the edit\/delete dialog box  edlist <type>- displays all entries of the list type <type>  dellistopens the same dialog box asedlistexpect that the Delete option is selected. When you select aList Type, and clickOK, the available files of that type appear. You can click one or more entries to mark them for deletion. Clicking theDeletebutton deletes all marked entries. INPUT AND OUTPUT FILES   <tshome>\/exp\/stan\/nmr\/lists   vd-variable delay lists  vp-variable pulse lists  vc-variable counter lists  va-variable amplitude lists  vt-variable temperature lists  f1-frequency lists  sp– variable shape file lists  phase– variable phase list  masr-MASR rotation values  gp– gradient programs  SEE ALSO edlist, dellist  "],["825042315","Acquisition Commands","825042315.html","",null," This chapter describes all commands involved in data acquisition. This includes parameter optimization, the actual data acquisition and stopping a running experiment. Most experiments which involve a single acquisition are started with the commandzgand run until they are finished. Other experiments involve multiple acquisitions executed with an AU program or with IconNMR. "],["825046795","aqguide","825046795.html","",null," NAME aqguide- Open theAcquisition Guide. DESCRIPTION The commandaqguideopens the TopSpin Acquisition Guide (see the next figure). This contains a workflow for acquiring data, especially suited for new or occasional users. InAutomatic mode, the Acquisition Guide will simply execute an acquisition command when you click the corresponding button. This requires the acquisition parameters to be set correctly. In interactive mode (Automatic modeunchecked), the Acquisition Guide will, at each step, open a dialog box offering you the available options and required parameters.  aqguide SEE ALSO (prguide, t1guide, solaguide)  "],["825069579","expt","825069579.html","",null," NAME expt- Display theexperimenttime DESCRIPTION The commandexptcalculates and displays theexperiment time for the current data set (see the next figure).  expt If this exceeds the time you have available, you can reduce the number of scans (parameter NS) until the experiment time is acceptable. Alternatively, the acquisition time (parameter AQ) can be reduced, modifying accordingly parameters SW and TD. Avoid truncation of the signal. Also D0 (relaxation delay) can be reduced). In this case take care not to saturate (overflow) the receiver, in case of too fast pulsing (complete relaxation should still occur). For 2D experiments, the resolution in the indirect dimension F1 can be reduced (TD1 parameter), as long as the resolution remains sufficient (sometimes a compromise has to be made between all these possibilities). For 2D and 3D experiments,exptalso compares the file size of the raw data with the available disk space. exptcan also be executed by clicking thebutton in the toolbar. INPUT PARAMETERS   NS - number of scans  AQ - acquisition time in seconds SEE ALSO zg,gs   "],["825080203","go","825080203.html","",null," NAME go- Perform an acquisition, adding to existing data DESCRIPTION The commandgostarts an acquisition on the current dataset adding to possibly existingraw data. It works likezg, except that it does not overwrite existing data. If raw data already exist,gowill add the new data to them. This is, for example, useful if the signal to noise of yourspectrum is too low and you want to acquire additional scans. If no data exist,gohas the same result aszg. NOTICE   If you have stopped an acquisition withhaltorstop, you can, in principle, continue it withgo. Note, however, that the acquisition might have been stopped in the middle of aphase cycle andgostarts a new phase cycle. Therefore, if you want to be able to stop and continue an acquisition, we recommend to use the commandssuspendandresume(see the description of these commands). NOTICE   Note that if you enterhaltorstopduring a 2D or 3D acquisition it might stop in the middle of a second or third direction increment (see above). However, this problem only occurs when you use thewrstatement to write the data to disk. If you use themcstatement, thegocommand continues a 2D or 3D acquisition at the position where it was stopped.Caution: if you increment or decrement any pulses, delays or phases within the acquisition loop, you must do that within one of themcarguments F1PH, F1QF etc., for example:   d1 mc #1 to 1 F1PH(id0, ip1) Most acquisitions are started withzgand run until they have finished. As such, the commandgois not used very often. It is, however, used in someBruker AU programs likenoediff,noemult,deptcycandmulticyc. Note the difference between the TopSpin commandgoand the pulse program statementgo(See pulse programming manual). INPUT AND OUTPUT PARAMETERS Seezg INPUT AND OUTPUT FILES Seezg USAGE IN AU PROGRAMS   GO  COMMAND LINE OPTIONS      -D <define>  set precompiler directive <define>   -scaleByRg  divide the fid by the receiver gain   -scaleByNs  divide the fid by the number of scans   rgAdjust  adjust receiver gain during dummy scans   interactive  allow parameter change during runtime of experiment   o1calib  used for the O1 calibration experiment   o1calib <stepsize> <rangesize>  calibration of O1 with specified stepsize and rangesize (both in Hz)   -help  print help message SEE ALSO zg,suspend,resume "],["825089291","gs","825089291.html","",null," NAME gs-Interactiveparameteroptimization during acquisition. DESCRIPTION The commandgsopens a dialog box that consists of two panels. In the left panel, you can adjust parameters interactively during an acquisition (see the next figure). The right panel shows theFID display window where the fid is continuously updated showing the effect of each parameter change (see the figureFid displaydisplay). gsrepeatedly executes the current pulse program but only up to the firstgo=norrcyc=nstatement. Therefore,gs:   Does not accumulate data.  Does not interpret thephase list.  Does not write data to disk.  The dialog box only shows the parameters which are typically set duringgslikeirradiation frequencies and offsets, pulse lengths andpower levels. By default, theirradiation frequency Offset is selected for adjustment. You can adjust the indicated parameter by putting the cursor on the slider, pressing the left mouse button and moving the mouse. Alternatively, you can click above or below the slider bar. The slider sensitivity can be changed from theSensitivityfield. The following parameters can be changed from thegsdialog box:   SFO1 - SFO8 - irradiation frequency for channel f1- f8.  O1 - O8 - irradiation frequency offset for channel f1- f8.  PL[0-63] - squarepower levels.  AMP[0-31] – amplitude.  PHCOR[0-31] -reference phases.  PH_ref -receiverphase correction.  RG -receiver gain.  P[0-63] - pulse lengths.  D[0-63] – delays. Frequency, Offset and Square Power appear for each channel that has been setup withedasp.  gs NOTICE   Note that moving the RG slider causes an exponential change in thereceiver gain. The effect of changing RG will be shown immediately in theFID display. For all other parameters in the above list, the effect of a change will be shown after one or two scans.   Fid display   The buttons of the FID window have the following functions: Show FID in shuffled mode. Show FID in unshuffled mode, vertically arranged. Show FID in unshuffled mode, horizontally arranged. Show FID in unshuffled mode, interleaved. Switch between FID and spectrum. Stop the acquisition [stop]. Use current FID as reference for scaling [_noscale]  Thebutton toggles between FID and real time spectrum display and provides two extra buttons: Real time FT settings. Toggle calculation of peak width at 50%, 5.5% and 1.1% height (Shown as status parameters).  The GS dialog box also contains the following buttons:     Save- save the parameter that was changed last.  Save all- save all changes.  Restore- restore the parameter that was changed last.  Restore all- restore all changes.  Stop- stop the acquisition and leave thegsdialog box. If you clickStopwithout having saved your changes,gsshows you the changed parameters and allows you to select the ones to be saved.  Save changed GS parameters INPUT AND OUTPUT PARAMETERS See the parameter list above. INPUT AND OUTPUT FILES   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   acqu- acquisition parameters SEE ALSO zg,go,rga              "],["825107083","halt","825107083.html","",null," NAME halt-Halt the acquisition after the current scan. DESCRIPTION The commandhaltstops the acquisition after the current scan and writes the data to disk. It is the regular command to stop a running acquisition. NOTICE   Note thathaltdoes not complete the currentphase cycle. As an alternative to enteringhalton the command line, you can click thebutton of the TopSpin toolbar or in the acquisition window toolbar. If, for some reason, a running or hanging acquisition cannot be stopped withhalt, you can try thestopcommand. If that does not work either, you can usekill. This command will show all active processes and you can click thegomodule to stop the acquisition. The commandhaltcan even be entered with an optional parameter as commandhalt <1...-NS>(please note that <1...-NS> must be integer and > 0). If <1...-Ns> is defined the execution ofhaltis delayed until the total number of scans reaches a multiple of <1...-NS>. This option is useful if a fid with a complete phase cycle should be stored to disk. NOTICE   Please note that the commandhaltand its arguments does only work with AVANCE II and newer spectrometers. As an alternative to typinghalt <1...-NS>in the command linethe button can be used from the TopSpin toolbar with this bottom: This button opens the following dialogue:  Execute halt OUTPUT PARAMETERS All acquisition parameters OUTPUT FILES In a 1D Dataset:   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   fid- raw data  acqus- acquisition parameters  In a 2D Dataset:   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   ser-raw data  acqus- F2acquisition status parameters  acqu2s- F1acquisition status parameters  In a 3D Dataset:   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   ser- raw data  acqus- F3 acquisition status parameters  acqu2s- F2 acquisition status parameters  acqu3s- F1 acquisition status parameters SEE ALSO stop,zg,go,rga,wobb    "],["825119243","iconnmr","825119243.html","",null," NAME IconNMR- User interface forautomation and routine spectroscopy. DESCRIPTION The commandiconnmrstarts the icon driven user interface IconNMR for routine spectroscopy and automation:  IconNMR It is fully described in the IconNMR manual. The online version of this manual can be opened by clickingHelp|Manuals|Automation and Data Publishing|IconNMR Automation Interface.  "],["825128331","ii","825128331.html","",null," NAME ii- Initialize spectrometerinterface. DESCRIPTION The commandiiinitializes thespectrometer interface. It tries to access all hardware parts of the spectrometer that are needed for the current experiment and loads the acquisition parameters. iimust be executed once, when the spectrometer has been switched off. For AVANCE spectrometers it is possible to effectuate a restart of the hardware controllers with the commandii restart. This may be helpful if a hardware failure has blocked the system. INPUT PARAMETERS All acquisition parameters. USAGE IN AU PROGRAMS   II SEE ALSO zg "],["825136651","popt","825136651.html","",null," NAME popt-Open theparameteroptimization window. DESCRIPTION The commandpoptallows you to optimizeacquisition parameters like pulses and delays (see the next figure).  popt Before you start an optimization, you must run one acquisition with the acquisition parameters as they are (not optimized) and process the data. On the resulting spectrum, you must define the spectral range (a peak or group of peaks) to be used for optimization. To do that, click-hold the left mouse button at one edge of the desired region and drag the cursor to the other edge. The TopSpin display will automatically be adjusted to show the selected region only. You must now store this region with a right-mouse click in the spectrum window and selectSave Display Region to …or by enteringdpl1. Thepoptdialog box allows you to create an entry for each parameter you want to optimize. By default, it shows only one entry; more parameters can be added by clicking the buttonAdd parameter. Furthermore the following fields are offered:   OPTIMIZE: Optimization of the parameters in the group.   Step by Step The parameters of a group are optimized one after the other. NEXP can be different for each parameter. The total number of experiments is the sum of the NEXP value of each parameter. The result of each parameter optimization is stored in a separate PROCNO.  Simultaneous The parameters of a group a optimized simultaneously. NEXP must be the same for each parameter and represents the total number of experiments. The result of the parameter optimization is stored in one PROCNO.  Array The parameters of a group a optimized according to an N-dimensional array (N is the number of parameters in a group). NEXP can be different for each parameter. The total number of experiments is the product of the NEXP value of each parameter. The result of the parameter optimization is stored in one PROCNO.  No Optimization The parameter is not optimized.  GROUP: group number. Optimization starts with the lowest group number.  PARAMETER: The parameter to be optimized. IfOPTIMIZEis set toNo Optimization, the parameter will be stored as comment in theoptimization setup.  OPTIMUM: Optimization criterion (see below).  STARTVAL: First value of the parameter.  ENDVAL: Last value of the parameter.  NEXP: Number of experiments.  VARMOD: Parameter variation mode: linear or logarithmic.  INC: Parameter increment value. Unused for VARMOD = log.  The optimization criterion OPTIMUM can take the following values:   POSMAX - the maximum value of a positive peak.  NEGMAX - the maximum value of a negative peak.  ZERO - zero intensity of a peak.  MAGMAX - the maximum magnitude value of a peak.  MAGMIN - the minimum magnitude value of a peak.  At the bottom of the dialog box you will find the following buttons:   Start optimize- start the optimization for all checked parameters.  Skip current optimization- stop the optimization for the current parameter.  Show protocol- show the optimization result. A dialog appears with a list of protocol files:   popt.protocol: the entire optimization result.  popt.protocol.999: the optimization result in PROCNO 999.  popt.protocol.998: the optimization result in PROCNO 998.  etc.  Add parameter- add a parameter entry.  Restore- restore the last saved optimization setup.  Save- save the current optimization setup to current dataset EXPNO.  Read array file- read optimization setup.  Save array file as..- save current optimization setup for general usage.  Stop optimization- stop the optimization for all checked parameters.  Delete parameter- delete the selected parameter.  Display Dataset – Display the current dataset  Update ProcPars – Update Processing Parameters  Help -open thepopthelp page.  Clicking the buttonStart optimizewill start the optimization process. NOTICE   Note that it runs on the current dataset. For each parameter\/group, a series of acquisitions will be performed. The result of this is a series of spectra (actually spectral regions) that are displayed in one screen and show the optimum parameter value. They are stored as one or more processed data files under the current dataset name and experiment number, but under different processing numbers. For the first parameter\/group that is optimized this is PROCNO 999, for the second parameter\/group PROCNO 998 etc. As such, you must startpopton a dataset with PROCNO < 900. The result will also be stored in the so-called protocol file (see OUTPUT FILES)   Please note that the popt command is especially useful for 90° pulse length calibration.  TO Do: Beispiel  But also for pulse power optimization or any other pulse (decoupling, indirect pulses etc.) popt can be a useful tool.  At the top of the dialog box you will find the following check buttons:   Store as 2D data (ser file). If checked, the result of the optimization (a series of 1D spectra) will be stored as a 2D dataset in EXPNO 899. However, if the source dataset PROCNO is greater than 100, the EXPNO of the destination 2D data will be PROCNO - 100.  The AU program specified in AUNM will be executed. If checked, the AU program defined by AUNM will be executed instead of the commandzg.  Perform automatic baseline correction (ABSF) If checked, the output data will be baseline corrected withabsf. NOTICE   Note that this command corrects the selected region (determined by the processing parameters ABSF1 and ABSF2).  Overwrite existing files (disable confirmation message). If checked, the output PROCNO, if it exists, will be overwritten without warning.  Stop sample spinning at the end of optimization (mash)  Run optimization in background If checked, the foreground dataset will remain the same during the optimization. If it is not checked, theTopSpin display will change to PROCNO 999 where the optimization result is displayed.  No display of estimated running time  Calculate optimum after POPT has finished, but do not store in dataset  Correlate 2D Container with experiment To the right of the above check buttons, the current values of the parameters WDW (window multiplication mode), PH_mod (phase correction mode) and FT_mod (Fourier Transform mode) are displayed. If you want to rerun an optimization, you must first return to the starting PROCNO. INPUT FILES   <tshome>\/exp\/stan\/nmr\/lists\/popt\/   <name>- parameter optimization setup for general usage (input ofRead array file..)  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   acqu- acquisition parameters  popt.array- parameter optimization setup (input ofRestore)  popt.protocol- parameter optimization result (input ofShow protocol)  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   proc- processing parameters  <tshome>\/prog\/au\/bin\/   poptau- AU program that runs the optimization (executable)  popthalt- AU program that halts the current optimization (executable) OUTPUT FILES   <tshome>\/exp\/stan\/nmr\/lists\/popt\/   <name>- parameter optimization setup for general usage (output ofSave array file as..)  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/999   1r- processed data containing the optimization result of the first parameter\/group  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/998   1r- processed data containing the optimization result of the 2ndparameter\/group  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   popt.array- parameter optimization setup (output ofSave)  popt.protocol- parameter optimization result (output ofStart optimize)  <dir>\/data\/<user>\/nmr\/<name>\/899\/   ser- 2D raw data containing the optimization result SEE ALSO gs,zg  "],["825147275","resume","825147275.html","",null," NAME resume-Resume a suspended acquisition. DESCRIPTION The commandresumeresumes an acquisition that has been suspended. An acquisition can be suspended with the commandsuspend. When this is entered, the acquisition holds as soon as the pulse program statementsuspendorcalcsuspendis encountered. If the pulse program does not contain such a statement,suspendhas no effect. Alternatively, an acquisition can be suspended with the pulse program statementautosuspendorcalcautosuspend. They automatically hold the acquisition, without user interaction. The commandresumecontinues acquisition that was suspended, either automatically or with the commandsuspend. For more information on thesuspendpulse program statements click: Help|Manuals| Programming Manuals |Pulse Programming A resumed acquisition does not start with dummy scans. This can be a problem if therecycle delay is shorter than 4 times the T1 value of the measured nucleus. NOTICE   Note that the suspend information is temporarily stored on the spectrometer hardware, not on the workstation disk. As soon as you enterstoporhalt, or switch off the spectrometer, the suspend information is lost and the acquisition cannot be resumed. SEE ALSO suspend,zg,go "],["825156363","rga","825156363.html","",null," NAME rga-Automaticreceiver gainoptimization. DESCRIPTION The commandrgaautomatically optimizes the receiver gain. It performs an acquisition with varying receiver gain and finally sets it just below the value where nooverflow occurs. In fact,rgarepeatedly executes the current pulse program but only up to the firstgo=norrcyc=nstatement. If you already know the proper value for the receiver gain, you can simply set RG inedaor by typingrgon the command line. OUTPUT PARAMETERS   can be viewed withedaor by typingrg:   RG - receiver gain USAGE IN AUTOMATION   RGA SEE ALSO gs,zg,go "],["825164683","stop","825164683.html","",null," NAME stop-Stop the acquisition immediately DESCRIPTION The commandstopstops the acquisition immediately without writing the data to disk. NOTICE   Note that in most 1D experiments, the data are only written at the end of the acquisition and usingstopwould cause a complete loss of data. As such, it is used in case of emergency. To stop a normal acquisition thehaltcommand is used. Instead of enteringstopon the command line, you can also click thebutton in TopSpin tool bar or in the acquisition window toolbar. If, for some reason, a running or hanging acquisition cannot be stopped withhaltorstop, you can usekill. This command will show all active processes and you can click thegomodule to stop the acquisition. SEE ALSO halt,zg,go,rga,wobb  "],["825174539","suspend","825174539.html","",null," NAME suspend-Suspend a running acquisition. DESCRIPTION The commandsuspendallows you to hold a running acquisition. When it is entered, the acquisition holds as soon as the pulse program statementsuspendorcalcsuspendis encountered. If the pulse program does not contain such a statement,suspendhas no effect. Alternatively, an acquisition can be suspended with the pulse program statementautosuspendorcalcautosuspend. They automatically hold the acquisition, without user interaction. The commandresumecontinues acquisition that was suspended, either automatically or with the commandsuspend. NOTICE   Note that the suspend information is temporarily stored on the spectrometer hardware, not on the workstation disk. As soon as you enterstoporhalt, or switch off the spectrometer, this information is lost, and the acquisition cannot be resumed.  StandardBruker pulse programs do not contain anysuspendstatements. Therefore,suspendcan only be used withuser defined pulse programs which contain asuspendstatement at a certain position. SEE ALSO resume,zg,go "],["825183627","topguide","825183627.html","",null," NAME topguide-Open theTopGuideacquisition and processing tool DESCRIPTION The commandtopguideopens a guided acquisition and processing tool:TopGuide. This tool is a guide for setting up and processing NMR experiments. As the name implies, it is an interactive guide, which guides the user through the necessary and important steps after the insert of a new sample (tuning & matching the sample, locking, shimming) and the following process of running a basic 1H 1D (reference) experiment. After these initial steps it offers a database with the basic 1D and 2D NMR experiments and helps the user to set those up.  topguide The special user interface ofTopGuideguides the user through all the steps and decisions the user has to make. Each item within the user interface has its own help context. The help text describes the action the user has to take, gives explanations for parameters, provides explanations for procedures and\/or some background information. TopGuidekeeps track of the experiments which were run usingTopGuideand stores this information in a database. For each sample (i.e. Name) the status window (Performed Experiments) shows the list of experiments which are setup (Acquisition no) or done (Acquisition yes) and if processing has been done or not (Processing yes\/no). The status list provides an easy way to access these datasets: a simple left click will load the dataset into the upper part of the window, a right click pops up a context menu which gives access to either acquisition or processing parameters or some other dataset related commands. On the right is a tool bar with 4 buttons for the basic operation.GOstarts the acquisition on the current dataset. The spooler mechanism (acquisition queue) enables the user to run more than 1 experiment in a row. It is an option and the user should enable auto-queuing in thePreferencedialog. If enabled, all acquisition commands are automatically send into this queue. TheQueuebutton offers the possibility to use the queue even if auto-queuing is disabled or to delay the start of an acquisition by entering a certain start time. TheToolsbutton gives access to preferences and some other options and to leaveTopGuide(Quit).STOPwill stop the current acquisition and will disable the spooler. This is meant to be used as an emergency stop. If the user wants to end a running acquisition in a defined manner, he should typehaltinstead ofstop(orhalt 8on AVANCE II and newer spectrometers).haltwill finish the current scan and writes the acquired data to disk. General Concept ofTopGuide If a new sample should be measured some initial set up steps are strongly advised: tuning & matching the probe to the sample susceptibility, locking and shimming.TopGuidewill lead the user through these initial steps by either doing all this automatically or giving help information for manual operation. The automatic execution, of course, depends on the hardware configuration. A probe equipped with ATMA and a Z-gradient coil allows this. Without this hardware, some manual steps are required and the user is guided through manual tuning & matching and\/or manual shimming. If a Z-gradient is present,TopGuideassumes that automatic gradient shimming is set up and it will be used byTopGuide.TopGuidecaches the information about these steps executed, so further measurements (within the sameTopGuidesession) on the same sample will not ask for this again, unless the user changes the nucleus to be measured. If, for example, a 1H,13C-HSQC had been measured and thereforeTopGuideknows that the probe is tuned to 1H and 13C, and you now want to run a 1H,15N-HSQC (let's assume you have a BBI probe and therefore this is possible),TopGuidewill request to tune & match again, now to 15N instead of 13C. The use ofTopGuideto setup new experiments is based on a recorded 1H 1D spectrum. This proton spectrum is used to determine the signal to noise ratio (S\/N) for this sample.TopGuidewill select the highest signal in the spectrum (solvent peaks are automatically excluded), but the user may select a different peak\/area for the S\/N calculation. This may be of interest if the highest signal doesn't belong to the investigated compound in the case of mixtures or impurities. The determined S\/N is used to estimate the number of scans (NS) for further experiments, to obtain a spectrum with reasonable S\/N. TopGuideprovides a database with basic 1D and 2D experiments.TopGuidewill only offer those experiments, which may be run on the current hardware, i.e. if the current probe doesn't have a gradient,TopGuidewill not offer any experiment using gradients, but if the probe is equipped with a gradient,TopGuidewill preferably offer experiments using gradients. If the current probe is a 13C\/1H dual probe,TopGuidewill not offer any 15N experiment. There are some more filter criteria based on the field strength.TopGuidedoesn't use parameter sets likeIconNMR. Therefore,TopGuidewill never show the same experiments as you would see in the listing of parameter sets, it will always show recommended experiments. Before an additional experiment is performed,TopGuidewill ask you to determine the spectral width (SW) to be used in the proton dimension. It will pre-select the region with peaks found in the reference spectrum. You may change this to your needs but be aware that for homonuclear 2D measurements this SW will be applied to the indirect dimension as well. If you select a region which cuts off some signals, you may get folding of these peaks in the indirect dimension of a homonuclear 2D. The information about your selected SW is stored together with the reference spectrum and will be used in all further 1H dimensions for this sample. The database contains reasonable acquisition and processing parameters for all experiments in it. Some parameters are fixed (typical coupling constants), some are dynamic and are chosen based on the molecular size (like relaxation times or NOESY mixing times), the field strength (TD) or the actual experiment (different SW for 13C in HSQC and HMBC). Tools Button TheToolsbutton gives access to some preferences and options. Data Directory: the user can select the data directory where the NMR data is stored (disk unit). The initial setting depends on howTopGuidehas been started. If you startTopGuideon a loaded dataset, it will keep that disk unit, if you start with no active dataset this will open a new window and the data path defaults to the TopSpin installation directory (i.e.C:\\Bruker\\TopSpinunder Windowsor \/opt\/topspinunder Linux). User: if additional IconNMR users are defined, you can login as one of those. Preferences: you can enable or disableauto-processing. Depending on this setting newly acquired data is automatically processed with default processing parameters and options, or not. Protected acquisition: this means that once an FID or SER file has been acquired it is protected by TopGuide, you are not allowed to overwrite it. The start of a new acquisition on a dataset with an existing FID\/SER file will automatically create a new dataset (i.e. expno). Protected processing: the same protection as described above is applied to processed data. Existing ones are not overwritten, but instead a new procno is created. Import reference: Setting up experiments withTopGuiderequires a reference 1D spectrum, which is measured withTopGuideby default. If a 1D spectrum has already been recorded outside ofTopGuideand you want to use this one as a reference for further experiments, you can import it intoTopGuide. The import searches all expnos of the current dataset and displays the available 1D 1H spectra. SEE ALSO zg,halt,go,stop   "],["825193483","tr","825193483.html","",null," NAME tr-Transferdata to disk during the acquisition. DESCRIPTION The commandtrtransfers (writes) data to disk during a 1D acquisition. This is, for example, useful if you want to do a Fourier transform and view the spectrum before the acquisition has finished. Another reason to usetris to save the currently acquired scans of a long term acquisition. This avoids losing all data in case of a power loss. As an alternative to enteringtron the command line, you can click thebutton of the TopSpin toolbar. The commandtrcan even be entered with an optional parameter as commandtr <1...-NS>(please note that <1...-NS> must be integer and > 0). If <1...-NS> is defined the execution oftris delyed until the total number of scans reaches a multiple of <1...-NS>. This option is useful if a fid with a complete phase cycle should be stored to disk. As an alternative to typingtr <1...-NS> in the command linethe button can be used from the TopSpin toolbar with this button: This button opens the following dialog:  Save FID to disk OUTPUT FILES   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   fid- 1D raw data  acqus- acquisition status parameters SEE ALSO zg,go    "],["825204107","xaua, xaup","825204107.html","",null," NAME xaua-Execute the AU program specified with AUNM xaup-Execute the AU program specified with AUNMP DESCRIPTION The commandsxauaandxaupexecute the AU program which is specified by the parameters AUNM and AUNMP, respectively. In allBrukerparameter sets, these parameters are set to relevant Bruker AU programs. For example, in the parameter set PROTON, AUNM = au_zg and AUNMP = proc_1d. When parameter sets are used inautomation (IconNMR), the AU programs specified by AUNM and AUNMP perform the acquisition and the processing, respectively. For details on writing, compiling, and executing AU programs please refer to the TopSpin AU Programming manual (clickHelp|Manuals|Programming Manuals |AU Programming). INPUT PARAMETERS   Set by the user withedaor by typingaunm:   AUNM - acquisitionAU program name forxaua  Set by the user withedpor by typingaunmp:   AUNMP - processingAU program name forxaup INPUT FILES   <tshome>\/exp\/stan\/nmr\/au\/src\/   AU program source files (only input if the AU program is not compiled yet)  <tshome>\/prog\/au\/bin\/   AU program binary executables  <dir>\/data\/<user>\/<name>\/nmr\/<expno>\/   acqu- acquisition parameters (input file forxaua)  <dir>\/data\/<user>\/<name>\/nmr\/<expno>\/pdata\/<procno>\/   proc- processing parameters (input file forxaup) USAGE IN AU PROGRAMS   XAUA  XAUP  XAUPW XAUPW waits until the AU program has finished before the next statement is executed whereas XAUP doesn’t. XAUA works like XAUPW is this respect. SEE ALSO (xau, edau, delau),expinstall, (compileall, cplbruk, cpluser) "],["825212811","zg","825212811.html","",null," NAME zg-Perform an acquisition, overwriting possibly existing data DESCRIPTION The commandzgperforms an acquisition on the current dataset. A new data window will appear showing the currently acquired FID:  zg While an acquisition is running the buttons of the ACQU window have the following functions: Show FID in shuffled mode. Show FID in unshuffled mode, horizontally arranged. Show FID in unshuffled mode, vertically arranged. Show FID in unshuffled mode, interleaved. Switch between FID and spectrum. Halt the acquisition [halt]. Stop the acquisition [stop]. Thebutton toggles between FID and real time spectrum display and provides two extra buttons: Real time FT settings. Clicking this button opens the following dialog window:  Configure realtime spectrum display parameters Toggle calculation of peak with at 50%, 5.5% and 1.1% height. (Shown as status parameters)  The commandzgperforms the following sequence of actions:   Read the acquisition parameters.  Compile thepulse program defined by the acquisition parameter PULPROG.  Execute the pulse program. For most pulse programs this involves:   The acquisition of DSdummy scans.  The acquisition of NS real scans, accumulating the data.  Storing the accumulated data to disk.  Update the acquisition status parameters Acquisition Sequence Before you can start an acquisition withzg, you will normally have to prepare the experiment. This typically involves the following command sequence:   edprobe- define the currentprobe.  edprosol- define theprobe andsolvent dependent parameters.  new- define anew dataset and make it the current dataset.  rpar- read a standard parameter set for the desired experiment.  getprosol- get theprobe and solvent dependent parameters. NOTICE   Please note that thenewcommand offers the possibility to read a parameter set and to executegetprosol. A separaterparandgetprosolcommand is then not necessary.     lockdisp- open the lock display window.  lock- lock the magnetic field.  wobboratma- tune and match theprobe (atmaonly forATM probes).  edasp- set up nuclei (NUC1, NUC2 etc.) and the spectrometer routing  asedoreda- adjust the acquisition parameters to your needs.  zg- acquire the data. Pulse Program The type of experiment is mainly determined by the pulse program. A simple 1D Bruker pulse program iszg, which contains the following lines:   1 ze                ;zero memory, reset scan counter and phase lists,                       ;enable dummy scans, label 1   2 d1                ;relaxation delay with length D1, label 2     p1 ph1            ;pulse with length P1 and phaseph1     go=2 ph31         ;sample TD points with phaseph31, loop to 2                       ; times NS+DS     wr #0             ;write the data to the current dataset   exit                ;end of the pulse program   ph1=0 2 2 0 1 3 3 1 ;phase program (list) used for the RF pulse   ph31=0 2 2 0 1 3 3 1;phase program (list) used for the receiver  The RF pulsep1is executed on the default channel (f1) with the default power level (PL1). The loop to label 2 will be performed NS times to accumulate this number of scans. Thewrstatement lies outside of this loop which means the data are only written to disk once, at the end of the experiment. Furthermore, an information window will appear showing the current scan, the total number of scans and the residual experiment time. The purpose ofdummy scans is to reachsteady state conditions concerningT1 relaxation. This is necessary whenever therecycle delay of the experiment is shorter than 4 times the T1 value of the measured nucleus. Furthermore, dummy scans can be used to establish a stabletemperature. This is especially important in decoupling experiments where the irradiation high power increases thesample temperature. The number of dummy scans is determined by the acquisition parameter DS. In the pulse program, thezestatement explicitly enables thegostatement to perform dummy scans. In contrast, thezdstatement disables the execution of dummy scans. Transfer to Disk In most 1D experiments, the acquired data are written to disk only once, at the end of the experiment. You can, however, use the commandtrto write data to disk while the acquisition is running. This is, for example, useful if you want to do a Fourier transform and view the spectrum after a few scans. Another reason to usetris to save the currently acquired scans of a long-term experiment. This avoids losing all data in case of a power loss. In multidimensional experiments, thewrstatement is part of a loop, and is executed for each increment in the indirect direction(s). NOTICE   Note that in many pulse programs thewrstatement has been replaced by themcstatement which performs both the disk write and loop back function. Multidimensional Data zgallows you to perform 1D or multi-dimensional acquisition. The dimensionality of the data is determined by the pulse program. If this contains anifand\/orststatement,zgassumes a 2D or 3D dataset. Furthermore, if the pulse program contains a nested loop with loop counterstd1andtd2,zgassumes a 3D dataset. Finally, the acquisition parameter PARMODE is evaluated. If the value of PARMODE is not consistent with the pulse program,zgwill display a warning but allow you to continue the acquisition. 1D data are stored a file namedfidunder the experiment number (expno) of the current dataset. 2D and 3D data are stored in a file namedserin the same directory. The pulse program is not limited to 3D and allows you to acquire data in 4 or more directions. TopSpin 2.0 and newer supports processing of nD data. Datasets up to dimension 5 have been tested by Bruker. Stopping Acquisition Normally, an acquisition will run until it has finished. If, however, you want to interrupt it, you can do that by clicking thebutton or entering the commandhalt. This will finish the current scan, write the data to disk and then stop the acquisition.  NOTICE   Note thathaltfinishes the current scan but not the currentphase cycle.  Clicking thebutton or entering the commandstopimmediately stops the acquisition. It does not finish the current scan or write the data to disk. If, for some reason,haltandstopdo not work, you can use the commandkillto stop the acquisition. When an acquisition has finished but the signal to noise is insufficient, you can accumulate additional scans. Just set the parameter NS to the number of extra scans and entergo. This command does not overwrite the existing data but adds the extra scans to them.Caution:goworks correctly if the previous acquisition has finished normally but should not be used if this has been interrupted withhaltorstop(see the description ofgo). Preventing Data Overflow 1D raw data are, if necessary, stored as double precision (64-bit) data. If, based on the number of scans and the current accumulated signal, data overflow is expected to occur, data are transferred to the computer that controls the spectrometer, i.e. an automatictrcommand is executed. Here the data are stored in 64-bit double precision format. The acquisition status parameter DTYPA shows whether data are stored as integers (DTYPA = int) or doubles (DTYPA = double). NOTICE   Note that processed data are always stored as integer data. Preventing Data Overwrite zgoverwrites possibly existingraw data. Each user canconfigureTopSpin to get a warning about existing data or not. Click on the Preferences icon|Acquisitionand make sure that the entryOverwrite existing FID without inquiry(ZG safety off)is not checked. NOTICE   Note the difference betweenzgandgo. The latter command does not overwrite existing data but adds new data to them. After a manually performed acquisition has finished, it is normally processed withprocessing commands likeem,ft,apketc. Processing commands are described in the Processing Reference Manual. The commandzgis automatically executed by AU programs that contain the ZG macro. Examples of these areau_zg*,au_getl*andmultizg. Furthermore,zgis automatically executed when experiments are started from the automation interface IconNMR. NOTICE   Note that an acquisition always runs in background which means that TopSpin can do other tasks simultaneously. You can change the focus to a different data window and process data there. This is actually what happens all the time during an automation sequence performed by IconNMR. Pulse Programming TopSpin is supplied with a large number of pulse programs from simple 1D to sophisticated multidimensional experiments. Furthermore, you can write your own pulse programs with theedpulcommand using the Bruker pulse programs as an example. For a detailed description of the pulse program syntax click: Help|Manuals|Programming Manuals|Pulse Programming Manual Python programs and pulse programs can be integrated. Python programs can calculate pulse program parameters such as delays, pulses, phases and shapes using Python, and generate or execute a pulse program by executing a Python program. (cf .Help | Manuals | Programming Manuals |Pulse Programming With Python). Command Spooling\/Queuing zg, like other acquisition commands, is automatically queued. This allows you to enter multiplezgcommands, for example on different datasets. Queued commands can be viewed in the Spooling field of the acquisition status bar. Automatic command spooling as well as the display of the spooling field in the status bar can be enabled\/disabled in the User Preferences(commandset). INPUT PARAMETERS All acquisition parameters as described in chapter TopSpin Parameters of the Acquisition Reference Manual. OUTPUT PARAMETERS All acquisition status parameters as described in chapter TopSpin Parameters of the Acquisition Reference Manual. INPUT FILES 1D Data   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   acqu- acquisition parameters  2D Data   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   acqu- acquisition parameters direct direction (F2)  acqu2- acquisition parameters indirect direction (F1)  3D Data   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   acqu- acquisition parameters direct direction (F3)  acqu2- acquisition parameters indirect direction (F2)  acqu3- acquisition parameters indirect direction (F1)  All Data   <tshome>\/exp\/stan\/nmr\/lists\/ (primary source) or <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/lists (fallback if not found in primary source)   pp\/<PULPROG> - the pulse program defined by PULPROG  other list files (e.g. shapes, CPD programs as well as frequency, loopcounter, delay, or pulse lists) in their respective subfolders  <tshome>\/conf\/instr\/<curinst>\/   scon2- spectrometer parameters (created withedscon) OUTPUT FILES 1D Data   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   fid-raw data  acqus- acquisition status parameters  2D Data   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   ser- raw data  acqus- acquisition status parameters direct direction (F2)  acqu2s- acquisition status parameters indirect direction (F1)  3D Data   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   ser- raw data  acqus- acquisition status parameters direct direction (F3)  acqu2s- acquisition status parameters indirect direction (F2)  acqu3s- acquisition status parameters indirect direction (F1)  All Data   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   Pulseprogram.precomp- the precompiled pulse program  audita.txt- acquisition audit trail  scon2- spectrometer parameters  dslist- dataset list (output if awr #norwr##statement is used)  cag_par- rotation matrices for gradients used for imaging  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/lists   used list files (e.g. shapes, CPD programs as well as frequency, loopcounter, delay, or pulse lists) in their respective subfolders USAGE IN AU PROGRAMS   ZG  COMMAND LINE OPTIONS      -D <define>  set precompiler directive <define>   -scaleByRg  divide the fid by the receiver gain   -scaleByNs  divide the fid by the number of scans   rgAdjust  adjust receiver gain during dummy scans   interactive  allow parameter change during runtime of experiment   o1calib  used for the O1 calibration experiment   o1calib <stepsize> <rangesize>  calibration of O1 with specified stepsize and rangesize (both in Hz)   -help  print help message  SEE ALSO go,gs,rga,wobb,atma,suspend,resume             "],["825227275","Temperature Commands","825227275.html","",null," This chapter describes commands which configure, control or monitor the temperature unit. Temperature units which are delivered with Bruker spectrometers are often referred to as a eurotherm; the make of most units. They are used to warm up or cool down the NMR sample and keep it at a certain temperature during the experiment. "],["825231755","edte","825231755.html","",null," NAME edte-Edit thetemperature parameters DESCRIPTION The commandedteopens a dialog box from which thetemperature unit can be controlled (see the next figure).  edte The functionality of this window is described in a separate manual that can be opened from the TopSpin window by clicking: Help|Manuals|Technical Manuals|Temperature Regulation Or from theedtewindow by clicking: Help|Edte Users Manual SEE ALSO teget, te2get,teset, te2set  "],["825241611","teget, te2get","825241611.html","",null," NAME teget-Read the temperature from thetemperature unit. te2get- Read the second temperature from the temperature unit. DESCRIPTION The commandtegetqueries the temperature from thetemperature unit and stores it in the acquisition status parameter TE. The commandte2getqueries the secondtemperature from a temperature unit with two regulators and stores it in the acquisition status parameter TE2. Temperature units with two regulators are, for example, used in BEST NMR where the first regulator controls thesample temperature and the second regulator controls the inlet capillarytemperature. OUTPUT PARAMETERS   TE-temperature set on the temperature unit.  TE2- temperature set on the second temperature unit. OUTPUT FILES   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   acqus- acquisition status parameters USAGE IN AU PROGRAMS   TEGET  TE2GET SEE ALSO edte,teset, te2set "],["825249163","teset, te2set","825249163.html","",null," NAME teset-Set the temperature on thetemperature unit. te2set-Set the secondtemperature on the temperature unit. SYNTAX teset [<temperature>] te2set [<temperature>] DESCRIPTION The commandtesetsets the temperature on the temperature unit. It takes one argument and can be used as follows: teset Sets the temperature to the value of the acquisition parameter TE. Before you entertesetwithout argument you must set TE to the desired temperature, in Kelvin, either fromedaor by typingteon the command line. teset <temperature> Sets the temperature to the specified value. The commandtesetis, for example, used in the AU programsau_zgteandmulti_zgvt. The commandte2setworks liketesetexcept that it sets the so called second temperature to the value of the acquisition parameter TE2. This value is set on the second regulator of a temperature unit with two regulators. Such units are, for example, used in BEST NMR where the first regulator controls thesample temperature and the second regulator controls the inlet capillary temperature. INPUT PARAMETERS   TE -demand temperature on the temperature unit (input ofteset).  TE2 - demand second temperature on the temperature unit (input ofte2set). INPUT FILES   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   acqu- acquisition parameters USAGE IN AU PROGRAMS   TESET  TE2SET  VT executes the commandteset <vt_list_index> SEE ALSO edte,teget, te2get "],["824398219","MAS Commands","824398219.html","",null,""],["786479371","MasDisp","786479371.html","",null,""],["786484619","Accessing the User Interface","786484619.html","",null," The user interfacecan be accessed in different ways:   Entermasdispat the TopSpin prompt.  Clickmasin the TopSpinAcquisitiontab.  Click theMAS spin rateiconon the TopSpin acquisition status bar at the bottom of the TopSpin window.  The Main Tab of the TopSpin MAS Unser Interface.    "],["786541707","Masdisp Overview","786541707.html","",null," The user interface supplies the following tabs:   Main: Main window for routine operation.  Monitoring: Display of spin rate and pressure settings or readings.  Recording: Writing and (graphical) inspection of record files.  Configuration: Settings for displaying stability information and for window handling.  Log: Display of MAS unit notifications and error messages.  Help: Display of information about setting up and using the MAS unit.  A status lineis located at the bottom of the window. It displays the current state (rotation on\/off), the spinning stability, the current spinning speed, the system pressure, and the probe temperature as monitored and controlled by the variable temperature control unit."],["786638987","The Main Tab of the TopSpin MAS User Interface","786638987.html","",null,""],["786685323","Overview","786685323.html","",null," Most of the MAS operation is controlled from theMainmenu. It shows the following information (see the figure above) from top to down:   Current and desired spin rate.  Buttons for insert, eject, spinning, and stopping the rotor.  Supply pressure and internal operation pressure readings of the MAS unit.  Actual pressure settings for bearing, sense of bearing, and drive.  Frame cooling state and pressure setting.  Settings for probe, profile, rotor type, cap material, temperature limits, and spin rate limits.  At startup the following settings are displayed: probe, profile (this defines the regulation parameters and others), rotor type, cap material, temperature limits, and lower and upper spinning frequency limits. Except for the cap material usually no user input is required because the probe is set according to thecurrent probeas defined by theedprobecommand. The profile and rotor type are automatically chosen according to the probe. Temperature limits and frequency limits are defined by the cap material, the profile and the current probe, respectively and cannot be changed independently."],["786691979","Probe and Profile Selection","786691979.html","",null," For standard operation the user does not need to select the probe and corresponding profile. At startup the main tab will show the current probe as set byedprobe. A suitable profile (this defines the regulation parameters as well as maximum and minimum spinning frequencies) is automatically loaded. The user may change the probe by clicking on theExchange probebutton– the NMR super-user password is required for this. The probe cannot be changed while a rotor is spinning. The profile may be changed as well by choosing one of the available profiles from a drop-down list. Usually, the default profile will be the correct one, special profiles may be set for dedicated applications like slow spinning). Details of the current profile may be inspected by clicking theShow profilebutton."],["786697867","Rotor and Cap Type Selection","786697867.html","",null," The rotoris set according to the selected probe, this cannot be changed. The cap type may be selected from a drop-down menu, the default setting isKel-Ffor 4 mm and 7 mm rotors and Vespel for smaller diameter ones. The cap material defines the allowed temperature range and maximum spinning speed. For further information please refer to the SB-MAS Operation Manual underHelp | Manuals | Acquisition – Application Manuals | SB-MAS."],["786702987","Temperature Limits and Spin Rate Limits","786702987.html","",null," The displayed temperature limitsare set according to the probe and cap material settings. The display is for information only, the limits cannot be changed on their own. The same holds true for the spin rate limits, which are set according to the probe, profile, and cap material. If, e. g., a lower temperature limit is required the rotor must be equipped with suitable cap. If, e. g., slower spinning is desired a suitable profile needs to be chosen."],["786644491","Rotor Handling","786644491.html","",null,""],["786649611","Insertion and Removal","786649611.html","",null," Rotor insertionand removal are performed by clicking theInsertorEjectbutton, respectively. The unit will perform the necessary steps according to the probe type like applying insert and eject air, stator flipping for probes equipped with a flip type stator etc. TheEjectbutton is enabled as long as no rotation is running even when no sample is in the system. Both theInsertand theEjectbutton are inactive during sample spinning."],["786655883","Spinning and Stopping","786655883.html","",null," The target spin rateis shown on the top right side of theMainwindow together with the allowed spin rate range. The user may set the spin rate by clicking theSetbutton, this will open a small window in which the desired value may be typed. Changing the target frequency is always possible but not during the start and stop rotation phases. Entries outside of the allowed range cannot be set. Spinning is started or stopped by clicking theGobutton orStopbutton, respectively. TheGobutton is inactive beforeInsertis applied at least once. TheStopbutton is inactive if the rotor does not spin. The current spin rate is shown on the upper left side of theMainwindow, a color code is used to indicate regulation status:   Green color indicates that the rotor is spinning at the desired spinning speed with a defined tolerance (this is set in theConfigurationtab, seeThe Configuration Tab of the TopSpin MAS User Interface).  Red color indicates deviations from the desired spin rate.  Such deviations occur during normal operation when the rotor is spun up or down, or the spinning speed is changed. They may as well indicate a problem like instable spinning due to an imbalanced rotor or strong fluctuations of the supply pressure. In case the spinning stability is lost a corresponding message will be displayed just below the display of the current spin rate. The user may delete this message by clicking theResetbutton on its right side, see the next figure. The color codemay be changed by the user in theConfigurationtab of the TopSpin user interface.  TheMainTab of the TopSpin MAS User Interface in Case of Instable Spinning. NOTICE   Please note that on Avance spectrometers up to the III HD architecture, a MAS II Unit may be installed. On these units, insertion and ejection of the sample may be performed through their built-in digital panel. Avance Neo spectrometers are always delivered with MAS III units that are handled only through the TopSpin MAS user interface or its webpage.  "],["786664075","Pressure Display","786664075.html","",null,""],["786669195","Supply Pressure and System Pressure","786669195.html","",null," The supply pressureis the pressure of the gas supply for the MAS unit. This pressure is reduced to the system pressure in the unit which in turn is used to set bearing, drive, etc. The internal pressure has to be adjusted on the pressure regulatornear the gas tank."],["786674315","Bearing Pressure, Bearing Sense Pressure, and Drive Pressure","786674315.html","",null," The bearingand drive pressures are set by the MAS unit according to the probe, profile, rotor and cap material, and desired spinning speed. Both pressures are set by the MAS unit and displayed in the main window. The display is for information only, the values cannot be changed. The bearing pressure is used to put the rotor in levitation to cancel any mechanical resistance (friction force etc.). The drive pressure is set to the value needed to obtain sufficient tangential airflow that arrives on the fins of the rotor cap to reach the desired spinning speed. The bearing sense pressure is measured at the probe directly for safety purposes: The MAS unit supervises the bearing sense pressure constantly and stops the spinning if its value drops below a certain cutoff limit. This is intended to prevent a rotor damage caused by a loss of bearing pressure between MAS unit and probe. Such a loss may, e. g., occur if the MAS hoses or joints are not tight or damaged."],["786680203","Frame Cooling","786680203.html","",null," The frame coolingis a stream of ambient temperature gas which is applied to the probe's frame. This is intended as a cooling of the electric parts in high RF and high duty cycle experiments. It is as well used to keep the probe's electric parts at ambient temperature in high or low temperature experiments. Frame cooling is switched on by ticking the corresponding check box. The target frame cooling pressure may be set by clicking theSetbutton and typing in the desired value. The frame cooling may be used for other purposes, e. g. for transfer line cooling. NOTICE   Please note that at high spinning speed (typically close to the maximum rotor dependent spinning speed), the rotor may heat up. In such cases cooling is required to keep the sample at a suitable temperature."],["786547211","The Monitoring Tab of the TopSpin MAS User Interface","786547211.html","",null,""],["786552715","Purpose","786552715.html","",null," This tab is provided for information purposes. It supplies a graphical display of the spin rate and pressure settings or readings as a function of time, see the figure above."],["786557835","Configuration","786557835.html","",null," The user may define the displayed parameters by ticking the corresponding checkboxes in theConfiguresection of the tab. The parameter list may be shown or hidden by clicking theDown arrow\/Up arrowbutton, respectively, on top of window (left toConfigure). The following settings can be made.   General: Update interval in seconds.  Parameters.  Spin rate: Target and actual spin rate.  Pressures: Supply pressure and system pressure.  Bearing\/Drive pressure  If theAuto scalecheck box is marked the vertical and horizontal axes will constantly be rescaled to fit to the actual spin rate and pressure settings or readings. TheOverviewmode is similar to the TopSpin overview mode for spectra display, if the corresponding box is checked the full curve will always be shown on top of the actual display."],["786562955","Graphical Display","786562955.html","",null," For each of the parameter groups described above a separate graph will be shown (if no parameter of the corresponding group is selected, no graph will be shown). Each display has got icons similar to the TopSpin icons for expanding\/compressing the horizontal or vertical scales. If theOverviewmode is set (see above) the full curve will always be shown on top of the current display."],["786569227","The Recording Tab of the TopSpin MAS User Interface","786569227.html","",null,""],["786574731","Purpose","786574731.html","",null," The user may write and inspect record files in which spin rate and pressures settings and readings of the MAS unit are stored at defined time steps (see the figure above)."],["786580619","Defining the Recorded Parameters","786580619.html","",null," The left side of theRecordingtab is for user input and for the start of stop of the recording. The following sections are given:   Start\/Stop Recording: The user may start or stop the recording by clicking the appropriate button.  Record files: This shows a list of previously written record files. The file content may be displayed graphically (buttonShow graph) or edited (buttonShow file content). The user may delete files by clicking theDeletebutton. The user will be prompted to confirm the deletion.  Options. Here the recording interval and the time format are set and the user may define a suitable record file name. Record files are stored in the XXX directory."],["786586123","Monitoring of the Recorded Parameters","786586123.html","",null," On the right side of theRecordingwindow the last recorded lines written to file are displayed. The user may inspect these lines e. g. to check the proper choice of parameters and time interval. The display may be cleared by clicking theClearbutton."],["786593163","The Configuration Tab of the TopSpin MAS User Interface","786593163.html","",null,""],["786598667","Purpose","786598667.html","",null," This tab allows some settings for the graphical appearance of the TopSpin MAS interface. It is not intended to configure the MAS unit. For the latter purpose, however, a link to the MAS unit's web page is supplied."],["786603787","Settings","786603787.html","",null," The following sections are available: Stability Configuration:   Lock tolerance: thespinning speedlock tolerance intervaldefines the maximum deviation of the actual spin rate from the target spin rate which is regarded as acceptable for stable spinning. The default value is ±5 Hz, the user may change this to smaller or larger figures. It cannot be changed while a rotation is starting or stopping.  NOTICE   The spinning speed lock tolerance limit is only a monitoring parameter, it has no impact on the spinning regulation. It is used for the spinning speed color code, the stability indicator in the TopSpin MAS interface status bar, and theRotation Lock Lostentry of the record files.  Color   Color for stable rotation: This is the color for the spin rate display for stable spinning, the default color is green, the user may choose a different color by clicking theSelectbutton.  Color for unstable rotation: This is the color for the spin rate display if spinning is unstable, the default color is red, the user may choose a different color by clicking theSelectbutton. Red color appears also during the rotation starting and stopping phase.  Use default colors: This button may be clicked to undo any user choices and return to the default color scheme. Location   External TopSpin window: The MAS user interface will show up in a separate window which may be handled independently of the main TopSpin window.  Internal TopSpin window: The MAS interface will be incorporated into the main TopSpin window. MAS web pages   MAS main web page: Clicking theShowbutton will open a web browser and display the main MAS unit web page.  MAS firmware update: Clicking theShowbutton will open a web browser and display the MAS unit web page for firmware update. Magic Angle Adjustment NOTICE   Please note that for MAS probes, the Magic Angle (54.7° with respect to the vertical B0 main magnetic field) must be adjusted accurately with a KBR rotor. For detailed information please refer to the Solids User Manual (Help | Manuals | Acquisition – Application Manuals | Solids)."],["786611595","The Log Tab of the TopSpin User Interface","786611595.html","",null,""],["786617099","Purpose","786617099.html","",null," This tab allows to inspect, print, or clear notifications, error messages and information supplied by the MAS unit."],["786622219","Categories","786622219.html","",null," The following categories are displayed:   MAS Unit Notifications.  Current error messages.  Error message history: TheReloadbutton updates the display to include the most recent entries.  Info messages.   TheLogTab  To print a message category:   Click thePrintbutton.  To empty a message category:   Click theClearbutton.  "],["786630411","The Help Tab of the TopSpin User Interface","786630411.html","",null," This tab provides access to the MAS unit manual.  TheHelpTab  "],["825256715","Miscellaneous","825256715.html","",null," This chapter describes TopSpin commands that are somehow acquisition related and have not been described in previous chapters. "],["825261195","account","825261195.html","",null," NAME account-Show acquisition accounting statistics DESCRIPTION The commandaccountprints statistics derived from the experiments performed during a desired time. Statistics are only available if accounting is switched on. You can do this as follows:   ClickOptions=>Preferences[set].  ClickAcquisitionin the left part of thedialog box.  Check the itemEnable data-acquisition protocol.  ClickOK. INPUT FOLDERS <tshome>\/prog\/curdir\/acqhistory - acquisition accounting files SEE ALSO (set, hist)"],["825268747","crpon, crpoff, crplock, crpobs","825268747.html","",null," NAME crpon-Switch the cryopreamplifier on for the lock and observe channel. crpoff-Switch thecryo preamplifier off for the lock and observe channel. crpobs-Switch the cryo preamplifier on for the observe channel. crplock-Switch the cryo preamplifier on for the lock channel. DESCRIPTION Thecrp*commands listed above control the internal preamplifier of a cryoprobe. Cryoprobes operate at a reducedcoil and preamplifiertemperature which improves the signal to noise with a factor of 4. They are available as Dual (13C observe), Triple resonance (TCI1H,13C,15N) and also on Quadruple Resonance (QCI) probes. The commandcrponswitches from the external (HPPR) preamplifier to the internal cryo preamplifier. This happens for both the observe and the lock channel. The commandcrpoffswitches from the internal cryo preamplifier to the external (HPPR) preamplifier. This happens for both the observe and the lock channel. The commandcrplockswitches from the external (HPPR) preamplifier to the internal cryo preamplifier. This happens for thelock channel only. The commandcrpobsswitches from the external (HPPR) preamplifier to the internal cryo preamplifier. This happens for the observe channel only. NOTICE   Please note that the internal cryo amplifier is also cooled down, like the coil and internal electronics of the Cryo Probe.   SEE ALSO edprobe "],["825277835","delpar, delgp, delsh","825277835.html","",null," NAME delpar-Deleteparameter sets. delgp-Deletegradient programs. delsh-Deleteshim files. SYNTAX delpar [<name>] delgp and delsh have the same syntax as delpar DESCRIPTION Thedel*commands without argument open a dialog box with a list of the available entries. They are equivalent to the respective edit commandsrpar,edgpandrsh. From the dialog box, you can select entries and clickDeleteto delete them. Alternatively, you can use thedel*command with one argument, for example:   delpar myparset Deletes the parameter setmyparset.  NOTICE   Note that only user defined entries can be removed. INPUT FOLDERS   <tshome>\/exp\/stan\/nmr\/par - Bruker anduser defined parameter sets.  <tshome>\/exp\/stan\/nmr\/lists\/gp - Bruker anduser definedgradient programs.  <tshome>\/exp\/stan\/nmr\/lists\/bsms -shim files. USAGE IN AU PROGRAMS   DELPAR(name).  No AU macros are available for the otherdel*commands. SEE ALSO edlist, dellist, (delau, delpul, delcpd, delpy, delmac) "],["2799035787","deletetmpfiles","2799035787.html","",null," NAME deletetmpfiles- Delete temporary acquisition data files DESCRIPTION On a spectrometer, by default, all data stored temporarily on the EPU during an acquisition are deleted after completion of the experiment. This automatic deletion routine can be modified by clickingManage | Spectrometer | Manage temporary acquisition data(or entering the commanddeletetmpfiles).   The file tree in the main window displays only the data of those experiment numbers which were created by the same user which currently uses TopSpin:   Any temporary acquisition data of other users are not shown, i.e. also cannot be modified by the current user. The dialog appearing via the menuPreferences | Edit temporary acquisition data preferenceswas slightly reorganized:  It is not possible anymore to define an expire policy and a disk space policy at the same time, the user has to choose between those options. The default setting isDelete acquired data immediately. The functionalities of theReload-and theDelete-Button in the main window basically remain unchanged except for the user restrictions for the data displayed, as mentioned above. Furtherrmore the main window of theTemporary acquisition data- dialogue shows aDownload-Button. Via this button, the user can copy the experiment directories which were selected in the file tree from the EPU into an arbitrary directory on the workstation. ClickingDownloadopens a common file dialogue (shown below for a Windows - workstation) where the user can choose or create a target directory on the workstation:  ClickingCancelaborts the copy process. ClickingOpenstarts the copy process and yields a message in case of success:   Notice:Data copied from EPU to workstation are still present on the EPU afterwards. They have to be explicitly deleted by either clicking theDelete- button or by changing the deletion policy.       "],["825286155","exprof","825286155.html","",null," NAME exprof-Display excitation profile of selective experiment. DESCRIPTION The commandexprofdisplays the excitation profile of a selective experiment.The experiment must have been completely setup for acquisition, beforeexprofis executed. The commandexprofopens the dialog shown in the next figure.  exprof The dialog offers the following options:   Reference Pulse The 90° hard pulse in the same channel as the selective pulse.  Selective Pulse The selective pulse to be examined. If your pulse program contains only one selective pulse, and it follows the Bruker style guide (P1=90°, etc.)exprofautomatically selects the correct reference pulse.  Selective Pulse Type The rotation type is a selective pulse which allows the excitation of a reduced defined frequency range of the spectrum. Automatically set to the value stored in the shape file. If the shape file does not contain a rotation type, it is set to „not yet known“ and must be selected in the dialog. Shapes created with TopSpin 1.3 or older, or with external programs do not contain the rotation type.  Calculated Region(greyed if no spectrum exists) The profile can be calculated for the entire spectrum or for the currently displayed region. It always consist of 1000 points.  Keep Previous Results If enabled, the result of previousexprofcommand(s) is kept, allowing simultaneous display of multiple profiles. If your pulse program contains only one selective pulse and the waveform contains rotation type, you don’t have to set anything in theexprofdialog. Just clickOK, to confirm the dialog. The commandexprofrequires that theNMRSimprogram, delivered on the TopSpin DVD, is installed. For further Information please see the Shape Tool manual and the Pulse Programming Manual underHelp | Manuals. OUTPUT PARAMETERS   PULPROG - pulse program used for the acquisition  SHAPE - array of shaped pulse parameters INPUT FILES   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   acqu- acquisition parameters  <tshome>\/exp\/stan\/nmr\/lists\/wave\/*   Shape files  selgp SEE ALSO (nmrsim)   "],["825296779","getlim1d, getlcosy, getlxhco, getljres, getlinv","825296779.html","",null," NAME getlim1d-Calc. 1Dspectral width according tointegral ranges. getlcosy-Calc. 2D cosy spectral width from 1D int. ranges. getlxhco-Calc. 2D xhco spectral width from 1D int. ranges. getljres-Calc. 2D jres spectral width from 1D int. ranges. getlinv-Calc. 2D inverse spectral width from 1D int. ranges. DESCRIPTION Thegetl*commands listed above calculate and set the optimum spectral width for the specified experiment types. The optimum spectral width is determined from one or two associated 1D datasets, which are defined as the so called second and third dataset. Before the actual experiment is performed, the second (and if necessary the third) dataset must be acquired, Fourier transformed and baseline corrected. The latter processing step implicitly determines the integral ranges. Thegetl*commands determine the spectral width such that it includes all integral ranges, in other words, all signals. getl*commands are typically used inautomation. They are called from AU programs likeau_getl1d,au_getlcosy,au_getlinvandau_getlxhco. These, in turn, are called by IconNMR where the preparation and the actual experiment are defined as a so-calledcomposite 2D experiment (see IconNMR Online help for more information). getlim1ddetermines the optimum spectral width on a 1D preparation experiment and then sets the parameter SW on the current 1D dataset accordingly. getlcosydetermines the optimum spectral width on one 1D preparation experiment. Then it sets the F2-SW and F1-SW on the current 2D COSY dataset accordingly. getlxhcodetermines the optimum spectral width for F2 and F1 on two different 1D preparation experiments (typically 1H and X). Then it sets the F2-SW and F1-SW on the current 2D XH correlation dataset accordingly. getljresdetermines the optimum spectral width on one 1D preparation experiment. Then it sets F2-SW on the current 2D J-resolved dataset in accordingly. getlinvdetermines the spectral width on one 1D preparation experiment. Then it sets F2-SW on the current 2D INVERSE dataset accordingly. NOTICE   Note that F2-SW refers to the acquisition parameter SW in the F2 direction and F1-SW refers to the same parameter in the F1 direction. The first 1D preparation experiment is defined as the so called second dataset. The second 1D preparation experiment is defined as the so called third dataset. OUTPUT PARAMETERS   SW - spectral width in ppm INPUT FILES   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>   intrng- integral regions  curdat2- definition of second and third dataset OUTPUT FILES   <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   acqu- acquisition parameters  acqu2- F1 acquisition parameters of a 2D dataset USAGE IN AU PROGRAMS   GETLIM executes the commandgetlim1d  GETLCOSY  GETLXHCO  GETLJRES  GETLINV"],["825305099","hpdisp","825305099.html","",null," NAME hpdisp-Pulse program display showing signals going to spectrometer hardware, inclusive exact timing, phase and amplitude. DESCRIPTION The commandhpdispopens a new window with a display of all hardware events on selected channels. hpdisppresents the results of the pulse program simulation using the same software which sends the commands to hardware in a real experiment. NOTICE   Please note that displaying each event going to the spectrometer hardware may lead to a very large number of displayed entries, even for simplepulse programs (see the next figure).   hpdisp E.g. simple 1D experiment using adiabatic pulses for decoupling may generate millions of spectrometer events. SEE ALSO spdisp  "],["825314955","spdisp","825314955.html","",null," NAME spdisp-Symbolic (graphical) pulse program display. DESCRIPTION The commandspdispopens a new window with a symbolic pulse program display.  spdisp It takes one argument and can be used as follows:   spdisp Displays the pulse program defined by the acquisition parameter PULPROG.  spdisp<name> Displays the pulse program <name>. spdispstarts the pulse program display part ofNmrSim. The functionality of this program is described in theNMRSimmanual. This can be opened by clickingHelp|Manuals|Analysis and Simulation|NMRSim Experiment Simulation. spdispcan only start if the following conditions are met:   The Bruker AU programs have been installed (withexpinstall).  TheNMRSimprogram is installed (from the TopSpin DVD). SEE ALSO (nmrsim)  "],["825323275","stdisp","825323275.html","",null," NAME stdisp-ShapeToolfor handling RF shapes and gradients. DESCRIPTION The commandstdispopens theShapeToolwindow where you can create, manipulate and analyse RF shapes and gradients (see the next figure).  stdisp The functions of the buttons are available as tooltips. A detailed description ofstdispcan be found underHelp|Manuals|Acquisition Application Manuals|Shapetool. SEE ALSO st  "],["825333899","st","825333899.html","",null," NAME st- Generate, manipulate and analyze RF shapes and gradients DESCRIPTPION The commandstallows you to generate, manipulate and analyze RF shapes and gradients. It is described in a separate manual which can be opened as follows: clickHelp|Manuals|Acquisition - Application Manuals|ShapeTool SEE ALSO stdisp "],["1658941195","wvm","1658941195.html","",null," NAME wvm– WaveMaker (Software solution for pulse shaping) DESCRIPTION WaveMaker is a software solution for pulse shaping that is based on wave form definitions within the pulse programs. This avoids any need to modify the PROSOL tables when new or non-standard shaped pulses and decoupling or mixing wave forms are required. It also adds flexibility to and improves portability of many standard and user developed experiments and pulse programs. Porting the WaveMaker based pulse programs to NMR systems of different field strength is straightforward and typically requires no further adjustments and PROSOL updates. For detailed information please have a look at the WaveMaker – Pulse Shaping Software (User Manual). This can opened by clickingHelp | Manuals | Acquisition - Application Manuals | WaveMaker."],["3278283019","1D Processing Commands","3278283019.html","",null," This chapter describes all TopSpin 1D processing commands. Several of them can also be used to process one row of 2D or 3D data. They store their output in processed data files and do not change the raw data. For each command, the relevant input and output parameters are mentioned. Furthermore, the relevant input and output files and their location are mentioned. Although file handling is completely transparent, it is sometimes useful to know which files are involved and where they reside. For example, if you have permission problems or if you want to process or interpret your data with third party software. "],["3278308619","abs, absf, absd, bas","3278308619.html","",null," NAME abs - Automaticbaseline correction (1D) absf -Automatic baseline correction of theplot region (1D) absd - Automatic baseline correction, special algorithm (1D) bas - Open baseline correction dialog box (1D) DESCRIPTION Baseline correction commands can be started on the command line or from the baseline correction dialog box.    The latter is opened with the commandbas. This dialog box offers several options, each of which selects a certain command for execution. Auto-correct baseline using polynomial This option selects the commandabsfor execution. It performs an automatic baseline correction of the spectrum by subtracting apolynomial. Thedegree of the polynomial is determined by the parameter ABSG which has a value between 0 and 5, with a default of 5.absfirst determines which parts of the spectrum contain spectral information and stores the result in the fileintrng(integral regions). The remaining part of the spectrum is considered baseline and used to fit the polynomial function. absalso interprets the parameters ABSL, AZFW, AZFE and ISEN. Since these parameters apply to integration rather than baseline correction, they do not appear in thebasdialog box. They do appear in the integration dialog box (commandint). Data points greater than ABSL*(standard deviation) are considered spectral information, all other points are considered noise. If two peaks are more than AZFW apart, they are treated independently. If they are less than AZFW ppm apart, they are considered to beoverlapping. Integral regions are extended at both sides by AZFE ppm. If this extension causes adjacent regions to overlap, the centre of the overlap is used as the limit of the two regions. Only regions whose integrals are larger (area) than the largest integral divided by ISEN are considered. absndoes not store the integral regions. The command abs only stores the integral regions of positive peaks. To store the integral regions of both positive and negative peaks, following command sequence can be used:ef,mc,abs,efp,absn. Auto-correct spectral range ABSF1 .. ABSF2 only This option selects the commandabsffor execution. It works likeabs, except that it only corrects the spectral region which is determined by the processing parameters ABSF1 and ABSF2. Auto-correct baseline, alternate algorithm This option selects the commandabsdfor execution. It works likeabs, except that it uses a different algorithm (It uses the same algorithm as the command abs in DISNMR). It is, for example, used when a small peak lies on the foot of a large peak. In that case,absdallows to correct the baseline around the small peak which can then be integrated. Usuallyabsdis followed byabs. To display the integral regions determined by one of the above commands:   Right-click inside the data window and selectDisplay Properties  Check the entryIntegralsand clickOK The integral regions are also used by various commands which calculate spectral integrals likeli,lippandplot. If you run a command likeabsfrom the command line, you have to make sure that the required parameters are already set. Click the Procpars tab or enteredpto do that. If automaticbaseline correction does not give satisfactory results, you can apply an interactively determinedpolynomial,exponential,sine orspline baseline correction. This can be started with the first entry of thebasdialog box, by clicking thebutton in the toolbar or by entering.baslon the command line. Thebascommand can be used on 1D or 2D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT PARAMETERS Set from thebasdialog box, withedpor by typingabsg,absf1etc.: ABSG - degree of the polynomial (input ofabs,absf,absd) ABSF1 - low field (left) limit of the region corrected byabsf ABSF2 - high field (right) limit of the region corrected byabsf Set from theintdialog box, withedpor by typingabsl,azfwetc.: ABSL - integral sensitivity factor with reference to the noise AZFW - minimum distance between peaks for independent integration AZFE - integral extension factor ISEN - integral sensitivity factor with reference to the largest integral INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r- real processed 1D data proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r- real processed 1D data procs- processing status parameters intrng- integral regions (output ofabs,absf,absd) auditp.txt- processing audit trail USAGE IN AU PROGRAMS ABS ABSD ABSF SEE ALSO bcm,sab,bc;apbk, (.basl),sigreg   "],["3278316939","add, duadd, addfid, addc, adsu","3278316939.html","",null," NAME add -Add two data sets point-wise, multiply 2nd with DC (1D) duadd -Add two data sets ppm\/Hz-wise, mult. 2nd with DC (1D) addfid -Add two FIDs, multiply 2nd with DC (1D) addc - Add the constant DC to the current data set adsu - Open add\/subtract\/multiply dialog box (1D, 2D) DESCRIPTION Addition commands can be entered on the command line or started from the add\/subtract\/multiply dialog box. The latter is opened with the commandadsu. This dialog box offers several options, each of which selects a certain command for execution.   Add a 1D spectrum point-wise This option selects the commandaddfor execution. It adds the second data set, multiplied with the constant DC, to the current data set.addperforms a point to point addition which is independent of the spectrum calibration.The result is stored in the current data set. DC can be set by enteringdcon the command line or in theProcparspane. If the second data set has not been defined yet, the add\/subtract dialog box is opened. Here you can define the second data set and start theaddcommand.addworks on raw or on processed data, depending on the value of DATMOD. For DATMOD = raw,addadds the raw data of the current and second data set but stores the result as processed data in the current data set. The raw data of the current data set are not overwritten. Add a 1D spectrum ppm\/Hz-wise This option selects the commandduaddfor execution. It works likeadd, except that it adds two data sets according to their chemical shift values. Each ppm value of one data set is added to the same ppm value of a second data set. duaddis useful when the two input spectra are:   of different size  referenced differently  acquired with different frequencies (i.e. on different spectrometers)    For data with equal size, reference and spectrometer frequency,addandduaddgive the same result. Furthermore,duaddallows to shift the second spectrum by a user defined number of ppm. The parameterppmorhzis only relevant if the input data were acquired with different basic frequencies, i.e. when they come from different spectrometers.duaddonly works on processed data, independent of the value of DATMOD. Add an FID This option selects the commandaddfidfor execution. It adds two 1D raw data sets multiplying one of them with the factor DC. The result is stored in the current data set. It works likeaddwith DATMOD = raw, except that it overwrites theraw data. Add a constant This option selects the commandaddcfor execution. It adds the value of DC to the current data set. It works on raw or processed data, depending on the value of DATMOD. The result is stored as processed data in the current data set. If you run a command likeaddfrom the command line, it behaves slightly different. It adds the second and the third data set, as specified withedc2and stores the result in the current data set. You have to make sure that the required parameters are already set. Click the Procpars tab or enteredpto do that. Theadsucommand can be used on 1D or 2D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT PARAMETERS Set from theadsudialog box, withedpor by typingdc,datmodetc.: DC - multiplication factor DATMOD - data mode: work on raw or processed data INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- current raw data (input ofadd\/addcif DATMOD = raw) <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- current processed data (input ofadd\/addcif DATMOD = proc) proc- processing parameters curdat2 - definition of the second data set <dir2>\/data\/<user2>\/nmr\/<name2>\/<expno2>\/ fid- second raw data (input ofaddif DATMOD = raw,addfid) <dir2>\/data\/<user2>\/nmr\/<name2>\/<expno2>\/pdata\/<procno2>\/ 1r,1i- second processed data (input ofaddif DATMOD = proc) OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- current raw data (output ofaddfid) audita.txt- acquisition audit trail (output ofaddfid) <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- current processed data (output ofaddandaddc) procs- processing status parameters auditp.txt- processing audit trail (output ofaddandaddc) USAGE IN AU PROGRAMS ADD ADDFID ADDC SEE ALSO add2d, mul2d, addser,mul, mulc, nm, div   "],["3278329099","accumulate","3278329099.html","",null," NAME accumulate - Accumulate1D datasets ppm\/Hz-wise (1D) SYNTAX accumulate [start] offset scale Hz|ppm procno [expno [name [user [dir]]]] DESCRIPTION The commandaccumulateaccumulates 1D datasets. It adds a specified processed dataset to the current dataset.accumulatehas the following features:   the specified data can be shifted and scaled with respect to the current data.  addition can be performed ppm-wise or hz-wise  the specified data can overwrite the current data or can be added to the current data All required information must be specified by command line arguments. As such,accumulatetakes 4 to 9 arguments. Here are some examples of its usage: accumulate <offset> <scale> ppm|hz <procno> Add the processed data of the specifiedprocnoto the currentprocnoas follows:   shift the added data by <offset> ppm  scale added data by the value <scale>  perform the addition ppm-wise or hz-wise as specified Example:accumulate 0.0 1.0 ppm 3 accumulate start <offset> <scale> ppm|hz <procno> Same as above, except that the processed data of the specifiedprocnoare copied to the currentprocno, overwriting possibly existing data. Example:accumulate start 0.0 1.0 ppm 3 Note that here, the argumentsoffsetandppm|hzdo not affect the data but do affect the status parameter OFFSET. In the examples above, the accumulated dataset has the same datapath as the original data except for theprocno. To accumulate data with a different datapath, you can specify other parts of the datapath as arguments. Parts that are not specified are taken from the current dataset. Examples: accumulate <offset> <scale> ppm|hz <procno> <expno> accumulate start <offset> <scale> ppm|hz <procno> <expno> <user> <dir> accumulateworks like the commandduadd, except that all information is specified on the command line.accumulateis typically used repeatedly to accumulate a series of 1D processed data. The first instance ofaccumulateoverwrites the current data with the specified data, defining the accumulation start. All further instances add the specified data to the current data. OUTPUT PARAMETERS OFFSET - the ppm value of the first data point of the spectrum INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- current processed data proc- processing parameters <dir2>\/data\/<user2>\/nmr\/<name2>\/<expno2>\/pdata\/<procno2>\/ 1r,1i- second processed data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- current processed data procs- processing status parameters auditp.txt- processing audit trail SEE ALSO add, duadd, addfid, addc, adsu "],["3454239115","apbk","3454239115.html","",null," Name apbk– Combined baseline and phase correction DESCRIPTION The commandapbkprovides simultaneous linear phase and baseline correction of 1D spectra. The implementation consists of different algorithms that were developed to ensure optimal performance on spectra of different nuclei. The algorithm selection is performed automatically when theapbkcommand is run. Theapbkalgorithm that was developed and tested for13C,19F,31P,11B,15N and29Si spectra consists of a phase correction combined with a model-free baseline correction method. This allows better and more flexible baseline correction with respect to theabscommand which uses a polynomial for baseline modeling. For proton spectra, this approach was not successful due to the high signal density and the smaller spectral width typical of1H spectra. Therefore, another algorithm was developed and tested for1H spectra acquired without solvent suppression that relies on a deep neural network trained for baseline detection. When theapbkcommand is applied to any other 1D spectrum that does not fall into the categories listed above,apkandabsare executed instead to correct the phase and baseline.  USAGE apbk- Correct baseline and phase, write integration regions to disk. apbk –bo- Correct only baseline. apbk –po- Correct only phase. apbk –n -Correct baseline and phase, do not write integration regions to disk. apbk –intrng- Correct baseline and phase using pre-defined integration regions as input. Note: the integration regions will be replaced with new integration regions unless the -n option is added. apbk –f- Enforce the use of theapbkalgorithms. If this option is chosen for a1H spectrum, the deep learning based algorithm is applied, even if the spectrum was acquired with solvent suppression. If used on spectra of any other nucleus, the otherapbkalgorithm is enforced, even if the nucleus is not in the list of supported X-nuclei. Options only available for1H spectra: apbk -apk0- Correct only the zero-order phase.  INPUT FILES <dir>\/<name>\/<expno>\/pdata\/<procno>\/ 1r, 1i - processed 1D data (frequency domain)  OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r, 1i -processed 1D data (real, imaginary) proc -processing parameters procs -processing status parameters intrng -integral regions auditp.txt -processing audit trail  USAGE IN AU PROGRAMS ABPK  SEE ALSO abs, absf, absd, bas, apk, apks, apkm, apkf, ph "],["3278336651","apk0, apk1, apk0f","3278336651.html","",null," NAME apk0 -Zero-orderautomaticphase correction (1D) apk1-First-order automaticphase correction (1D) apk0f- Customized zero-order automatic phase correction (1D) ph- Open phase correction dialog box (1D\/2D) DESCRIPTION Phase correction commands can be entered on the command line or started from the phase correction dialog box:    This dialog is opened with the commandph. It offers several options, each of which selects a certain command for execution. Automatic phasing, 0th order only This option selects the commandapk0for execution. It works likeapk, except that it only performs the zero orderphase correction. Automatic phasing, 1st order only This option selects the commandapk1for execution. It works likeapk, except that it only performs the first orderphase correction. Automatic zero order phasing, selected region order only This option selects the commandapk0ffor execution. It works likeapkf, except that it only performs the zero orderphase correction. If you run a command likeapk0ffrom the command line, you have to make sure that the required parameters are already set. Click the Procpars tab or enteredpto do that. If automatic phase correction does not give satisfactory results, you can perform interactive phase correction. This can be started with the entryManual phasingin thephdialog box, by clicking thebutton in the toolbar or by entering.phon the command line. Thephcommand can be used on 1D, 2D or 3D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT PARAMETERS Set from thephdialog box, withedpor by typingabsf1,absf2etc.: ABSF1 - low field (left) limit of the region used byapk0f ABSF2 - high field (right) limit of the region used byapk0f OUTPUT PARAMETERS Can be viewed withedp,dppor by typingphc0,sphc0etc.: PHC0 - zero order phase correction value (output ofapk0andapk0f) PHC1 - first order phase correction value (output ofapk1) Note that this is one of the rare cases where the output parameters of a command are stored as processing (edp) and as processing status parameters (dpp). INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (real, imaginary) proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (real, imaginary) proc- processing parameters procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS APK0 APK1 APK0F SEE ALSO apk, apks,pk,mc,ps;apbk, (.ph)   "],["3278343819","apk, apks, apkm, apkf, ph","3278343819.html","",null," NAME apk - Automaticphase correction (1D) apks - Automatic phase correction with a different algorithm (1D) apkm - Automatic phase correction with a different algorithm 2 (1D) apkf - Customized automatic phase correction (1D) ph - Open phase correction dialog box (1D\/2D) DESCRIPTION Phase correction commands can be can be entered on the command line or started from the phase correction dialog box. This dialog is opened with the commandph. It offers several options, each of which selects a certain command for execution.    Automatic phasing This option selects the commandapkfor execution. It calculates the zero and first orderphase values and then corrects the spectrum according to these values. The phase values are stored in the parameters PHC0 and PHC1, respectively. Note thatapkstores the calculated phase values both as processing parameters (edp) and as processing status parameters (dpp). Automatic phasing, alternate algorithm This option selects the commandapksfor execution. It works likeapk, except that it uses a different algorithm which gives better results on certain spectra, for instance polymer spectra where peaks are concentrated only in one area. Automatic phasing, alternate algorithm 2 This option selects the commandapkmfor execution. It uses symmetric isolated peaks, regions with positive\/negative signals and regions of flat baseline for automated phase correction of 1D NMR spectra. The automated phasing is performed by means of minimization of certain penalty function with four terms. The first term is responsible for phases of symmetric isolated peaks, the second accounts for regions with positive\/negative signals, the third accounts for baseline regions, and the fourth gives additional penalty for large values of first-order phase correction parameter PHC1. For a full description ofapkm, enter the TopSpin commandhelpapkm. Automatic phasing, selected region only This option selects the commandapkffor execution. It works likeapk, except that it uses only a certain region of the spectrum for the calculation of the phase values. This region is determined by the parameters ABSF1 and ABSF2. The calculated phase values are then applied to the entire spectrum. Note that the parameters ABSF1 and ABSF2 are also used by the commandabsf. If you run a command likeapkffrom the command line, you have to make sure that the required parameters are already set. Click the Procpars tab or enteredpto do that. If automatic phase correction does not give satisfactory results, you can perform interactive phase correction. This can be started with the entryManual phasingin thephdialog box, by clicking thebutton in the toolbar or by entering.phon the command line. Thephcommand can be used on 1D or 2D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT PARAMETERS Set from thephdialog box, withedpor by typingabsf1,absf2etc.: ABSF1 - low field (left) limit of the region used byapkf ABSF2 - high field (right) limit of the region used byapkf OUTPUT PARAMETERS Can be viewed withedp,dppor by typingphc0,sphc0etc.: PHC0 - zero order phase correction value (frequency independent) PHC1 - first order phase correction value (frequency dependent) Note that this is one of the rare cases where the output parameters of a command are stored as processing (edp) and as processing status parameters (dpp). INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (real, imaginary) proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (real, imaginary) proc- processing parameters procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS APK APKF APKS SEE ALSO apk0, apk1, apk0f, ph;apbk   "],["3278350603","bc","3278350603.html","",null," NAME bc -Baseline correction of the FID (1D) DESCRIPTION The commandbcperforms a baseline correction of raw 1D data. The type of correction is determined by the processing parameter BC_mod as shown in the following table:      BC_mod  Function subtracted from the FID  Detection mode   no  no function     single  average intensity of the last quarter of the FID  single channel   quad  average intensity of the last quarter of the FID  quadrature   spol  polynomial of degree 5 (least square fit)  single channel   qpol  polynomial of degree 5 (least square fit)  quadrature   sfil  Gaussian function of width BCFW*  single channel   qfil  Gaussian function of width BCFW  Quadrature   *Marion, Ikura, Bax, J. Magn. Res. 84, 425-420 (1989)  spol\/qpolandsfil\/qfilare especially used to subtract strong signals, e.g. a water signal at the centre of the spectrum. Note thatsfil\/qfilperform a better reduction at the risk of losing valuable signal. For reducing off-centre signal, you can set the parameter COROFFS to the offset frequency. In this table,s(ingle)stands for singledetection mode andq(uad)forquadrature detection mode.bcevaluates BC_mod for the function to be subtracted but not for the detection mode. The latter is evaluated from the acquisition status parameter AQ_mod. This means, for example, it does not matter if you set BC_mod tosingleorquad. The same counts for the valuesspol\/qpolandsfil\/qfil. Furthermore, for AQ_mod = DQD, no baseline correction is performed for BC_mod =singleorquad. Note that the commandstrfandxtrf*do evaluate the detection mode from BC_mod and perform the baseline correction for BC_mod =single\/quadwhen AQ_mod = DQD. The commandbcis automatically executed as a part of the commandsem,gm,ft, or any of the composite Fourier transform commands. When executed on a 2D or 3D dataset,bcprompts you for the row and outputprocno. Alternatively, it can be entered with up to four arguments: bc <row> <procno> n y processes the specified row and stores it under the specifiedprocno. The last two arguments are optional:nprevents changing the display to the output 1D data,ycauses a possibly existing data to be overwritten without warning. When executed on a dataset with 2D or 3D raw data but 1D processed data (usually a result of rsr, rsc or a 1D processing command on that 2D or 3D data set),bctakes one argumentbc <row>to process the specified row and stores it under the currentprocno. bc sameprocesses the same row as the previous processing command and stores it under the currentprocno. Thesameoption is automatically used by the AU program macro BC. When used on a regular 1D dataset (i.e. with 1D raw data) it has no effect. bccan also be started from the baseline dialog box which is opened with the commandbas. INPUT PARAMETERS Set from thebasdialog box, withedpor by typingbc_mod,bcfwetc.: BC_mod - FID baseline correction mode BCFW - filter width for BC_mod = sfil or qfil COROFFS - correction offset in Hz, for BC_mod = spol or qpol and sfil\/qfil INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- raw data (time domain) <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed data (time domain) procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS BC SEE ALSO (bas)"],["3278358155","bcm","3278358155.html","",null," NAME bcm -User defined spectrumbaseline correction (1D) DESCRIPTION The commandbcmperforms a spectrum baseline correction by subtracting apolynomial,sine orexponential function. This involves the following steps:   Clickor enter.baslto change to baseline correction mode.  Fit the baseline of the spectrum with apolynomial,exponentialorsinefunction. Click-hold the buttonAand move the mouse to determine thezero order correction. Do the same with the buttonsB,Cetc. for higher order corrections until the line matches the baseline of the spectrum.  Clickto return. The commandbcmis automatically executed. The interactively determined baseline function is stored in the filebase_info. This file can be stored for general usage with the commandwmisc. After that, you can read it withrmiscon another dataset and runbcmto perform the same baseline correction.In this case,bcmcan be started from the command line or from the baseline dialog box which is opened with the commandbas. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r- real processed 1D data proc- processing parameters base_info- baseline correction coefficients OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r- real processed 1D data procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS BCM SEE ALSO abs, absf,sab, (.basl)   "],["3278365707","dt","3278365707.html","",null," NAME dt - Calculate the first derivative of the data (1D) DESCRIPTION The commanddtcalculates the first derivative of the current dataset. Depending on the value of DATMOD,dtworks on the raw or on the processed data. INPUT PARAMETERS Set by the user withedpor by typingdatmod: DATMOD - data mode: work on raw or processed data INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- raw data (input if DATMOD = raw) <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (input if DATMOD = proc) proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (real, imaginary) procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS DT"],["3278372491","ef, efp","3278372491.html","",null," NAME ef -Exponentialwindow multiplication +Fourier transform (1D) efp - Exponential window multiplication + FT +phase correction (1D) DESCRIPTION Thecomposite processing commandefis a combination ofemandft, i.e. it performs an exponential window multiplication and a Fourier transform. efpis a combination ofem,ftandpk, i.e. it does the same asefbut, in addition, performs a phase correction. efandefpautomatically perform an FIDbaseline correction according to BC_mod. All composite processing commands can be found in the menu: Process | Advanced | Special Transforms INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- raw data (input if1r,1ido not exist or are Fourier transformed) acqus- acquisition status parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed data (input if they exist but are not Fourier transformed) proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (real, imaginary) procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS EF EFP SEE ALSO gf, gfp,fp, fmc "],["3278376971","em, gm, wm","3278376971.html","",null," NAME em -Exponentialwindow multiplication of the FID (1D) gm -Gaussianwindow multiplication of the FID (1D) wm - Open window function dialog box (1D, 2D) DESCRIPTION Window multiplication commands can be entered on the command line or started from the window function dialog box. The latter is opened with the commandwm.    The parameter section of this dialog box offers several window functions, each of which selects a certain command for execution. Exponential multiplication This function selects the commandemfor execution. It performs an exponential window multiplication of the FID. It is the most used window function for NMR spectra.emmultiplies each data pointiwith the factor:  Where LB (the line broadening factor) is a processing parameter and SWH (the spectral width) an acquisition status parameter. Gaussian multiplication This function selects the commandgmfor execution. It performs a Gaussian window multiplication of the FID. The result is a Gaussian line shape after Fourier transform. This line shape has sharper edges than the line shape caused byem.gmmultiplies the FID with the function:  Wheretis the acquisition time in seconds and the parameters a and b are defined by:  In this equation, LB and GB are processing parameters which represent the exponential broadening factor and the Gaussian broadening factor, respectively. AQ is an acquisition status parameter which represents the acquisition time. gmallows to separateoverlapping peaks. The quality of the separation depends on the choice of the parameters LB and GB. Suitable values can be determined withManual window adjustment. The value of LB must be negative, typically the half line width of the spectral peaks. Note that forexponentialwindow multiplication (em), LB must be positive. The value of GB must lie between 0 and 1. It determines the position of the top of the Gaussian function. For example, for GB = 0.5 the top lies in the middle of the FID. Note that for large values of GB (close to 1), peaks can become negative at the edges which can impair quantitative analysis of the spectrum. emandgmimplicitly perform a baseline correction of the FID, according to the processing parameter BC_mod. Furthermore, they perform linear prediction according to the parameters ME_mod, NCOEF and LPBIN. When executed on 2D or 3D data,emandgmtake up to four arguments, e.g.em <row> <procno> n yprocess the specified row and store it under the specifiedprocno. The last two arguments are optional:nprevents changing the display to the output 1D data,ycauses a possibly existing data to be overwritten without warning. When executed on a dataset with 2D or 3D raw data but 1D processed data (usually a result of rsr, rsc or a previous 1D processing command on that 2D or 3D data,emandgmtake one argument, e.g.em <row>processes the specified row and stores it under the currentprocno. em sameprocesses the same row as the previous processing command and stores it under the currentprocno. Thesameoption is automatically used by the AU program macros EM and GM. When used on a regular 1D dataset (i.e. with 1D raw data) it has no effect. If you run a command likeemfrom the command line, you have to make sure that the required parameters are already set. Click the Procpars tab or enteredpto do that. Thewmcommand can be used on 1D or 2D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT PARAMETERS Set from thewmdialog box, withedpor by typinglb,bc_modetc.: LB - Lorentzian broadening factor GB - Gaussian broadening factor BC_mod - FID baseline correction mode Set by the acquisition, can be viewed withdpaorsswh: SWH - spectral width INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- raw data (input if1r,1ido not exist or are Fourier transformed) acqus- acquisition status parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed data (input if they exist but are not Fourier transformed) proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (real, imaginary) procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS EM GM SEE ALSO sinm, qsin, sinc, qsinc,tm, traf, trafs     "],["3278382219","filt","3278382219.html","",null," NAME filt -Digital filtering of the data (1D) DESCRIPTION The commandfiltsmoothes the data by replacing each point with a weighted average of its surrounding points. By default,filtuses theweighting coefficients 1-2-1 which means that the intensityp(i)of data pointiis replaced by: 1 *p(i– 1) + 2 *p(i) + 1 *p(i+ 1). Different weighting algorithms can be set up by creating a new file in the directory: <tshome>\/exp\/stan\/nmr\/filt\/1d Just copy the default filethreepointto a different name and modify it with a text editor. The file must look like: 3,1,2,1 or 5,1,2,3,2,1 Where the first number represents the number of points used for smoothing and must be odd. The other numbers are theweighting coefficients for the data points. The processing parameter DFILT determines which file is used byfilt. This is one of the few cases where file handling cannot be done from TopSpin and needs to be done on operating system level. INPUT PARAMETERS Set by the user withedpor by typingdfilt,datmodetc. : DFILT - digital filter filename DATMOD - data mode: work on raw or processed data INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (real, imaginary) proc- processing parameters <tshome>\/exp\/stan\/nmr\/filt\/1d\/* digital filtering file(s) OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (real, imaginary) procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS FILT"],["3278389771","fp, fmc","3278389771.html","",null," NAME fp -Fourier transform +phase correction (1D) fmc -Fourier transform +magnitude calculation (1D) DESCRIPTION Thecomposite processing commandfpis a combination offtandpk, i.e. it performs a 1D Fourier transform and a phase correction. fmcis a combination offtandmc, i.e. it performs a 1D Fourier transform and a magnitude calculation. fpandfmcautomatically perform an FID baseline correction according to BC_mod. All composite processing commands can be found in the menu: Process | Advanced | Special Transforms INPUT AND OUTPUT PARAMETERS See the commandsft,pkandmc. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- raw data (input if1r,1ido not exist or are Fourier transformed) acqus- acquisition status parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed data (input if they exist but are not Fourier transformed) proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (real, imaginary) procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS FP FMC SEE ALSO ef, efp,gf, gfp "],["3278399627","ft, ftf","3278399627.html","",null," NAME ft -Fourier transform (1D) ftf - Open the Fourier transform dialog box (1D, 2D) DESCRIPTION The commandftFourier transforms a 1D dataset or a row of a dataset with dimension ≥ 2. It can be started from the command line or from the Fourier transform dialog box. The latter is opened with the commandftf    This dialog box offers two options both of which select theftcommand for execution. Standard Fourier Transform This option only allows to set the parameter SI, the size of the real spectrum. Advanced Fourier Transform This option allows to set all FT related parameters. Fourier transform is the main step in processing NMR data. Thetime domain data (FID) which are created by acquisition are transformed intofrequency domain data (spectrum). Usually, Fourier transform is preceded by other processing steps like FIDbaseline correction (bc) andwindow multiplication (em,gm, etc.) and followed by steps likephase correction (apk) and spectrumbaseline correction (abs). The size of the resulting spectrum is determined by the parameter SI. An FID of TD time domain points is transformed to a spectrum of SI real and SIimaginary data points. A typical value for SI is TD\/2. In that case, all points of the FID are used by the Fourier transform and nozero filling is done. The size of the spectrum and the number of FID points which are used can be determined in the following ways:   SI > TD\/2: the FID is zero filled  SI < TD\/2: only the first 2*SI points of the FID are used  0 < TDeff < TD: only the first TDeff points of the FID are used In the latter two cases, the spectrum will contain less information then the FID. Note that the parameter TDoff only plays a role for linear prediction and in 2D and 3DFourier transform. You can also perform a so-calledstrip transform which means that only a certain region of the spectrum is stored. This can be done by setting the parameters STSR and STSI which represent thestrip start andstrip size, respectively. They can take values between 0 and SI. The processing status parameters STSI and SI are both set to this value. You can check this by enteringdppor clicking the Procpars tab. The Fourier transform mode depends on theacquisition mode;single,sequentialorsimultaneous. For this purpose,ftevaluates the acquisition status parameter AQ_mod as shown in the table below:      AQ_mod  FT_mod  Fourier transform mode   qf  fsr  forward, single channel, real   qsim  fqc  forward, quadrature, complex   qseq  fqr  forward, quadrature, real   DQD  fqc  forward, quadrature, complex  Note thatftdoes not evaluate the processing parameter FT_mod but it does store the Fourier transform mode, as evaluated from theacquisition mode, in the processing status parameter FT_mod. However, the commandtrfdetermines theFourier transform mode from the processing parameter FT_mod and not from the acquisition mode (seetrf). ftevaluates the parameter FCOR. The first point of the FID is multiplied with FCOR which is a value between 0.0 and 2.0. However, onAvance spectrometers, the FID ofdigitally filtered data starts with agroup delay of which the first points are zero so that the value of FCOR is irrelevant. On A*X data, FCOR allows to control the DC offset of the spectrum. ftevaluates the parameter PKNL. On A*X spectrometers, PKNL = true causes a non linear 5th orderphase correction of the raw data. This corrects possible errors caused by non linear behaviour of the analog filters. On Avance spectrometers, PKNL must always be set to TRUE. Fordigitally filtered data, it causesftto handle thegroup delay of the FID. For analog data it has no effect. ftevaluates the parameter REVERSE. If REVERSE = TRUE, the spectrum will bereversed, i.e. the first output data point becomes the last and the last point becomes the first. The same effect is attained by using the commandrvafterft. ftautomatically performs an FID baseline correction according to BC_mod. ftperformslinear prediction according to ME_mod. This parameter can take the following values: no: no linear prediction LPfr: forward LP on real data LPfc: forward LP on complex data LPbr: backward LP on real data LPbc: backward LP on complex data LPmifr: mirror image forward LP on real data LPmifc: mirror image forward LP on complex data Forwardprediction can, for example, be used to extendtruncated FIDs. Backward prediction can be used to improve the initial data points of the FID.ftdetermines thedetection mode (real or complex) from the acquisition status parameter AQ_mod, not from ME_mod. As such,ftdoes not distinguish between ME_mod = LPfr and ME_mod = LPfc. The same counts for backward prediction. Note that the commandtrfdoes determine the detection mode from ME_mod. Linear prediction is only performed for NCOEF > 0. Furthermore, LPBIN and, for backward prediction, TDoff play a role (see these parameters in chapter List of processing parameters). By default, ME_mod is set tonowhich means no linear prediction is done. When executed on a 2D or 3D dataset,fttakes up to four arguments, e.g.ft <row> <procno> y n, process the specifiedrowand store it under the specifiedprocno. The last two arguments are optional:ycauses a possibly existing data to be overwritten without warning,nprevents TopSpin from changing to the destination dataset. Note that the oder of the last two arguments,yandn, is irrelevant. If you run a command likeftfrom the command line, make sure that the required parameters are already set. Click the Procpars tab or enteredpto do that. Theftcommand can be used on multidimensional data. In that case it automatically recognizes the dimensionality of the data and prompts for the row to be processed and the outputprocno. It only applies to the acquisition direction. Theftfcommand can be used on 1D and 2D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT PARAMETERS Set from theftfdialog box, withedpor by typingsi,stsretc.: SI - size of the processed data STSR - strip start: first output point of strip transform STSI - strip size: number of output points of strip transform TDeff - number of raw data points to be used for processing FCOR - first (FID) data point multiplication factor (0.0-2.0, default 0.5) REVERSE - flag indicating to reverse the spectrum PKNL - group delay compensation (Avance) or filter correction (A*X) ME_mod - FID linear prediction mode NCOEF - number of linear prediction coefficients LPBIN - number of points for linear prediction TDoff - number of raw data points predicted for ME_mod = LPb* Set by the acquisition, can be viewed withdpaor by typingsaq_modetc.: AQ_mod - acquisition mode (determines the Fourier transform mode) TD - time domain; number of raw data points BYTORDA - byteorder or the raw data NC - normalization constant OUTPUT PARAMETERS Can be viewed withdppor by typingsft_mod,stdeffetc.: FT_mod - Fourier transform mode TDeff - number of raw data points that were used for processing STSR - strip start: first output point of strip transform STSI - strip size: number of output points of strip transform NC_proc - intensity scaling factor YMAX_p - maximum intensity of the processed data YMIN_p - minimum intensity of the processed data BYTORDP - data storage order INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- raw data (input if1r,1ido not exist or are Fourier transformed) acqus- acquisition status parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed data (input if they exist but are not Fourier transformed) proc- processing parameters OUTPUT FILES 1r,1i- processed 1D data (real, imaginary) procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS FT SEE ALSO ift,ht,trf, trfp  "],["3278409483","genfid","3278409483.html","",null," NAME genfid - Generatepseudo-raw data (1D) DESCRIPTION The commandgenfidgenerates pseudo-raw data from processed data. When entered without arguments, it opens a dialog box where you can specify the destination dataset.    genfidis normally used in combination with the commandiftwhich performs aninverse Fourier transform, converting a spectrum into an FID. Actually,ifttransforms processedfrequency domain data into processedtime domain data.genfidconverts these processed time domain data into pseudo-raw time domain data and stores them under a new name or experiment number (expno). Note thatgenfiddoes not modify the data, but only stores them in a different format. The number of data points of the pseudo-raw data, is twice the size (SI) of the processed data they are created from. The acquisition status parameter TD (typesstdordpa) is set accordingly; TD = 2*SI. genfidtakes arguments and can be used as follows:   genfid <expno>  The FID will be stored under the specifiedexpno.  genfid <expno> <name> y  The FID will be stored under the specifiednameandexpno. The last argument (y) causesgenfidto overwrite possibly existing data. You can use any other combination of arguments as long they are entered in the correct order. The processed data number (procno) of the output dataset is always set to 1. genfidcan be used if you want to reprocess a 1D spectrum, for example with different processing parameters, but the raw data do not exist any more. An example of such a procedure is: ift(if the data are Fourier transformed) genfid(to create the pseudo-raw data) edp(to set the processing parameters) ef(to process the pseudo-raw data) If the input data are processed but not Fourier transformed, you can skip the first step. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed time domain data (real, imaginary) OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- pseudo-raw data audita.txt- acquisition audit trail USAGE IN AU PROGRAMS GENFID(expno) Overwrites possibly existing raw data in the specifiedexpno SEE ALSO ift,genser  "],["3278417803","gf, gfp","3278417803.html","",null," NAME gf -Gaussianwindow multiplication +Fourier transform (1D) gfp - Gaussian window multiplication + FT +phase correction (1D) DESCRIPTION Thecomposite processing commandgfis a combination ofgmandft, i.e. it performs a Gaussian window multiplication and a Fourier transform. gfpis a combination ofgm,ftandpk, i.e. it does the same asgfbut, in addition, performs a phase correction. gfandgfpautomatically perform an FID baseline correction according to BC_mod. All composite processing commands can be found under the menu: Process | Advanced | Special Transforms INPUT AND OUTPUT PARAMETERS Seegm,ftandpk INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- raw data (input if1r,1ido not exist or are Fourier transformed) acqus- acquisition status parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed data (input if they exist but are not Fourier transformed) proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (real, imaginary) procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS GF GFP SEE ALSO ef, efp,fp, fmc "],["3278427659","ht","3278427659.html","",null," NAME ht -Hilberttransform (1D) DESCRIPTION The commandhtperforms a Hilbert transform which means theimaginary part of a spectrum is calculated from the real part. This is only useful when the real data have been created from zero filled raw data, with SI ≥ TD. Only then they will contain the entire spectral information. Imaginary data are required forphase correction. They are normally created together with the real data byFourier transform. Directly after the Fourier transform, real and imaginary data are consistent and can be used for phase correction. If, however, the real data are manipulated, e.g. byabs, they are no longer consistent with the imaginary data. In that case, or when the imaginary data have been deleted,htcan be used to create new imaginary data. Hilbert transform is based on the so called dispersion relations or Kramers-Kronig relations (see, for example, R. R. Ernst, G. Bodenhausen and A. Wokaun, Principles of nuclear magnetic resonance in one and two dimensions, Clarendon Press, Oxford, 1987). INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> 1r- real processed 1D data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1i- imaginary processed data auditp.txt- processing audit trail USAGE IN AU PROGRAMS HT SEE ALSO ift,ft, ftf,trf, trfp "],["3278435979","ift","3278435979.html","",null," NAME ift -InverseFourier transform (1D) DESCRIPTION The commandiftperforms an inverse Fourier transform of a 1D spectrum, thus creating an artificial FID. Normally,iftis done when the raw data do not exist any more. If, however, raw data do exist, they are not overwritten.iftstores the resulting FID as processed data, i.e. it overwrites the current spectrum. Afterift, you can createpseudo-raw data with the commandgenfidwhich creates anew dataset. Note that the number of data points of the pseudo-raw data, is twice the size of the processed data they are created from. The acquisition status parameter TD (dpa) is set accordingly; TD = 2*SI. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (frequency domain) OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (time domain) auditp.txt- processing audit trail USAGE IN AU PROGRAMS IFT SEE ALSO genfid,ft, ftf,trf, trfp "],["3278444299","ls, rs","3278444299.html","",null," NAME ls -Left shift data NSP points (1D) rs -Right shift data NSP points (1D) DESCRIPTION The commandlsshifts 1D data to the left. The number of points shifted is determined by the parameter NSP. The right end of the data is filled with NSP zeroes. rsshifts 1D data to the right. The number of points shifted is determined by the parameter NSP. The left end of the data is filled with NSP zeroes. Depending on the parameter DATMOD,rsandlswork on raw or processed data. The value of NSP is the number of the real plus imaginary data points that are shifted. As such, the real data are shifted NSP\/2 points and the imaginary data are shifted NSP\/2 points. For odd values of NSP the real and imaginary data points are interchanged. As such the displayed spectrum is not only shifted but also changes from real (absorption) to imaginary (dispersion) or vice versa. Note that his only plays a role for DATMOD = proc. INPUT PARAMETERS Set by the user withedpor by typingnsp,datmodetc.: NSP - number of points to be shifted DATMOD - data mode: work on raw or processed data INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- raw data (input if DATMOD = raw) <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (input if DATMOD = proc) proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i -processed 1D data (real, imaginary) procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS LS RS SEE ALSO pk "],["3278451851","mc","3278451851.html","",null," NAME mc -Magnitudecalculation (1D) DESCRIPTION The commandmccalculates themagnitude spectrum of a 1D dataset. The intensity of each pointiis replaced by its absolute value according to the formula:  Where R and I are the real andimaginary part of the spectrum, respectively. If no processed input data exist,mcworks on the raw data. mccan also be started from the phase correction dialog box which is opened withph. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- raw 1D data (input if1r,1ido not exist) <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (input if they exist) OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (real, imaginary) auditp.txt- processing audit trail USAGE IN AU PROGRAMS MC SEE ALSO ps,pk,apk, apks, apkm, apkf, ph,trf, trfp  "],["3278456331","mul, mulc, nm, div","3278456331.html","",null," NAME mul -Multiply two datasets (1D) mulc - Multiply data with a constant (1D) nm -Negate data (1D) div - Divide two datasets (1D) adsu - Open add\/subtract\/multiply dialog box (1D, 2D) DESCRIPTION Multiplication commands can be entered on the command line or started from the add\/subtract\/multiply dialog box. The latter is opened withadsu.    This dialog box offers several options, each of which selects a certain command for execution. Multiply with 1D spectrum\/fid This option selects the commandmulfor execution. It multiplies the second dataset with the third dataset. The result is stored in the current dataset. Multiply with constant This option selects the commandmulcfor execution. It multiplies the current data with the value of DC. Multiply with -1 This option selects the commandnmfor execution. It negates the current data which means all data points are multiplied by -1. Divide by 1D spectrum\/fid This option selects the commanddivfor execution. It divides the second dataset by the third dataset. The result is stored in the current dataset. mul\/divperform a complex multiplication\/division on complex spectra. This requires that for both the second and third dataset:   the status parameter FT_mod = fqc or fsc  real (file1r) and imaginary (file1i) data exist This is the case for most data that have been acquired in Avance spectrometers. If the above requirements are not fulfilled, real and imaginary data are multiplied\/divided pointwise. When a complex operation has been performed, this is reported in the audit trail output file. Please note in addition that deleting the imaginary data enforces a pointwise multiplication for the commandmulinstead of a complex multiplication. mul,div,mulcandnmwork on raw or on processed data, depending on the value of DATMOD. The result is always stored as processed data in the current dataset. The raw data are not overwritten. Whenmulanddivare started from the command line, they will run without user interaction if the second dataset is already defined (filecurdat2). If this is not defined, theadsudialog box will be opened. When you run a multiplication or division command from the command line, make sure that the required parameters are set. Click the Procpars tab or enteredpto do that. Theadsucommand can be used on 1D or 2D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT PARAMETERS Set from theadsudialog box, withedpor by typingdc,datmodetc.: DC - multiplication factor (input ofmulc) DATMOD - data mode: work on raw or processed data INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- raw data (input if DATMOD = raw) <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (input if DATMOD = proc) proc- processing parameters curdat2 - definition of the second dataset <dir2>\/data\/<user2>\/nmr\/<name2>\/<expno2>\/ fid- second raw data (input if DATMOD = raw) <dir2>\/data\/<user2>\/nmr\/<name2>\/<expno2>\/pdata\/<procno2>\/ 1r,1i- processed 1D data (input if DATMOD = proc) OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (real, imaginary) procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS MUL MULC NM DIV SEE ALSO add  "],["3278461195","pk","3278461195.html","",null," NAME pk -Phasecorrection according to PHC0\/PHC1 (1D) DESCRIPTION The commandpkperforms azero andfirst orderphase correction according to user defined phase values. These phase values are read from the processing parameters PHC0 and PHC1. The data, consisting of real points R(i) andimaginary points I(i) are phase corrected according to the formula: R0(i) = R(i)cosa(i)-I(i)sina(i) I0(i) = I(i)cosa(i)+R(i)sina(i) Where: a(i)=PHC0 + (i-1)PHC1 Where i > 0, R0 and I0 represent the corrected values and PHC0 and PHC1 are processing parameters. pkdoes not calculate thephase values but uses the preset values. Therefore,pkis only useful when these values are known. They can be determined, interactively, in Phase correction mode or, automatically, withapkorapks. pkis typically used in a series of experiments where the first spectrum is corrected withapkand each successive spectrum withpk, using the same values (see for example AU programproc_noe). pkapplies but does not change the processing parameters PHC0 and PHC1 (edp). It does, however, change the corresponding processing status parameters PHC0 and PHC1 (dpp), by adding the applied phase values. pkis a part of thecomposite processing commandsefp,fpandgfp. pkcan also be used to perform aphase correction on an FID rather than a spectrum. This is automatically done if you enterpkon a dataset which does not contain processed data. Phase correction on an FID is used prior to Fourier transform to induce a shift in the resulting spectrum. The spectrum is shifted according to the value of PHC1; one real data point to theleft for each 360°. A negative value of PHC1 causes aright shift. The points which are cut off on one side of the spectrum are appended on the other side. Note the difference with performing aleft shift (ls) orright shift (rs) after Fourier transform. This appends zeroes at the opposite side. If processed data do exist and you still want to do a phase correction on the FID, you can do this with the commandtrf. The commandpkcan also be started from the phase correction dialog box which is opened withph. INPUT PARAMETERS Set from thephdialog box, withedpor by typingphc0,phc1etc.: PHC0 - zero order phase correction value (frequency independent) PHC1 - first order phase correction value (frequency dependent) OUTPUT PARAMETERS Can be viewed withdppor by typingsphc0,sphc1etc.: PHC0 - zero order phase correction value (frequency independent) PHC1 - first order phase correction value (frequency dependent) INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- raw data (input if no processed data exist) <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (input if they exist) proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (real, imaginary) procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS PK SEE ALSO mc,ps,apk, apks, apkm, apkf, ph,trf, trfp "],["3278469515","prguide","3278469515.html","",null," NAME prguide - Open theProcessingGuide (1D,2D) DESCRIPTION The commandprguideopens the TopSpin Processing Guide:    This contains a workflow for processing data, especially suited for new or occasional users. InAutomatic mode, the Processing Guide will simply execute a processing command when you click the corresponding button. This requires the processing parameters to be set correctly. In interactive mode (Automatic modeunchecked), the Processing Guide will, at each step, open a dialog box offering you the available options and required parameters. For example, the phase correction button offers various automatic algorithms as well as an option to switch to interactive phasing mode. Experienced users normally enter the individual processing commands from the command line. This requires that, for each command, the processing parameters are set correctly. The Processing Guide can be used for 1D and 2D processing. SEE ALSO managuide,solaguide,t1guide, (aqguide)  "],["3278480139","proc1d","3278480139.html","",null," NAME proc1d - Open 1D Processing dialog DESCRIPTION The commandproc1dopens a 1D processing dialog:    This dialog can be used for standard 1D processing, including exponential multiplication, Fourier transform, phase correction, referencing, baseline correction and plotting. Processing steps can be switched on or off and two parameters, line broadening and plot layout, can be set. The command takes one argument: proc1d y Which will process the current dataset without opening the dialog, using the last settings. SEE ALSO prguide  "],["3278487691","ps","3278487691.html","",null," NAME ps - Calculatepowerspectrum (1D) DESCRIPTION The commandpscalculates the power spectrum of the 1D current dataset, replacing the intensity of each data pointiaccording to the formula: PS(i)=R(i)2+I(I)2 Where R and I are the real andimaginary part of the spectrum, respectively. If no processed input data exist,psworks on the raw data. The result is always stored as the real processed data. pscan also be started from the phase correction dialog box which is opened withph. Ifpsis typed on a 2D or 3D spectrum, the following warning message is displayed. Enter the appropriate values.   INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- raw data (input if no processed data exist) <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (real, imaginary) OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (real, imaginary) auditp.txt- processing audit trail USAGE IN AU PROGRAMS PS SEE ALSO mc,pk,apk, apks, apkm, apkf, ph,trf, trfp  "],["3278301963","sigreg","3278301963.html","",null," NAME sigreg -Automatic signal region detection in 1D1H spectra DESCRIPTION The processing commandsigregfinds signal regions in proton spectra using a machine learning approach. The algorithm was developed and tested for 1D1H spectra without solvent suppression. To ensure optimal performance the spectrum should be phase- and baseline corrected before runningsigreg.    In case that the width of the signal regions detected bysigregis not satisfactory, the command can be customized using the-add,-expand, and-setsizeoptions.   The-addoption extends signal regions on both sides by a given amount of Hz or ppm.  The-expandoption extends all signal regions narrower than a given amount of Hz or ppm to that value of Hz or ppm. All signal regions broader than the given value remain untouched.  The-setsizeoption sets the size of all signal regions to a given amount of Hz or ppm.    If the requested extension of the signal regions would cause adjacent regions to overlap, they are not merged, but kept separate, with the center of the overlap defining the limit of the two regions. As a result, the left and the right side of these two regions are extended by different values causing their centers to be shifted. This behavior can be prevented by using the-symmoption that forces the changes to be symmetric with respect to the center of the signal region, and thus ensuring that the centers of all signal regions remain unchanged (example:sigreg -setsize 0.1ppm -symm).    By default, the signal regions are detected usingsigregbefore modification. By using the -modoption, it is possible to suppress this initial detection of signal regions, in order to apply the requested modifications to previously defined signal regions instead (example:sigreg -add=0.15ppm -symm -mod).    USAGE sigreg: detects signal regions in 1D 1H spectra. sigreg -add <value>Hz|ppm: detects signal regions in 1D 1H spectra and extends them on both sides by <value> Hz|ppm. sigreg -expand <value>Hz|ppm: detects signal regions in 1D 1H spectra and extends all signal regions narrower than <value>Hz|ppm to <value> Hz|ppm. sigreg -setsize <value>Hz|ppm: detects signal regions in 1D 1H spectra and sets their size to <value> Hz|ppm. sigreg -add|-expand|-setsize <value>Hz|ppm -symm: detects signal regions in 1D 1H spectra, performs the-add|-expand|-setsizeoption, and forces the changes to be symmetric with respect to the center of the signal regions. sigreg -add|-expand|-setsize <value>Hz|ppm -mod: performs the-add|-expand|-setsizeoption on existing signal regions. sigreg -add|-expand|-setsize <value>Hz|ppm -symm -mod: performs the-add|-expand|-setsizeoption on existing signal regions, and forces the changes to be symmetric with respect to the center of the signal region. Note:   sigreg -addaccepts both positive and negative values, whilesigreg -expandandsigreg -setsizeaccept only positive values.  When using these options, all required information must be specified by command line arguments. The-add, -expand, and-setsizeoptions must be followed by (1) the value for the modification of the signal regions and (2) the unit (Hz or ppm). Between the numerical value and the unit there must not be any space, while the numerical value can be separated by the option using a space (example:sigreg -add 10Hz) or an equal sign (example:sigreg -expand=1ppm). INPUT FILES <dir>\/<name>\/<expno>\/pdata\/<procno>\/ 1r, 1i- processed 1D data (frequency domain) OUTPUT FILES <dir >\/<name>\/<expno>\/pdata\/<procno>\/ intrng- integral regions auditp.txt- processing audit trail USAGE IN AU PROGRAMS SIGREG SEE ALSO abs,int,apbk     "],["3278497547","sinm, qsin, sinc, qsinc","3278497547.html","",null," NAME sinm -Sinewindow multiplication of the FID (1D) qsin -Sinesquared window multiplication of the FID (1D) sinc -Sincwindow multiplication of the FID (1D) qsinc -Sinc squaredwindow multiplication of the FID (1D) wm - Open window multiplication dialog box (1D,2D) DESCRIPTION Window multiplication commands can be started from the command line or from the window function dialog box. The latter is opened with the commandwm:    This dialog box offers several window functions, each of which selects a certain command for execution. Sine bell This window function selects the commandsinmfor execution. It performs a sine window multiplication, according to the function: SINM(t) = sin((π –PHI) * (t\/AQ) +PHI) where 0 <t<AQandPHI= π\/SSB Where AQ is an acquisition status parameter and SSB a processing parameter. Typical values are SSB = 1 for a pure sine function and SSB = 2 for a purecosine function. Values greater than 2 give amixed sine\/cosine function. Note that all values smaller than 2, for example 0, have the same effect as SSB = ¥, namely a pure sine function. Squared sine bell This window function selects the commandqsinfor execution. It performs a sine squared window multiplication, according to the function: QSIN(t) = sin ((π –PHI) × (t \/ AQ) +PHI)2 where 0 <t< AQ andPHI= π\/ SSB Where AQ is an acquisition status parameter and SSB a processing parameter. Typical values are SSB = 1 for a pure sine function and SSB = 2 for a purecosine function. Values greater than 2 givemixed sine\/cosine functions. Note that all values smaller than 2 have the same effect as SSB = 1, namely a pure sine function. If commands likeqsinare typed on a 2D or 3D spectrum, the following warning message is displayed. Enter the appropriate values.   Sinc This window function selects the commandsincfor execution. It performs asinc window multiplication, according to the function:  Where – 2 π *SSB *GB<t< 2 π *SSB *(1 –GB) and SSB and GB are processing parameters. Squared sinc This window function selects the commandqsincfor execution. It performs a sinc squared window multiplication, according to the function:  Where – 2π *SSB*GB<t< 2 π *SSB* (1 –GB) and SSB and GB are processing parameters. The*sin*commands implicitly perform a baseline correction of the FID, according to the processing parameter BC_mod. Furthermore, they perform linear prediction according to the parameters ME_mod, NCOEF and LPBIN. If you run a command likesinmfrom the command line, you have to make sure that the required parameters are already set. Click the Procpars tab or enteredpto do that. When executed on 2D or 3D data, the*sin*commands take up to four arguments, e.g.sinm <row> <procno> n y, process the specified row and store it under the specifiedprocno. The last two arguments are optional:nprevents changing the display to the output 1D data,ycauses a possibly existing data to be overwritten without warning. When executed on a dataset with 2D or 3D raw data but 1D processed data (usually a result of rsr, rsc or a previous 1D processing command on that 2D or 3D data), thesin*commands take one argumentsinm <row>to process the specified row and store it under the currentprocno. sinm sameprocess the same row as the previous processing command and store it under the currentprocno. Thesameoption is automatically used by the AU program macros *SIN*. When used on a regular 1D dataset (i.e. with 1D raw data) it has no effect. Thewmcommand can be used on 1D or 2D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT PARAMETERS Set from thewmdialog box, withedpor by typingssb,gbetc.: SSB -sine bell shift GB -Gaussian broadening factor (input ofsincandqsinc) Set by the acquisition, can be viewed withdpaorsaq: AQ - Acquisition time (input ofsinmandqsin) INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- raw data (input if1r,1ido not exist or are Fourier transformed) acqus- acquisition status parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed data (input if they exist but are not Fourier transformed) proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (real, imaginary) procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS SINM QSIN SINC QSINC SEE ALSO em, gm, wm,tm, traf, trafs     "],["3278559499","refdcon","3278559499.html","",null," NAME refdcon – Reference deconvolution (1D) .refdcon – Interactive reference deconvolution (1D)  DESCRIPTION Reference deconvolution is a simple and effective method to remove distortions caused by field inhomogeneities or modulations in nuclear magnetic resonance spectroscopy.  USAGE To start the reference deconvolution module call the menu itemProcess | Advanced | Reference Deconvolutionor run the command.refdcon.  The reference deconvolution can also be used by the commandrefdconon the command line. In this case all defined input parameters will be used to calculate the deconvolved spectra automatically. In a minimal usage the interval has to be defined. Additional parameters are optional. In case no parameter is set before, it is possible to set all parameters as arguments, shown in the following example: refdcon rdf1=”-1.3” rdf2=”2” rdfwhm=”2.2”  Define and adapt the Lorentzian model Starting the interactive reference deconvolution module it is in a first step necessary to define the region [RDF1, RDF2] including the peak of interest for the Lorentz model calculation. The interval can be defined with a left mouse click and dragging till the end of the desired region. As a consequence a Lorentzian model for the maximum peak in the interval will be calculated and shown on the screen (see the following figure):    The calculated Lorentzian model and the selected region are marked with green and pink boxes. Parameters can be changed using the associated adjustment handles and the model will update immediately. The left and right handle of the model (green box) changes the half maximum amplitude parameter (RDFWHM) and the handle above adapt the intensity. The handle in the center changes the peak position. While using the adjustment handles of the selected region (rosa box) the region size changes for the following deconvolution. The Lorentz will stay the same as long as the selected peak is in the region. By default the maximum peak in the interval is the selected peak. Another possibility to change the model parameters is by using the parameter dialog. A double click in the selected region opens the following dialog:    The menu bar   - Start reference deconvolution of the spectra with the generated Lorentzian model  - Recalculate the default Lorentzian model in the current region.  - Change to stacked layout for a better comparison of the results (Lorentzian model or deconvolved spectra)  - Reset individual scaling  - Save deconvolved data  INPUT PARAMETERS  RDF1: Left interval limit for reference deconvolution [ppm] RDF2: Right interval limit for reference deconvolution [ppm] RDINT: Intensity for Lorentzian peak RDPOS Position for Lorentzian peak [ppm] RDFWHM: Full width at half maximum amplitude for Lorentzian peak [Hz]  SEE ALSO REFDCON Manual        "],["3278502411","rv","3278502411.html","",null," NAME rv -Reversespectrum or FID (1D) DESCRIPTION The commandrvreverses the data with respect to the middle data point, i.e. the leftmost data point becomes the rightmost point and vice versa. The real and imaginary parts of the spectrum are thereby interchanged. Depending on the value of DATMOD,rvworks on the raw or on the processed data. The result is always stored as processed data. A spectrum can also be reversed as a part of theFourier transform by setting the processing parameter REVERSE to TRUE. INPUT PARAMETERS Set by the user withedpor by typingdatmod: DATMOD - data mode: work on raw or processed data INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- raw data (input if DATMOD = raw) <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (input if DATMOD = proc) proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS RV SEE ALSO ft, ftf,trf, trfp "],["3278513035","sab","3278513035.html","",null," NAME sab -Splinebaselinecorrection (1D) DESCRIPTION The commandsabperforms a spline baseline correction. This is based on a predefined set of data points which are considered to be a part of the baseline. The regions between these points are individually fitted. In order to executesab, the baseline points must have been determined. You can do this as follows:   Clickor enter.baslto change to baseline correction mode.  Clickto switch toDefine baseline pointsmode  (if the baseline points have been defined before, you are first prompted to append to (a) or overwrite (o) the existing list of points)  Move the cursor along the spectrum and click left at several positions which are part of the baseline.  Clickto return. The commandsabis automatically executed. The set of baseline points is saved in the filebaslpnts. This file can be stored for general usage with the commandwmisc.After that, you can read it withrmiscon another dataset and runsabto perform the same baseline correction. sabcan be started from the command line or from the baseline dialog box which is opened with the commandbas. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r- real processed 1D data baslpnts- baseline points (points and ppm values) OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r- real processed 1D data auditp.txt- processing audit trail USAGE IN AU PROGRAMS SAB SEE ALSO bcm, (bas, .basl)    "],["3278549643","sref, cal","3278549643.html","",null," NAME sref- Calibrate the spectrum; set the TMS signal to 0 ppm (1D,2D) cal - Open calibration dialog box (1D, 2D) DESCRIPTION Spectrum calibration can be started from the command line withsrefor from the calibration dialog box which is opened with thecalcommand.    This dialog box offers two options, one for manual and one for automatic calibration. Manual calibration This option selects the.calcommand for execution. This is equivalent to clickingin the toolbar and switches to interactive calibration mode. Click inside the data window at thereference peak, enter the frequency value in the appearing dialog box and clickOK. Automatic calibration This option selects thesrefcommand for execution. It calibrates the spectrum by setting the TMS signal of a spectrum to exactly 0 ppm. It works on 1D and 2D spectra. srefmakes use of the lock table. This must be set up once after installing TopSpin with the commandedlock. On 1D spectra,srefinvolves three steps which are discussed below. During the first stepsrefsets the value of the processing parameter SF according to the formula: SF=BF1\/(1.0+RShift * 1e-6) WhereRShiftis taken from theedlocktable and BF1 is an acquisition status parameter. Changing SF automatically changes the processing parameters SR, the spectralreference, and OFFSET, the ppm value of the first data point, according to the following relations:   SR = SF - BF1 - where BF1 is an acquisition status parameter.  OFFSET = (SFO1\/SF-1) * 1.0e6 + 0.5 * SW * SFO1\/SF - where SW and SFO1 areacquisition status parameters Actually, the relation for OFFSET depends on theacquisition mode. When the acquisition status parameter AQ_mod isqsim,qseqorDQD, which is usually the case, the above relation count. When AQ_mod isqf, the relation OFFSET = (SFO1\/SF-1) * 1.0e6 is used. srefthen calculates which data point (between 0 and SI) in your spectrum corresponds to the ppm valueRef.from theedlocktable. This data point will be used in the second step. The first step is independent of a reference substance. During the second step,srefscans a region around the data point found in the first step for a peak. It will normally find the signal of the reference substance. The width of the scanned region is defined by the parameterWidthinedlocktable, so this region isRef. +\/- 0.5*Widthppm. This step is necessary because thelock substance (solvent) will not always resonate at exactly the same position relative to the reference shift. The absolute chemical shift of the lock substance (solvent) differs because of differences in susceptibility, temperature, concentration or pH, for instance. The third step depends on whether or not a peak was found in the second step. If a peak was found,srefdetermines the interpolated peak top and shifts its ppm value to theref.value from theedlocktable. The processing parameters OFFSET, SF and SR are changed accordingly. As such, the result of thedefault (step 1) is slightly corrected in order to set the peak of the reference substance exactly to 0. You can check this by putting the cursor on this peak. If no peak was found, you will get the message:sref: no peak found default calibration done. The result of the default calibration (step 1) is stored without any further correction. The three cases below show the calibration of a 1H, 13C and 31P spectrum with C6D6 as a solvent. The following table shows the corresponding entry in theedlocktable:      Solvent  Field  Lockpower  Nucleus  Distance [ppm]  Ref. [ppm]  Width [ppm]  Rshift [ppm]    C6D6  -150  -15.0                   1H  7.28  0.0  0.5  0.000         2H  7.28  0.0  0.5  0.000         13C  128.0  0.0  5.0  0.220         31P  0.00  10.5  5.0  13.356  Case #1- Calibration of a 1H spectrum: A spectrum was acquired while being locked on C6D6.srefwill do a default calibration and look for a signal at 0.0 ppm (Ref.) in a window of +\/- 0.25 ppm. If a peak is found, itschemical shift will be set to 0 ppm. Case #2- Calibration of a 13C spectrum: A spectrum was acquired while being locked on C6D6.srefwill do a default calibration and look for a signal at 0.0 ppm (Ref.) in a window of +\/- 2.5 ppm. If a peak is found, its chemical shift will be set to 0 ppm. Case #3- Calibration of a 31P spectrum: A spectrum was acquired while being locked on C6D6.srefwill do a default calibration and look for a signal at 10.5 ppm (Ref.) in a window of +\/- 2.5 ppm. If a peak is found, its chemical shift will be set to exactly 10.5 ppm. On 2D spectra,srefcalibrates the F2 and F1 direction and this involves the same steps as described above for 1D spectra. Please note that the purpose ofsrefis the following:   If TMS (or any other reference substance) is found, the value is ignored.  If there is no TMS (or any other reference substance), thansrefsets SR to 0, which basically makes BF1 = SF. This is normally pragmatic, but in special cases it is necessary to enter a different value, in order to get a useful resulting chemical shift. Entering a value here will correct the chemical shift by the amount specified. INPUT PARAMETERS Set by the acquisition, can be viewed withdpaor by typingssolventetc.: SOLVENT - the solvent of the sample INSTRUM - configuration name (entered duringcf) of the spectrometer LOCNUC - lock nucleus SFO1 - spectral frequency NUC1 - measured nucleus SW - sweep width OUTPUT PARAMETERS Processing parameters which can be viewed withedp Processing status parameters which can be viewed withdpp SF - spectral reference frequency OFFSET - the ppm value of the first data point of the spectrum SR - spectral reference INPUT FILES <tshome>\/conf\/instr\/<instrum>\/ 2Hlock- edlock table for 2H locked samples 19Flock- edlock table for 19F locked samples OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ proc- processing parameters procs- processing status parameters USAGE IN AU PROGRAMS SREF   "],["3278519819","tm, traf, trafs","3278519819.html","",null," NAME tm -Trapezoidalwindow multiplication of the FID (1D) traf -Traficantewindow multiplication of the FID (1D) trafs - Similar to traf, but trafs additionally retains optimum signal-to-noise. wm - Open window function dialog box (1D,2D) DESCRIPTION Window multiplication can be executed from the command line or from the window function dialog box. The latter is opened with the commandwm:    This dialog box offers several window functions, each of which selects a certain command for execution. Trapezoid This function selects the commandtmfor execution. It performs a trapezoidal window multiplication of the FID. The rising and falling edge of this function are defined by the processing parameters TM1 and TM2. These represent a fraction of theacquisition time as displayed below.    Traficante and trafic.s\/n This function selects the commandstrafandtrafs, respectively, for execution. The algorithms used by these commands are described by D. D. Traficante and G. A. Nemeth in J. Magn. Res., 71,237 (1987). tm,trafandtrafsimplicitly perform a baseline correction of the FID, according to the processing parameter BC_mod. Furthermore, they perform linear prediction according to the parameters ME_mod, NCOEF and LPBIN. When executed on 2D or 3D data,tmandtraf*take up to four arguments, e.g.tm <row> <procno> n yprocess the specified row and store it under the specifiedprocno. The last two arguments are optional:nprevents changing the display to the output 1D data,ycauses a possibly existing data to be overwritten without warning. If you run a command liketmfrom the command line, you have to make sure that the required parameters are already set. Click the Procpars tab or enteredpto do that. When executed on a dataset with 2D or 3D raw data but 1D processed data (usually a result of rsr, rsc or a previous 1D processing command on that 2D or 3D data),tmandtraf*take one argument, e.g.tm <row>process the specified row and store it under the currentprocno. tm sameprocess the same row as the previous processing command and store it under the currentprocno. Thesameoption is automatically used by the AU program macro TM. When used on a regular 1D dataset (i.e. with 1D raw data) it has no effect. Thewmcommand can be used on 1D or 2D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT PARAMETERS Set from thewmdialog box, withedpor by typingtm1,lbetc.: TM1 - the end of the rising edge of a trapeziodal window (input oftm) TM2 - the start of the falling edge of a trapezoidal window (input oftm) LB - Lorentzian broadening factor (input oftraf*) Set by the acquisition, can be viewed withdpaorsaq: AQ - acquisition time (input oftm) INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- raw data (input if1r,1ido not exist or are Fourier transformed) acqus- acquisition status parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed data (input if they exist but are not Fourier transformed) proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (real, imaginary) procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS TM SEE ALSO em, gm, wm,sinm, qsin, sinc, qsinc   "],["3278524683","trf, trfp","3278524683.html","",null," NAME trf -Userdefined processing of raw data (1D) trfp - Userdefined processing of processed data (1D) DESCRIPTION The commandtrfprocesses the raw data performing the following steps:   baseline correction according to BC_mod  linear prediction according to ME_mod  window multiplication according to WDW  Fourier transform according to FT_mod  phase correction according to PH_mod trfoffers the following features:   when all parameters mentioned above are set tono, the raw data (filefid) are simply stored as processed data (files1r,1i). The even points are stored as real data (file1r) and the odd points asimaginary data (file1i). The size of these processed data and the number of input FID points are determined by the parameters SI and TDeff, as described for the commandft. For example, if 0 < TDeff < TD, the processed data are truncated. This allows to create an FID with a smaller size than the original one (see also the commandgenfidgenfid).  trfevaluates BC_mod for thebaseline correction mode (e.g. quad, qpol or qfil) anddetection mode (e.g. single or quad, spol or qpol, sfil or qfil). Note that the commandbcevaluates the acquisition status parameter AQ_mod for the detection mode and ignores the BC_mod detection mode (see parameter BC_mod).  trfevaluates WDW for thewindow multiplication mode (em,gm,sine,qsine,trap,user,sinc,qsinc,trafortrafs). This allows to vary the window multiplication by varying the value of WDW rather than the window multiplication command. This can be useful in AU programs.  theFourier transform is performed according to FT_mod. Normally, the Fourier transform is done with the commandftwhich determines the Fourier transform mode from acquisition status parameter AQ_mod. However, for some datasets, no value of AQ_mod translates to a correctFourier transform mode. An example of this is when you read a column (withrsc) from a 2D dataset which was measured with FnMODE (or MC2) = States-TPPI and Fourier transformed in the F2 direction only. The resulting FID can only be Fourier transformed correctly withtrf. The parameter FT_mod is automatically set to the correct value by thersccommand.trfcan also be used manipulate theacquisition mode of raw data by Fourier transforming the data with one FT_mod andinverse Fourier transforming them with a different FT_mod. From the resulting data you could create pseudo-raw data (usinggenfid) with a differentacquisition mode than the original raw data. Finally,trfallows to process the data without Fourier transform (FT_mod = no). The following table shows a list of FT_mod values:      FT_mod  Fourier transform mode   no  no Fourier transform   fsr  forward, single channel, real   fqr  forward,quadrature, real   fsc  forward, single channel, complex   fqc  forward, quadrature, complex   isr  inverse, single channel, real   iqr  inverse, quadrature, real   isc  inverse, single channel, complex   iqc  inverse, quadrature, complex  The commandtrfpworks liketrf, except that it always works on processed data. If no processed data exist,trfpstops with an error message. trfpcan be used to perform multiple additivebaseline corrections, to remove multiple frequency baseline distortions. This cannot be done withbcortrfbecause these commands always work on the raw data, i.e. they are not additive. Note that thewindow multiplication commands (e.g.em,gm,sineetc.) are additive. The same counts forlinear prediction (part offt) andphase correction (pk). trfcan be used to do a combination of forward and backward prediction. Just runtrfwith ME_mod = LPfc and thentrfp(orft) with ME_mod = LPbc. When executed on a 2D or 3D dataset,trftakes up to four arguments: trf <row> <procno> n y process the specified row and store it under the specifiedprocno. The last two arguments are optional:nprevents changing the display to the output 1D data,ycauses a possibly existing data to be overwritten without warning. When executed on a dataset with 2D or 3D raw data but 1D processed data (usually a result of rsr, rsc or a previous 1D processing command on that 2D or 3D data),trftakes one argumenttrf <row>process the specified row and store it under the currentprocno. trf sameprocess the same row as the previous processing command and store it under the currentprocno. Thesameoption is automatically used by the AU program macro TRF. When used on a regular 1D dataset (i.e. with 1D raw data), it has no effect. INPUT PARAMETERS Set by the user withedpor by typingsi,tdeffetc.: SI - size of the processed data TDeff - number of raw data points to be used for processing FCOR - first (FID) data point multiplication factor (0.0-2.0, default 0.5) BC_mod - FID baseline correction mode   BCFW - filter width for BC_mod = sfil or qfil   COROFFS - correction offset for BC_mod = spol\/qpol or sfil\/qfil ME_mod - FID linear prediction mode   NCOEF - number of linear prediction coefficients   LPBIN - number of points for linear prediction   TDoff - number of raw data points predicted for ME_mod = LPb* WDW - FID window multiplication mode   LB - Lorentzian broadening factor for WDW = em or gm   GB - Gaussian broadening factor for WDW = gm, sinc or qsinc   SSB - Sine bell shift for WDW = sine, qsine, sinc or qsinc   TM1, TM2 - limits of the trapezoidal window for WDW = trap FT_mod - Fourier transform mode   REVERSE - flag indicating to reverse the spectrum   PKNL - group delay compensation (Avance) or filter correction (A*X)   STSR - strip start: first output point of strip transform   STSI - strip size: number of output points of strip transform PH_mod - phase correction mode   PHC0 - zero order phase correction value for PH_mod = pk   PHC1 - first order phase correction value for PH_mod = pk Set by the acquisition, can be viewed withdpaor by typingstd: TD - time domain; number of raw data points OUTPUT PARAMETERS Can be viewed withdppor by typingstdeffetc.: TDeff - number of raw data points that were used for processing STSR - strip start: first output point of strip transform STSI - strip size: number of output points of strip transform NC_proc - intensity scaling factor YMAX_p - maximum intensity of the processed data YMIN_p - minimum intensity of the processed data BYTORDP - data storage order INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- raw data (input oftrf) acqus- F2 acquisition status parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (input oftrfp) proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS TRF TRFP SEE ALSO bc,em, gm,pk,ft, ftf "],["3278534539","zf","3278534539.html","",null," NAME zf -Zero all datapoints (1D) DESCRIPTION The commandzfsets the intensity of all data points to zero. Depending on the value of the parameter DATMOD,zfworks on raw or processed data. The result is always stored as processed data, the raw data are never overwritten. The output ofzfis usually the same for DATMOD = raw or processed, namely SI processed data points withzero intensity. However, for DATMOD = proc, the existing processed data are set to zero whereas for DATMOD = raw, new processed data are created according to the current processing parameters. The result is different when the data have been Fourier transformed with STSI < SI.zfwith DATMOD = proc creates STSI zeroes whereaszfwith DATMOD = raw creates SI zeroes. The reason is thatzfwith DATMOD = raw reprocesses the raw data but does not interpret STSI since no Fourier transform is done. INPUT PARAMETERS Set by the user withedpor by typingdatmod,sietc.: DATMOD - data mode: work on raw or processed data SI - size of the processed data STSI - strip size (input if DATMOD = proc) INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- raw data (input if DATMOD = raw) <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (input if DATMOD = proc) proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS ZF SEE ALSO zp "],["3278542091","zp","3278542091.html","",null," NAME zp - Zero the first NZPdata points (1D) DESCRIPTION The commandzpsets the intensity of the first NZP points of the dataset to zero. It works on raw or processed data depending on the value of the parameter DATMOD. The parameter NZP can take a value between 0 and the size of the FID or spectrum. The value of NZP is the number of the real plus imaginary data points that are zeroed. As such, the first (NZP+1)\/2 real points and the first NSP\/2 imaginary data points are zeroed. INPUT PARAMETERS Set by the user withedpor by typingnzp,datmodetc.: NZP - number of data points set to zero intensity DATMOD - data mode: work on raw or processed data INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- raw data (input if DATMOD = raw) <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (input if DATMOD = proc) proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data (real, imaginary) procs- processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS ZP SEE ALSO zf "],["3278568587","2D Processing Commands","3278568587.html","",null," This chapter describes all TopSpin 2D processing commands. Most of them only work on 2D data but some, e.g.xfb, can also be used to process a plane of 3D data. They store their output in processed data files and do not change the raw data. We will often refer to the two directions of a 2D dataset as the F2 and F1 direction. F2 is theacquisition direction which is displayed horizontally and F1 the orthogonal direction which is displayed vertically. The names of most 2D processing commands express the direction in which they work, e.g.xf2works in F2,xf1in F1 andxfbin both directions. F2traces are usually referred to as rows, F1 traces as columns. Some commands express this terminology, e.g.rsrreads and stores rows andrscreads and stores columns of a 2D spectrum. For each command, the relevant input and output parameters are mentioned. Furthermore, the relevant input and output files and their location are mentioned. Although file handling is completely transparent, it is sometimes useful to know which files are involved and where they reside. For example, if you have permission problems or if you want to process or interpret your data with third party software. "],["3278573067","abs2, abst2, absd2, absot2","3278573067.html","",null," NAME abs2 -Automatic baseline correction in F2 (2D) abst2 -Automatic selective baseline correction in F2 (2D) absd2 - Automaticbaseline correction in F2, diff. algorithm (2D) absot2 - Automatic selective baseline correction in F2, diff. algorithm (2D) bas - Open baseline correction dialog box (1D,2D) DESCRIPTION Baseline correction commands can be started from the command line, by enteringabs2,abst2etc. or from the baseline dialog box. The latter is opened with the commandbas:    This dialog box offers several options, each of which selects a certain command for execution. The command further depends on the selected direction. Here we describe the commands for the F2 direction. F2 Auto-correct baseline using polynomial This option selects the commandabs2for execution. It performs an automaticbaseline correction in the F2 direction. This means it subtracts apolynomial from the rows of the processed 2D data. Thedegree of the polynomial is determined by the parameter ABSG which has a value between 0 and 5, with a default of 5. It works likeabsfin 1D which means it only corrects the spectral region between ABSF1 and ABSF2. F2 Auto-correct baseline, shift correction region This option selects the commandabst2for execution. It performs an automatic selectivebaseline correction in the F2 direction. This means it corrects the rows of the processed 2D data. It works likeabs2, except for the following:   only the rows between F1-ABSF2 and F1-ABSF1 are corrected  the part (region) of each row which is corrected shifts from row to row. The first row is corrected between F2-ABSF2 and F2-ABSF1. The last row is corrected between F2-SIGF2 and F2-SIGF1. For intermediate rows, the low field limit is an interpolation of F2-ABSF2 and F2-SIGF2 and the high field limit is an interpolation of F2-ABSF1 and F2-SIGF1. F2 Auto-correct baseline, alternate algorithm This option selects the commandabsd2for execution. It works likeabs2, except that it uses a different algorithm (it uses the same algorithm as the command abs in DISNMR). It is, for example, used when a small peak lies on the foot of a large peak. In that case,absd2allows to correct the baseline around the small peak which can then be integrated. Usuallyabsd2is followed byabs2. F2 Auto-correct baseline, shift correction region, alternate algorithm This option selects the commandabsot2for execution. It works likeabst2, except that it has a different algorithm which applies a larger correction. If you run a command likeabs2from the command line, you have to make sure that the required parameters are already set. Click the Procpars tab or enteredpto do that. Thebascommand can be used on 1D, 2D or 3D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT PARAMETERS Set from thebasdialog box, withedpor by typingabsg,absf1etc.: ABSG - degree of the polynomial to be subtracted (0 to 5, default is 5) ABSF1 - low field limit of the region which is baseline corrected ABSF2 - high field limit of the region which is baseline corrected SIGF1 - low field limit of the correction region in the last row SIGF2 - high field limit of the correction region in the last row INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr- real processed 2D data proc- F2 processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr- real processed 2D data procs- F2 processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS ABS2 ABST2 ABSD2 ABSOT2 SEE ALSO abs1, abst1, absd1, absot1, bas  "],["3278577931","abs1, abst1, absd1, absot1, bas","3278577931.html","",null," NAME abs1 -Automatic baseline correction in the F1 (2D) abst1 -Automatic selective baseline correction in the F1 (2D) absd1 - Automatic baseline correction in F1, diff. algorithm (2D) absot1 - Automatic selective baseline correction in F1, diff. algorithm (2D) bas - Open baseline correction dialog box (1D,2D) DESCRIPTION Baseline correction can be started from the command line, withabs1,abst1etc., or from the baseline dialog box. The latter is opened with the commandbas    This dialog box offers several options, each of which selects a certain command for execution. The command further depends on the selected direction. Here we describe the commands for the F1 direction. F1 Auto-correct baseline using polynomial This option selects the commandabs1for execution. It performs an automaticbaseline correction in the F1 direction. This means it subtracts apolynomial from the columns of the processed 2D data. Thedegree of the polynomial is determined by the parameter ABSG which has a value between 0 and 5, with a default of 5. It works likeabsfin 1D which means it only corrects the spectral region between ABSF1 and ABSF2. F1 Auto-correct baseline, shift correction region This option selects the commandabst1for execution. It performs an automatic selectivebaseline correction in the F1 direction. This means it corrects the columns of the processed 2D data. It works likeabs1, except for the following:   only the columns between F2-ABSF2 and F2-ABSF1 are corrected  the part (region) of each column which is corrected shifts from column to column. The first column is corrected between F1-ABSF2 and F1-ABSF1. The last column is corrected between F1-SIGF2 and F1-SIGF1. For intermediate columns, the low field limit is an interpolation of F1-ABSF2 and F1-SIGF2 and the high field limit is an interpolation of F1-ABSF1 and F1-SIGF1. F1 Auto-correct baseline, alternate algorithm This option selects the commandabsd1for execution. It works likeabs1, except that it uses a different algorithm. It is, for example, used when a small peak lies on the foot of a large peak. In that case,absd1allows to correct the baseline around the small peak which can then be integrated. Usuallyabsd1is followed byabs1. F1 Auto-correct baseline, shift correction region, alternate algorithm This option selects the commandabsot1for execution. It works likeabst1, except that it has a different algorithm which applies a larger correction. If you run a command likeabs1from the command line, you have to make sure that the required parameters are already set. Click the Procpars tab or enteredpto do that. Thebascommand can be used on 1D or 2D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT PARAMETERS Set from thebasdialog box, withedpor by typingabsf1,absf2etc.: ABSG - degree of the polynomial to be subtracted (0 to 5, default is 5) ABSF1 - low field limit of the correction region in the first row ABSF2 - high field limit of the correction region in the first row SIGF1 - low field limit of the correction region in the last row SIGF2 - high field limit of the correction region in the last row INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr- real processed 2D data proc2- F1 processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr- real processed 2D data proc2s- F1 processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS ABS1 ABST1 ABSD1 ABSOT1 SEE ALSO abs2, abst2, absd2, absot2  "],["3278587787","add2d, mul2d, addser","3278587787.html","",null," NAME add2d -Add orsubtract two datasets (2D) mul2d -Multiply two datasets (2D) addser -Add two raw datasets (2D, 3D) adsu - Open add\/subtract\/multiply dialog box (1D, 2D) DESCRIPTION Addition commands can be started from the command line or from the add\/subtract dialog box. The latter is opened with the commandadsu.    This dialog box offers several options, each of which selects a certain command for execution. Add a 2D spectrum This option selects the commandadd2dfor execution. It adds the processed data of the second dataset to those of the current 2D dataset, according to the following formula: current = ALPHA*current + GAMMA*second Where ALPHA and GAMMA are processing parameters. Both real and imaginary data are added. The result overwrites the current processed data. For APLHA = 1 and GAMMA = -1, the spectra are subtracted. Multiply with another 2D spectrum This option selects the commandmul2dfor execution. It multiplies the processed data of the second dataset with those of the current 2D dataset. Both real and imaginary data are multiplied. The result overwrites the current processed data. Add 2D fid (ser) This option selects the commandaddserfor execution. It adds the raw data of the second dataset to those of the current 2D dataset. The result overwrites the current raw data. Note thataddseralso works on 3D data. NOTICE   The two 2D datasets to be added or multiplied must have equal sizes. If you run a command likeadd2dfrom the command line, you have to make sure that the required parameters are already set. Click the Procpars tab or enteredpto do that. If the second dataset has not been defined yet,add2dopens the add\/subtract (adsu) dialog box. Theadsucommand can be used on 1D or 2D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT PARAMETERS Set from theadsudialog box, withedpor by typingalpha,gammaetc.: ALPHA - multiplication factor of the current spectrum GAMMA - multiplication factor of the second spectrum INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr,2ir,2ri,2ii- processed data of the current dataset proc- F2 processing parameters <dir2>\/data\/<user2>\/nmr\/<name2>\/<expno2>\/pdata\/<procno2>\/ 2rr,2ir,2ri,2ii- processed data of the second dataset OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr,2ir,2ri,2ii- processed data procs- F2 processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS ADD2D ADDSER MUL2D SEE ALSO add, duadd, addfid, addc, adsu,mul, mulc, nm, div  "],["3278592651","bcm2, bcm1","3278592651.html","",null," NAME bcm2 -User definedbaseline correction in F2 (2D) bcm1 - User defined baseline correction in F1 (2D) DESCRIPTION Baseline correction commands can be started from the command line or from the baseline dialog box. The latter is opened with the commandbas:    This dialog box offers several options, each of which selects a certain command for execution. Correct baseline, using correction result from 1D row\/column (F2) This option selects the commandbcm2for execution. It performs a baseline correction in the F2 direction by subtracting apolynomial,sine orexponential function. Before you can usebcm2, you must first do the following:   Read a row withrsr(TopSpin will switch to the 1D data window)  Clickor enter.baslto switch to baseline mode.  Click,orto select the baseline correction function.  Fit the baseline of the spectrum with the function you selected in step 2 (initially represented by a straight horizontal line). Click-hold buttonAand move the mouse to determine thezero order correction. Do the same with the buttonsB,Cfor higher order corrections until the line matches the baseline of the spectrum.  Clickto save the baseline correction to the 2D dataset and leave baseline mode.  Select the 2D data window. Then you can enterbcm2to perform the baseline correction. Correct baseline, using correction result from 1D row\/column (F1) This option selects the commandbcm1for execution. It works likebcm2, except that it performs a baseline correction in the F1 direction (columns). Before you can usebcm1, you must read a column withrscand define the baseline on it (see above). bcm*commands only works on the real data. After applying them, the imaginary data no longer match the real data and cannot be used for phase correction. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr- real processed 2D data base_info- baseline correction coefficients OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr- real processed 2D data auditp.txt- processing audit trail USAGE IN AU PROGRAMS BCM2 BCM1 SEE ALSO abs1, abst1, absd1, absot1, bas,abs2, abst2, absd2, absot2,bcm2, bcm1       "],["3278601739","f2disco, f1disco","3278601739.html","",null," NAME f2disco - Calculatediscoprojection in F2 (2D) f1disco - Calculate disco projection in F1 (2D) proj - Open projections dialog box (2D,3D) DESCRIPTION The disco projection commands open the projections dialog box the corresponding command:    This dialog box has several options, each of which selects a certain command for execution. Calculate disco sum (of rows) This option selects the commandf2discofor execution. Likef2sum, it calculates the sum of all rows betweenfirstrowandlastrow. However, for each row, the intensity at the intersection with thereference column is determined. If this intensity is positive, the row is added to the total. If it is negative, the row is subtracted from the total. Calculate disco sum (of columns) This option selects the commandf1discofor execution. It works likef2disco, except that it calculates the sum of the specified columns considering the intensities at the intersections with areference row. The calculated disco sum is stored under the specifiedDestination procno. The Required parameterDisplay projectioncan be set to:   on 2Dto display the calculated projection with the 2D dataset. The current 2D dataset remains the active dataset.  as 1Dto display the calculated projection as a 1D dataset. The active dataset changes to the destinationprocno. The required parameters can also be specified as arguments on the command line. As an example we use the commandf2discohere. f2disco <firstrow>prompts forlastrowandrefrowand stores thedisco projection under dataname~TEMP f2disco <firstrow> <lastrow> <refrow>stores the specified disco projection under dataname~TEMP f2disco <firstrow> <lastrow> <refrow> <procno>stores the specified disco projection under the specifiedprocnoof the current dataname f2disco <firstrow> <lastrow> <refcol> <procno> nstores the specified disco projection under the specifiedprocnoof the current datanamebut does not change the display to thisprocno INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr,2ir,2ri,2ii- processed data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- 1D spectrum containing the F1 disco projection auditp.txt- processing audit trail USAGE IN AU PROGRAMS F2DISCO(firstrow, lastrow, refcol, procno) F1DISCO(firstcol, lastcol, refrow, procno) Forprocno= -1, the disco projection is written to the dataset ~TEMP SEE ALSO f2projn, f2projp,f2sum, f1sum,rhpp, rhnp  "],["3278606603","f2projn, f2projp, f1projn, f1projp","3278606603.html","",null," NAME f2projn - Calculate negative partialprojection in F2 (2D) f2projp - Calculate positive partialprojection in F2 (2D) f1projn - Calculate negative partial projection in F1 (2D) f1projp - Calculate positive partial projection in F1 (2D) proj - Open projections dialog box DESCRIPTION The projection commands open the projections dialog box selecting the corresponding command.    This dialog box has several options, each of which selects a certain command for execution. Calculate positive projection (of rows) This option selects the commandf2projpfor execution. It calculates the positive partial 1D projection of the 2D dataset in the F2 direction Calculate positive projection (of columns) This option selects the commandf1projpfor execution. It calculates the positive partial 1D projection of the 2D dataset in the F1 direction Calculate negative projection (of rows) This option selects the commandf2projnfor execution. It calculates the negative partial 1D projection of the 2D dataset in the F2 direction Calculate negative projection (of columns) This option selects the commandf1projnfor execution. It calculates the negative partial 1D projection of the 2D dataset in the F1 direction The calculated projection is stored under the specifiedDestination procno. The Required parameterDisplay projectioncan be set to:   on 2Dto display the calculated projection with the 2D dataset. The current 2D dataset remains the active dataset.  as 1Dto display the calculated projection as a 1D dataset. The active dataset changes to the destination PRONCNO. The required parameters can also be specified as arguments on the command line. As an example we use the commandf2projnhere. f2projn <firstrow>prompts forlastrowand stores the projection under dataname~TEMP f2projn <firstrow> <lastrow>stores the specified projection under dataname~TEMP f2projn <firstrow> <lastrow> <procno>stores the specified projection under the specifiedprocnoof the current dataname f2projn <firstrow> <lastrow> <procno> nstores the specified projection under the specifiedprocnoof the current datanamebut does not change the display to thisprocno A projection is a 1Dtrace where every point has the highest intensity of all points of the correspondingorthogonal trace in the 2D spectrum. Partial means that only a specified range of rows (or columns) is are evaluated, i.e. only a part of the orthogonal trace is scanned for the highest intensity. Negative projections contain only negative intensities, positive projections contain only positive intensities. A special case is the commandf1projporf1projnon a hypercomplex 2D dataset (MC2 ≠ QF) that has been processed in F2 only. Suppose you would perform the following command sequence: xf2- to process the data in F2 only. ssi- to check the F1 size of the 2D data, clickCancel. smc2- to check status MC2 (≠ QF), clickCancel. f1projp- to store the F1 projection in ~TEMP and change to that dataset. ssi- to check the size of the resulting 1D dataset, clickCancel. You will see that the size of the 1D data is only half the F1 size of the 2D data. The reason is thatf1projpunshuffles the input data (file2rr). As such,f1projpbehaves like the commandrsc. If you want to prevent the unshuffling of the input data (file2rr), you can use the following trick. Set the status parameter MC2 to QF before you runf1projp: s mc2, clickQF Then, the size of the 1D data will be the same as the F1 size of the 2D data. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr- processed data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ f2projn- ascii file specifying the range of rows and the 1D data path f2projp- ascii file specifying the range of rows and the 1D data path f1projn- ascii file specifying the range of columns and the 1D data path f1projp- ascii file specifying the range of columns and the 1D data path <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r- 1D spectrum containing the projection auditp.txt- processing audit trail If the commands are used with less than three arguments, the files are stored in: <dir>\/data\/<user>\/nmr\/~TEMP\/1\/pdata\/1\/ USAGE IN AU PROGRAMS F2PROJN(firstrow, lastrow, procno) F2PROJP(firstrow, lastrow, procno) F1PROJN(firstcol, lastcol, procno) F1PROJP(firstcol, lastcol, procno) For all these macros counts that if procno = -1, the projection is written to the dataset ~TEMP SEE ALSO f2disco, f1disco,f2sum, f1sum,rhpp, rhnp  "],["3278611467","f2sum, f1sum, proj","3278611467.html","",null," NAME f2sum - Calculate partial sum in F2 (2D) f1sum - Calculate partial sum in F1 (2D) proj - Open the projections dialog box (2D,3D) DESCRIPTION The projection sum commands open the projections dialog box selecting the corresponding command.    This dialog box has several options, each of which selects a certain command for execution. Calculate sum (of rows) This option selects the commandf2sumfor execution. It calculates the sum of all rows within a region specified by the parameters. The result is divided by the number of rows. This means, that in the fact a mean row is calculated. Calculate sum (of columns) This option selects the commandf1sumfor execution. It calculates the sum of all columns within a region specified by the parameters. The result is divided by the number of columns. This means, that in the fact a mean column is calculated. The calculated column is stored under the specifiedDestination procno. The Required parameterDisplay projectioncan be set to:   on 2Dto display the calculated projection with the 2D dataset. The current 2D dataset remains the active dataset.  as 1Dto display the calculated projection as a 1D dataset. The active dataset changes to the destinationprocno. The required parameters can also be specified as arguments on the command line. As an example we use the commandf2sumhere. f2sum <firstrow>prompts forlastrowand stores the sum under dataname~TEMP f2sum <firstrow> <lastrow>stores the specified sum under dataname~TEMP f2sum <firstrow> <lastrow> <procno>stores the specified sum under the specifiedprocnoof the current dataname f2sum <firstrow> <lastrow> <procno> nstores the specified sum under the specifiedprocnoof the current datanamebut does not change the display to thisprocno INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr,2ir,2ri,2ii- processed data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- 1D spectrum containing the sum auditp.txt- processing audit trail USAGE IN AU PROGRAMS F2SUM(firstrow, lastrow, procno) F1SUM(firstcol, lastcol, procno) For both macros counts that ifprocno= -1, the sum is written to the dataset ~TEMP SEE ALSO f2disco, f1disco,f2projn, f2projp, f1projn, f1projp,rhpp, rhnp, rvpp, rvnp  "],["3278620555","genser","3278620555.html","",null," NAME genser - Generatepseudo-raw data (2D) DESCRIPTION The commandgensergenerates pseudo-raw data from processed 2D data. When entered without arguments,genseropens the following dialog box:    Here, you specify the output dataset and clickOKto actually execute the command.genseris normally used in combination withxif2andxif1. These commands perform aninverse Fourier transform, converting processedfrequency domain data into processedtime domain data.genserconverts these processed time domain data into pseudo-raw time domain data and stores them under a new name or experiment number (expno). NOTICE   Note that genser does not modify the data, but only stores them in a different format. The number of data points of the pseudo-raw data, is twice the size (SI) of the processed data they are created from. The acquisition status parameter TD (type dpa) is set accordingly; TD = 2*SI. This counts for both the F2 and F1 direction. gensertakes three arguments and can be used as follows:   genseropens a dialog box where you can specify the output data.  genser <expno>stores the output under the specifiedexpnoand opens a new data window displaying this expno.  genser <expno>nstores the output under the specifiedexpno, but does not open and display this expno. If the specified expno already exists, you will be prompted to overwrite it or not. You can force the overwrite by specifying the extra argumentyon the command line:   genser <expno>ynstores the output under the specifiedexpno, overwriting it if it exists, but does not open and display this expno. The processed data number (procno) of the new dataset is always set to 1. gensercan be useful if you want to reprocess a 2D spectrum, for example with different processing parameters, but the raw data do not exist any longer. An example of such a procedure is: xif2(if the data are Fourier transformed in F2) xif1(if the data are Fourier transformed in F1) genser(to create the pseudo-raw data) edp(to set the processing parameters) xfb(to process the pseudo-raw data) If the input data are processed but not Fourier transformed, you can skip the first two steps. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr,2ir,2ri,2ii- processed time domain data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ ser- pseudo-raw time domain data audita.txt- acquisition audit trail USAGE IN AU PROGRAMS GENSER(expno) SEE ALSO genfid,xif2, xif1  "],["3278629643","projd","3278629643.html","",null," NAME projd - Display projections along with the 2D spectrum (2D) DESCRIPTION Theprojdcommand opens a dialog box where you can specify the projections to be displayed along with the 2D spectrum:    This dialog box offers the following three options:   Display 1D spectra along with the 2D spectrum  Displays the specified 1D dataset(s) as external projections  Display projections along with the 2D spectrum  Displays the internal projections.  Turn projection display off  Turns off the projection display. In the lower part of the dialog you can specify the 1D datasets to be used for the first option. The checkboxes allow you to display the F2-projection, F1-projection or both. ClickingOKwill show the projections according to the chosen option and close the dialog. NOTICE   Note that the effect of the second and third option can also be reached by clicking thebutton of the toolbar or entering .pron the command line. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r- 1D processed data (input for 1st option) OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ curdat2- definition of the second and third dataset SEE ALSO f2projn, f2projp,rhpp, rhnp   "],["3278638731","rev2, rev1","3278638731.html","",null," NAME rev2 -Reverse spectrum in F2 (2D) rev1 - Reverse spectrum in F1 (2D) DESCRIPTION The commandrev2reverses the spectrum in the F2 direction. This means, each row is mirrored about the central column. The commandrev1reverses the spectrum in the F1 direction. This means, each column is mirrored about the central row. Note that the spectrum can also be reversed by duringxfbby setting the F2 and\/or F1 processing parameter REVERSE to TRUE. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr,2ir,2ri,2ii- processed data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr,2ir,2ri,2ii- processed data auditp.txt- processing audit trail USAGE IN AU PROGRAMS REV2 REV1 SEE ALSO rv "],["3278645515","rhpp, rhnp, rvpp, rvnp","3278645515.html","",null," NAME rhpp - Calculate horizontal (F2) positiveprojection (2D) rhnp - Calculate horizontal (F2) negativeprojection (2D) rvpp - Calculate vertical (F1) positive projection (2D) rvnp - Calculate vertical (F1) negative projection (2D) proj - Open the projections dialog box (2D,3D) DESCRIPTION The projection commands can be started from the command line or from the projection dialog box selecting the corresponding command.    This dialog box has several options, each of which selects a certain command for execution. Read positive projection (on rows) This option selects the commandrhppfor execution. It calculates the full positive projection of a 2D spectrum in the F2 direction and stores it as a 1D dataset. Read positive projection (on columns) This option selects the commandrvppfor execution. It calculates the full positive projection of a 2D spectrum in the F1 direction and stores it as a 1D dataset. Read negative projection (on rows) This option selects the commandrhnpfor execution. It calculates the full negative projection of a 2D spectrum in the F2 direction and stores it as a 1D dataset. Read negative projection (on columns) This option selects the commandrvnpfor execution. It calculates the full negative projection of a 2D spectrum in the F1 direction and stores it as a 1D dataset.    A projection is a 1Dtrace where every point has the highest intensity of all points of the correspondingorthogonal trace in the 2D spectrum. r*pcommands only take the projection of the first quadrant data (file2rr) and store it as real 1D data (file1r) r*pcommands can be started from the command line. When entered without arguments, a dialog window is displayed:    The required arguments can also be specified on the command line. rhpp<procno>stores the projection under the specifiedprocnoof the current dataname rhpp<procno>nstores the projection under the specifiedprocnobut does not change the display to thatprocno The three otherr*pcommand have the same syntax. A special case is the commandrvpporrvnpon a hypercomplex 2Ddataset (MC2 ≠ QF) that has been processed in F2 only. Suppose you would perform the following command sequence: xf2- to process the data in F2 only ssi- to check the F1 size of the 2D data, clickCancel. smc2- to check status MC2 (≠ QF), clickCancel. rvpp- to store the F1 projection in ~TEMP and change to that dataset ssi- to check the size of the resulting 1D dataset, clickCancel. You will see that the size of the 1D data is only half the F1 size of the 2D data. The reason is thatrvppunshuffles the input data (file2rr). As such,rvppbehaves like the commandrsc. If you want to prevent the unshuffling of the input data (file2rr), you can use the following trick. Set the status parameter MC2 to QF before you runrvpp: s mc2, clickQF Then, the size of the 1D data will be the same as the F1 size of the 2D data. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr- real processed 2D data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r- 1D spectrum containing the projection auditp.txt- processing audit trail If the commands are used without arguments, the files are stored in: <dir>\/data\/<user>\/nmr\/~TEMP\/1\/pdata\/1\/ USAGE IN AU PROGRAMS RHPP(procno) RHNP(procno) RVPP(procno) RVNP(procno) For all these macros counts that ifprocno= -1, the projection is written to the dataset ~TEMP SEE ALSO f2projn, f2projp,f2sum, f1sum,f2disco, f1disco    "],["3278650379","rsc","3278650379.html","",null," NAME rsc - Read column from 2D data and store as 1D data SYNTAX rsc [<column> [<procno>] [n]] DESCRIPTION The commandrscreads a column from a 2D spectrum and stores it as a 1D spectrum. When entered on a 2D dataset without arguments,rscopens a dialog box where you can specify the column number and theprocnoof the output data.    The column must be specified as a number between 1 and F2-SI. The latter is the F2 processing status parameter SI that can be viewed withssi. Theprocnocan be any number other that the currentprocno. If theprocnofield is left empty, the output dataset is stored under data name ~TEMP. When entered on a 2D dataset,rsctakes up to three arguments and can be used as follows: rscopens the above dialog box rsc <column>stores the specified column under dataname~TEMP rsc <column> <procno>stores the specified column under the current dataname, the currentexpnoand the specifiedprocno. It changes the display to the output 1D data. rsc <column> <procno> nstores the specified column under the current dataname, the currentexpnoand the specifiedprocno. It does not change the display to the output 1D data. Afterrschas read a column and the display has changed to the destination 1D dataset, a subsequentrsccommand can be entered on this 1D dataset. This takes two arguments and can be used as follows: rscopens the above dialog box rsc <column>reads the specified column from the 2D dataset from which the current 1D dataset was extracted rsc <column> <procno>reads the specified column from the 2D dataset that resides under the current dataname(however, if the current data name is ~TEMP, rsc <column> <procno> reads from the specifiedprocnoin the dataset from which the current 1D dataset was extracted), the currentexpnoand the specifiedprocno. Specifying theprocnoallows to read a column from a 2D dataset other than the one from which the current 1D dataset was extracted. Furthermore, the AU macro RSC requires two arguments, no matter if it is used on a 1D or on a 2D dataset. rsrcan also be started from the dialog box that is opened with the commandslice. A special case is a 2D dataset that has been Fourier transformed in F2 but not in F1.rscthen stores 1D processed data that are in the time domain rather than the frequency domain. Below are five different examples of this case. Example 1 A 2D dataset is Fourier transformed in F2, column 17 (time domain) is extracted and stored under the same name andexpno, inprocno2. The resulting 1D dataset is Fourier transformed. On the 2D dataset, enter the following commands: xf2- to Fourier transform in F2 only rsc172- to read column 17 toprocno2 and switch to that dataset ft- to Fourier transform the resulting 1D data according to FnMODE NOTICE   The 1D data shares the expno, and the acquisition parameters in it, with the source 2D dataset. 1D processing commands automatically recognize that this 1D dataset is a column from a 2D dataset. The commandftinterprets the F1 acquisition parameter FnMODE to determine the Fourier transform mode. Example 2 A 2D dataset with F1 acquisition modeStatesis Fourier transformed in F2. Column 17 (time domain) is extracted and stored under dataname~TEMP. The resulting 1D dataset is Fourier transformed. On the 2D dataset, enter the following commands: sfnmode– to check the FnMODE value (States), clickCancel. xf2- to Fourier transform in F2 only. smc2– to check the MC2 value (States),clickCancel. rsc17- read column 17 to ~TEMP and switch to that dataset. saq_mod– to check the AQ_mod value (qsim), clickCancel. ft- Fourier transform the resulting 1D data according to AQ_mod. NOTICE   The source 2D and the destination 1D have a separate a set of acquisition parameters. rsc reads the F1 status parameter MC2 of the 2D data and translates that to the corresponding AQ_mod of the 1D data. 1D processing commands recognizes this 1D dataset as regular 1D data. This means, for example, thatftinterprets the AQ_mod to determine the Fourier transform mode. Example 3 A 2D dataset with an F1 acquisition mode States-TPPI is Fourier transformed in F2. Column 17 (time domain) is extracted and stored under data name ~TEMP. The resulting 1D dataset is Fourier transformed. On the 2D dataset, enter the following commands: sfnmode– to check the FnMODE value (States-TPPI), clickCancel. xf2- to Fourier transform in F2 only smc2- to check the MC2 value (States-TPPI), clickCancel. rsc17- to read column 17 to ~TEMP and switch to that dataset ft_mod- to check the FT_mod value (fsc), clickCancel. trfp- toFourier transform the resulting 1D data according to FT_mod NOTICE   The source 2D and the destination 1D have a separate a set of acquisition parameters. Since there is no value for AQ_mod that corresponds to States-TPPI, rsc sets the processing parameter FT_mod instead of the acquisition status parameter AQ_mod. As such, the resulting 1D dataset can only be Fourier transformed correctly with trfp. Example 4 A 2D dataset with an F1 acquisition mode QF is Fourier transformed in F2. Column 17 (time domain) is extracted and stored under data name ~TEMP. From the 2D dataset, enter the following commands: sfnmode– to check the FnMODE value (QF), clickCancel. xf2- to Fourier transform in F2 only smc2– to check the MC2 value (QF), clickCancel. rsc17- to read column 17 to ~TEMP and switch to that dataset. s si– to check the size of the 1D dataset, clickCancel. NOTICE   For FnMODE = QF the 2D storage mode is different than for other values (see the description of xfb). As such, the size of the resulting 1D data is twice as large as for other values of FnMODE. If 2D imaginary data (file 2ii) exist, 1D imaginary (file 1i) are created. Only in that case, the 1D data can be Fourier transformed. Example 5 From a 3D dataset, a plane is extracted and, from this plane a column is extracted. On the 3D dataset, enter the following commands: xf2s13482- to read the F3-F1 plane 48 toprocno2 rsc193- to read, from plane 48, column 19 toprocno3 ft: to Fourier transform the resulting 1D data according to FnMODE NOTICE   The 3D, 2D and 1D dataset are stored in three different procno’s all under the same expno, i.e. they share the same acquisition parameters. 1D processing commands automatically recognize that the 1D dataset is a column from an F3-F1 plane that was extracted from a 3D dataset. As such,ftinterprets the F1 parameter FnMODE to determine the Fourier transform mode. Note that F1 is the third direction of the 3D dataset. The parameter handling, however, is transparent to the user. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr,2ir,2ri,2ii- 2D processed data OUTPUT FILES If no outputprocnois specified: <dir>\/data\/<user>\/nmr\/~TEMP\/1\/pdata\/1\/ 1r,1i- 1D spectrum used_from- data path of the source 2D data and the column no. auditp.txt- processing audit trail If the outputprocnois specified: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- 1D spectrum used_from- data path of the source 2D data and the column no. auditp.txt- processing audit trail USAGE IN AU PROGRAMS RSC(column,procno) Ifprocno= -1, the column is written to the dataset ~TEMP SEE ALSO rsr,rtr,wsr,wsc,rser2d,wser,wserp,r12, r13  "],["3278660235","rsr","3278660235.html","",null," NAME rsr - Read row from 2D data and store as 1D data (2D,1D) SYNTAX rsr [<row> [<procno>] [n]] DESCRIPTION The commandrsrreads a row from a 2D spectrum and stores it as a 1D spectrum. When entered on a 2D dataset without arguments,rsropens a dialog box where you can specify the row number and theprocnoof the output data.    The row must be specified as a number between 1 and F1-SI. The latter is the F1 processing status parameter SI that can be viewed withssi. Theprocnocan be any number other that the currentprocno. If theprocnofield is left empty, the output dataset is stored under data name ~TEMP. When entered on a 2D dataset,rsrtakes up to three arguments and can be used as follows:   rsr <row>stores the specified row under dataname~TEMP  rsr <row> <procno>stores the specified row under the current dataname, the currentexpnoand the specifiedprocno. It changes the display to the output 1D data.  rsr <row> <procno> nstores the specified row under the current dataname, the currentexpnoand the specifiedprocno. It does not change the display to the output 1D data. Afterrsrhas read a row and the display has changed to the destination 1D dataset, a subsequentrsrcommand can be entered on this 1D dataset. This takes two arguments and can be used as follows:   rsropens the dialog box where you can specify the row andprocnoof the 2D data  rsr <row>reads the specified row from the 2D dataset from which the current 1D dataset was extracted  rsr <row> <procno>reads the specified row from the 2D dataset that resides under the current dataname(however, if the current data name is ~TEMP, rsr <row> <procno> reads from the specifiedprocnoin the dataset from which the current 1D dataset was extracted), the currentexpnoand the specifiedprocno. Specifying theprocnoallows to read a row from a 2D dataset other than the one from which the current 1D dataset was extracted. Furthermore, the AU macro RSR requires two arguments, no matter if it is used on a 1D or on a 2D dataset. rsrcan also be started from the dialog box that is opened with the commandslice. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr,2ir,2ri,2ii- 2D processed data OUTPUT FILES If noprocnois specified: <dir>\/data\/<user>\/nmr\/~TEMP\/1\/pdata\/1\/ 1r,1i- 1D spectrum used_from- data path of the source 2D data and the row no. auditp.txt- processing audit trail If the outputprocnois specified: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- 1D spectrum used_from- data path of the source 2D data and the row no. auditp.txt- processing audit trail USAGE IN AU PROGRAMS RSR(row, procno) Ifprocno= -1, the row is written to the dataset ~TEMP SEE ALSO r12, r13, r23, slice,rsc,rser2d,rtr,wsc,wser,wserp,wsr  "],["3278809995","rser","3278809995.html","",null," NAME rser - Read row from 2D raw data and store as 1D FID (2D,1D) SYNTAX rser [<row> [<expno>] [n]] DESCRIPTION The commandrserreads a row from 2D or 3D raw data (a series of FIDs) and stores it as a 1D dataset. It opens a dialog box where you can specify the FID number and theexpnoof the output data.    For 2D data, the row must be specified as a number between 1 and F1-TD. The latter is the F1 acquisition status parameter TD that can be viewed withstd. rseris normally entered on the 2D dataset. It then takes up to three arguments and can be used as follows: rserprompts for the row number and stores it under dataname~TEMP rser <row>stores the specified row under dataname~TEMP rser <row> <expno>stores the specified row under the current datanameand the specifiedexpnoand then changes the display to thisexpno rser <row> <expno> nstores the specified row under the current datanameand the specifiedexpnobut does not change the display to thisexpno rser <row> <expno> eaoperformes EA calculation in all dimensions with acquisition status parameter FnMODE = Echo-Antiecho and stores the specified row under the current data name and the specified expno. Afterrserhas read a row and the display has changed to the destination 1D dataset, a subsequentrsercommand can be entered on this 1D dataset. This takes two arguments and can be used as follows: rseropens the above dialog box where you can specify the row number and theprocnoof the 2D dataset from which the current 1D dataset was extracted rser <row>reads the specified row from the 2D dataset from which the current 1D dataset was extracted rser <row> <expno>reads the specified row from the 2D dataset that resides under the current dataname(however, if the current data name is ~TEMP, the input dataset is the one from which the current 1D dataset was extracted, except for the specifiedexpno (procno), the specifiedexpnoandprocno1. NOTICE   Note that on 3D data, rser does not distinguish between the F2 and F1 direction and treats the 3D dataset as a large 2D dataset. This implies that the row number must lie between 1 and (F2-TD) * (F1-TD). rsercan also be started from the dialog box that is opened with the commandslice. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ ser- 2D or 3D raw data OUTPUT FILES If the outputexpnois specified: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- 1D FID audita.txt- acquisition audit trail <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/1\/ used_from- data path of the source 2D data and the row no. If no outputexpnois specified: <dir>\/data\/<user>\/nmr\/~TEMP\/1\/ fid- 1D FID <dir>\/data\/<user>\/nmr\/~TEMP\/1\/pdata\/1 used_from- data path of the source 2D data and the row no. USAGE IN AU PROGRAMS RSER(row, expno, procno) If expno = -1, the row is written to the dataset ~TEMP SEE ALSO r12, r13, r23, slice,rsc,rser2d,rsr,wsc,wser,wserp,wsr  "],["3278670091","sub2, sub1, sub1d2, sub1d1","3278670091.html","",null," NAME sub2 -Subtract 1D data from 2D data rows, keep sign (2D) sub1 - Subtract 1D data from 2D data columns, keep sign (2D) sub1d2 - Subtract 1D data from 2D data rows (2D) sub1d1 - Subtract 1D data from 2D data columns (2D) adsu - Open add\/subtract\/multiply dialog box (1D, 2D) DESCRIPTION Subtracting a 1D data from a 2D data can be started from the command line or from the add\/subtract dialog box. The latter is opened with the commandadsu. This dialog box offers several options, each of which selects a certain command for execution. Subtract a 1D spectrum from each row, retain sign This option selects the commandsub2for execution. It subtracts a 1D dataset from each row of the current 2D spectrum. It first compares the intensity of each data point of the 1D spectrum with the intensity of the corresponding data point in the 2D spectrum. If they have opposite signs, no subtraction is done and the 2D data point remains unchanged. If they have the same sign and the 1D data point is smaller than the 2D data point, the subtraction is done. If the 1D data point is greater than the 2D data point, the latter is set to zero. As such, the sign of the 2D data points always remains the same. Subtract a 1D spectrum from each column, retain sign This option selects the commandsub1for execution. It works likesub2, except that it subtracts the 1D second dataset from each column of the current 2D spectrum. Subtract a 1D spectrum from each row This option selects the commandsub1d2for execution. It subtracts a 1D dataset from each row of the current 2D spectrum. Unlikesub2, it does not compare intensities.    Subtract a 1D spectrum from each column This option selects the commandsub1d1for execution. It subtracts a 1D dataset from each column of the current 2D spectrum. Unlikesub1, it does not compare intensities. Thesub*commands only work on the real data. After using them, the imaginary data no longer match the real data and cannot be used for phase correction. If the second dataset has not been defined yet, thesub*commands open the add\/subtract (adsu) dialog box. Theadsucommand can be used on 1D or 2D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr- real processed 2D data <dir2>\/data\/<user2>\/nmr\/<name2>\/<expno2>\/pdata\/<procno2>\/ 1r- real processed 1D data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr- real processed 2D data auditp.txt- processing audit trail USAGE IN AU PROGRAMS SUB2 SUB1 SUB1D2 SUB1D1 SEE ALSO add2d, mul2d, addser  "],["3278674955","sym, syma, symj, symt","3278674955.html","",null," NAME sym- Symmetrize spectrum about thediagonal (2D) syma - Symmetrize spectrum about the diagonal, keep sign (2D) symj - Symmetrize spectrum about central horizontal line (2D) symt - Open symmetrization and tilt dialog box (2D) DESCRIPTION Allsym*commands open the symmetrize\/tilt dialog box:    This dialog box offers several options, each of which selects a certain command for execution. Symmetrize COSY type spectrum This option selects the commandsymfor execution. It symmetrizes a 2D spectrum about a diagonal from the lower left corner (data point 1,1) to the upper right corner (data point F2-SI, F1-SI). It compares each data point with the corresponding data point on the other side of the diagonal and determines which one has the lowest (most negative) intensity. Then both data points are set to that intensity.The following table shows the intensities of four pairs of data points before and aftersym:      beforesym  aftersym   -370000, 12000  -370000, -370000   1000, -700  -700, -700   18000, 6000  6000, 6000   -13000, -8000  -13000, -13000 symis typically used onmagnitude cosy spectra. Symmetrize phase sensitive spectrum This option selects the commandsymafor execution. It works likesym, except that it compares each data point with the corresponding data point on the other side of the diagonal and determines which one has the lowest absolute intensity. Then both data points are set to that intensity while each point keeps its original sign. The following table shows the intensities of four pairs of data points before and aftersyma:      beforesyma  aftersyma   -370000, 12000  -12000, 12000   1000, -700  700, -700   18000, 6000  6000, 6000   -13000, -8000  -8000, -8000 symais typically used onphase sensitive cosy spectra. Symmetrize J-resolved spectrum This option selects the commandsymjfor execution. It symmetrizes a 2D spectrum about a horizontal line through the middle. It is similar tosym, i.e. it compares each data point with the corresponding data point on the other side of the horizontal line and determines which one has the lowest (most negative) intensity. Then both data points are set to that intensity. The following table shows the intensities of 5 pairs of data points before and aftersymj:      beforesymj  aftersymj   -370000, 12000  -370000, -370000   1000, -700  -700, -700   18000, 6000  6000, 6000   -13000, -8000  -13000, -13000 symjis typically used on J-resolved spectra which have been tilted with the commandtilt. sym*commands only work on the real data. After using it, the imaginary data no longer match the real data and cannot be used for phase correction. When executed from the command line, the commandsym,symaandsymjselect the corresponding option in the dialog box. This means, you can just clickOKor hitEnterto start the command. In contrast,symtselects the last used symmetrization command. OUTPUT PARAMETERS Can be viewed withdppor by typingssymm: SYMM - type of symmetrization (no,sym,symaorsymj) done INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr- real processed 2D data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr- real processed 2D data auditp.txt- processing audit trail USAGE IN AU PROGRAMS SYM SYMA SYMJ SEE ALSO tilt, ptilt, ptilt1  "],["3278683275","tilt, ptilt, ptilt1","3278683275.html","",null," NAME tilt- Tilt a 2D spectrum ptilt- Tilt a 2D spectrum by shifting the data in the F2 direction ptilt1- Tilt a 2D spectrum by shifting the data in the F1 direction symt - Open the symmetrize\/tilt dialog box DESCRIPTION All*tilt*commands open the symmetrize\/tilt dialog box.    This dialog box offers several options, each of which selects a certain command for execution. Auto-tilt along rows This option selects the commandtiltfor execution. It tilts the 2D spectrum, shifting each row of the 2D spectrum by the value:   n = tiltfactor * (nsrow\/2 - row) The variables in this equation are defined as:   tiltfactor = (SW_p1\/SI1) \/ (SW_p2\/SI2)   nsrow = total number of rows   row = the row number Where SW_p1, SI1, SW_p2 and SI2 represent the processing status parameters SW_p and SI in F1 and F2, respectively. The upper half of the spectrum is shifted to the right, the lower half to the left. Furthermore, this is acircular shift, i.e. the data points which are cut off at the right edge of the spectrum are appended at the left edge and vice versa. Tilt along rows This option selects the commandptiltfor execution. It tilts the 2D spectrum about auser defined angle, by shifting the data points in the F2 direction. It is typically used to correct possiblemagnet field drifts during long term 2D experiments. Thetilt factor is determined by the F2 processing parameter ALPHA which can take a value between -2 and 2. Each row of the 2D matrix is shifted bynpoints wherenis defined by:   n = tiltfactor * (nsrow\/2 - row) The variables in this equation are defined by:   tiltfactor = ALPHA*SI2 \/ SI1   nsrow = total number of rows   row = the row number Where SI2 and SI1 are processing status parameter SI in F2 and F1, respectively. Tilt along columns This option selects the commandptilt1for execution. It tilts the 2D spectrum about auser defined angle, by shifting the data points in the F1 direction. Thetilt factor is determined by the F1 processing parameter ALPHA which can take a value between -2 and 2. Each column of the 2D matrix is shifted bynpoints wherenis defined by:   n = tiltfactor * (nscol\/2 - col) The variables in this equation are defined by:   tiltfactor = ALPHA*SI1\/ SI2   nscol = total number of columns   col = the column number Where SI2 and SI1 are processing status parameter SI in F2 and F1, respectively. For F2-ALPHA = 1 and F1-ALPHA = 1:   the sequenceptilt-ptilt1rotates the spectrum by 90°  the sequenceptilt1-ptiltrotates the spectrum by -90°. When executed from the command line, the commandtilt,ptiltandptilt1select the corresponding option in the dialog box. This means, you can just clickOKor hitEnterto start the command. In contrast,symtselects the last used tilt command. INPUT PARAMETERS Set from thesymtdialog box, withedpor by typingalpha:   ALPHA - tilt factor (used byptiltandptilt1) Set by initial processing command, e.g.xfb, can be viewed withdpp:   SW_p - spectral width of the processed data (used bytilt)   SI - size of the processed data OUTPUT PARAMETERS Can be viewed withdpp:   TILT - shows whethertilt,ptiltorptilt1was done (true or false) INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr- real processed 2D data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr- real processed 2D data   auditp.txt- processing audit trail USAGE IN AU PROGRAMS   TILT   PTILT   PTILT1 SEE ALSO sym, syma, symj, symt  "],["3278688139","wsc","3278688139.html","",null," NAME wsc - Replace column of 2D spectrum by 1D spectrum SYNTAX wsc [<row> [<procno> ]] DESCRIPTION The commandwscreplaces one column of 2D processed data by 1D processed data. It is normally used in combination withrscin the following way:   Runrscto extract columnxfrom a 2D spectrum  Manipulate the resulting 1D data with 1D processing commands  Runwscto replace columnxof the 2D data with the manipulated 1D data wsccan be entered on the source 1D dataset or on the destination 2D dataset. Examples of the usage ofwscon the source 1D dataset:   wscprompts for the column of the destination 2D data which must be replaced by the current 1D data. The 2D dataset is the one from which the 1D dataset was extracted.  wsc <column>the specified column of the destination 2D data is replaced by the current 1D data. The 2D dataset is the one from which the current 1D dataset was extracted.  wsc <column> <procno>the specified column of the destination 2D data is replaced by the current 1D data. The 2D dataset must reside under the current dataname(however, if the current data name is ~TEMP, wsc <column> <procno> writes to the specifiedprocnoin the dataset from which the current 1D dataset was extracted), the currentexpnoand the specifiedprocno. Examples of usage ofwscon the destination 2D dataset:   wsc <column>the specified column of the current 2D processed data is replaced. The source 1D data must reside under the dataname~TEMP  wsc <column> <procno>the specified column of the current 2D processed data is replaced. The source 1D data must reside under the current dataname, the currentexpnoand the specifiedprocno. Althoughwscis normally used as described above, it allows to specify a full dataset path in the following way:   wsc <column> <procno> <expno> <name> <user> <dir> When entered on a 1D dataset, the arguments specify the destination 2D dataset. When entered on a 2D dataset, the arguments specify the source 1D dataset. If only certain parts of the destination 2D data path are specified, e.g. theexpnoandname, the remaining parts are the same as in the current 1D data path. In AU programs,wscmust always have 6 arguments (see USAGE IN AU PROGAMS below). wsccan also be started from the dialog box that is opened with the commandslice. INPUT FILES <dir>\/data\/<user>\/nmr\/~TEMP\/1\/pdata\/1   1r,1i- 1D processed data   used_from- data path of the 2D data (input ofwscon a 1D dataset) or <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>   1r,1i- 1D processed data   used_from- data path of the 2D data (input ofwscon a 1D dataset) OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>   2rr,2ri- processed 2D data   auditp.txt- processing audit trail USAGE IN AU PROGRAMS   WSC(column, procno, expno, name, user, dir) SEE ALSO r12, r13, r23, slice,rsc,rser2d,rsr,wser,wserp,wsr "],["3278697227","wser","3278697227.html","",null," NAME wser - Replace row of 2D raw data by 1D raw data (2D) SYNTAX wser [<row> [<expno> ]] DESCRIPTION The commandwserreplaces one row of 2D raw data by 1D raw data. It can be entered on the source 1D dataset or on the destination 2D dataset. When entered on a 1D dataset,wseropens the following dialog box:    Enter the FID number to be replaced and the destination data path. Usage ofwserwith arguments on the source 1D dataset:   wser <row>the specified row of the 2D raw data is replaced by the current 1D FID. The destination 2D dataset is the one from which the current 1D dataset was extracted.  wser <row> <expno>the specified row of the 2D raw data is replaced by the current 1D FID. The 2D dataset must reside under the current dataname, the specifiedexpnoandprocno1. Usage ofwserwith arguments on the destination 2D dataset:   wser <row> <expno>the specified row of the current 2D raw data is replaced. The source 1D dataset must reside under the current dataname, specifiedexpnoandprocno1. INPUT FILES <dir>\/data\/<user>\/nmr\/~TEMP\/1\/   fid- 1D raw data <dir>\/data\/<user>\/nmr\/~TEMP\/1\/pdata\/1   used_from- data path of the 2D data (input ofwseron a 1D dataset) or <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   fid- 1D raw data <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   used_from- data path of the 2D data (input ofwseron a 1D dataset) wsercan also be started from the dialog box that is opened with the commandslice. OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   ser- raw 2D data   audita.txt- acquisition audit trail USAGE IN AU PROGRAMS WSER(row, name, expno, procno, dir, user) Note that the order of the arguments in AU programs is different from the order on the command line. SEE ALSO r12, r13, r23, slice,rsc,rser2d,rsr,wsc,wserp,wsr  "],["3278706315","wserp","3278706315.html","",null," NAME wserp - Replace row of 2D raw data by 1D processed data SYNTAX wserp [<row> [<expno> ]] DESCRIPTION The commandwserpreplaces one row of 2D raw data by processed 1D data. It can be entered on the source 1D dataset or on the destination 2D dataset. When entered on a 1D dataset,wserpopens the following dialog box:    Here, you can enter the FID number to be replaced and the destination data path. Usage ofwserpwith arguments on the source 1D dataset:   wserp <row>the specified row of the 2D raw data is replaced by the current 1D processed data. The 2D dataset is the one from which the current 1D dataset was extracted.  wserp <row> <expno>the specified row of the 2D raw data under the specifiedexpnois replaced by the current 1D processed data. The 2D datasetname,useranddirare the same as in the dataset as the current 1D data were extracted from. Usage ofwserpwith arguments on the destination 2D dataset:   wserp <row> <expno>the specified row of the current 2D raw data is replaced. The source 1D dataset must reside under the current dataname, specifiedexpnoandprocno1. wserpcan also be started from the dialog box that is opened with the commandslice. INPUT FILES <dir>\/data\/<user>\/nmr\/~TEMP\/1\/pdata\/1\/   1r,1i- 1D processed data (real, imaginary)   used_from- data path of the 2D data (input ofwserpon a 1D dataset) or <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   1r,1i- 1D processed data (real, imaginary)   used_from- data path of the 2D data (input ofwserpon a 1D dataset) OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   ser- raw 2D data   audita.txt- acquisition audit trail USAGE IN AU PROGRAMS WSERP(row, name, expno, procno, dir, user) Note that the order of the arguments in AU programs is different from the order on the command line. SEE ALSO r12, r13, r23, slice,rsc,rser2d,rsr,wsc,wser,wsr  "],["3278715403","wsr","3278715403.html","",null," NAME wsr - Replace row of a 2D spectrum by 1D spectrum SYNTAX wsr [<row> [<procno> ]] DESCRIPTION The commandwsrreplaces one row of 2D processed data by 1D processed data. It is normally used in combination withrsrin the following way:   runrsrto extract rowxfrom a 2D spectrum  manipulate the resulting 1D data with 1D processing commands  runwsrto replace rowxof the 2D data with the manipulated 1D data wsrcan be entered on the source 1D dataset or on the destination 2D dataset. Examples of the usage ofwsron the source 1D dataset:   wsrprompts for the row of the destination 2D data which must be replaced by the current 1D data. The 2D dataset is the one from which the current 1D dataset was extracted.  wsr <row>the specified row of the destination 2D data is replaced by the current 1D data. The 2D dataset is the one from which the current 1D dataset was extracted.  wsr <row> <procno>the specified row of the destination 2D data is replaced by the current 1D data. The 2D dataset must reside under the current dataname(however, if the current data name is ~TEMP, wsr <row> <procno> writes to the specifiedprocno in the dataset from which the current 1D dataset was extracted), the currentexpnoand the specifiedprocno. Examples of usage ofwsron the destination 2D dataset:   wsr <row>the specified row of the current 2D processed data is replaced. The source 1D data must reside under the dataname~TEMP.  wsr <row> <procno>the specified row of the current 2D processed data is replaced. The source 1D data must reside under the current dataname, the currentexpnoand the specifiedprocno. wsrcan also be started from the dialog box that is opened with the commandslice. INPUT FILES <dir>\/data\/<user>\/nmr\/~TEMP\/1\/pdata\/1   1r,1i- 1D processed data   used_from- data path of the 2D data (input ofwsron a 1D dataset) or <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>   1r,1i- 1D processed data   used_from- data path of the 2D data (input ofwsron a 1D dataset) OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>   2rr,2ir- processed 2D data   auditp.txt- processing audit trail USAGE IN AU PROGRAMS WSR(row, procno, expno, name, user, dir) SEE ALSO wsc,rsr,rsc,wser,wserp, rser,rser2d,r12, r13 "],["3278722955","xf1","3278722955.html","",null," NAME xf1 - Process data, including FT, in F1 (2D) DESCRIPTION The commandxf1processes a 2D dataset in the F1 direction. It can be started from the command line or from the Fourier transform dialog box. The latter is opened with the commandftf. xf1Fourier transforms time domain data (FID) intofrequency domain data (spectrum). Depending on the F1 processing parameters BC_mod, WDW, ME_mod and PH_mod,xf1also performsbaseline correction,window multiplication,linear prediction andphase correction, respectively. These steps are described in detail for the commandxfb. Normally, 2D data are processed with the commandxfbwhich performs a Fourier transform in both directions, F2 and F1. In some cases, however, it is useful to process the data in two separate steps using the sequencexf2-xf1, for example to view the data after processing them in F2 only. If you runxf1without runningxf2first, a warning that the F2 transform has not been done will appear. When the command has finished the data are in the time domain in F2 and in the frequency domain in F1. The opposite case, however, is more usual, i.e. data which have only been processed withxf2. xf1takes the same options asxfb. The F1 Fourier transform mode and data storage mode depends on the F1 acquisition mode (see INPUT PARAMETERS below and the description ofxfb). INPUT PARAMETERS F2 and F1 parameters Set byxf2, can be viewed withdppor by typingssi,sstsretc.:   SI - size of the processed data   STSR - strip start: first output point of strip transform   STSI - strip size: number of output points of strip transform   TDeff - number of raw data points to be used for processing   TDoff - first point of the FID used for processing (default 0) Ifxf2has not been done,xf1uses theedpparameters set by the user. F1 parameters Set from theftfdialog box, withedpor by typingbc_modetc. BC_mod - FID baseline correction mode   BCFW - filter width for BC_mod = sfil or qfil   COROFFS - correction offset for BC_mod = spol\/qpol or sfil\/qfil ME_mod - FID linear prediction mode   NCOEF - number of linear prediction coefficients   LPBIN - number of points for linear prediction   TDoff - number of raw data points predicted for ME_mod = LPb* WDW - FID window multiplication mode   LB - Lorentzian broadening factor for WDW = em or gm   GB - Gaussian broadening factor for WDW = gm, sinc or qsinc   SSB - Sine bell shift for WDW = sine, qsine, sinc or qsinc   TM1, TM2 - limits of the trapezoidal window for WDW = trap PH_mod - phase correction mode   PHC0 - zero order phase correction value for PH_mod = pk   PHC1 - first order phase correction value for PH_mod = pk FCOR - first (FID) data point multiplication factor (0.0-2.0, default 0.5) REVERSE - flag indicating to reverse the spectrum Set by thexf2, can be viewed withdppor by typingsmc2:   MC2 - Fourier transform mode (input ofxf1on processed data) Set by the acquisition, can be viewed withdpaor by typingsfnmode:   FnMODE - Acquisition mode (input ofxf1on raw data) OUTPUT PARAMETERS F1 parameters Can be viewed withdppor by typingsft_modetc.:   FT_mod - Fourier transform mode   FTSIZE - Fourier transform size F2 parameters Can be viewed withdppor by typingsymax_p,symin_petc.:   YMAX_p - maximum intensity of the processed data   YMIN_p - minimum intensity of the processed data   S_DEV -standard deviation of the processed data   NC_proc - intensity scaling factor INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   ser- raw data (input if2rrdoes not exist or is Fourier transformed in F1)   acqu2s- F1 acquisition status parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr- real processed data (input if it exists but is not processed in F1)   2ir- second quadrant imaginary processed data (input if FnMODE ≠ QF)   2ii- second quadrant imaginary processed data (input if FnMODE = QF)   proc- F2 processing parameters   proc2- F1 processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr- real processed data   2ir- third quadrant imaginary processed data (output if FnMODE ≠ QF)   2ii- fourth quadrant imaginary processed data (output if FnMODE ≠ QF)   2ii- second quadrant imaginary processed data (output if FnMODE = QF)   procs- F2 processing status parameters   proc2s- F1 processing status parameters   auditp.txt- processing audit trail USAGE IN AU PROGRAMS XF1 SEE ALSO xf2,xfb, ftf,xfb, ftf,xtrf, xtrf2,xtrfp, xtrfp2, xtrfp1 "],["3278731275","xfbm, xf2m, xf1m","3278731275.html","",null," NAME xfbm - Calculatemagnitude spectrum in F2 and F1 (2D) xf2m - Calculate magnitude spectrum in F2 (2D) xf1m - Calculate magnitude spectrum in F1 (2D) ph - Open phase correction dialog box (1D,2D) DESCRIPTION The magnitude spectrum commands can be started from the command line or from the phase correction dialog box. The latter is started with the commandph:    This dialog box offers several options, each of which selects a certain command for execution. Magnitude spectrum (F2) This option selects the commandxf2mfor execution. It calculates the real and F2-imaginary data according to:  Magnitude spectrum (F1) This option selects the commandxf1mfor execution. It calculates the real and F1-imaginary data according to according to:  Magnitude spectrum (F12 and F1) This option selects the commandxfbmfor execution. It calculates the real andF1\/F2-imaginary data according to according to:  Where:   rr= real data (2rrfile)   ir= F2-imaginary data (2irfile)   ri= F1-imaginary data (2rifile)   ii= F2\/F1-imaginary data (2iifile) The commandsxf*mare, for example, used to convert aphase sensitive spectrum tomagnitude spectrum. This is useful for data which cannot be phased properly or data which are not phase sensitive but have been acquired as such. Thephcommand can be used on 1D or 2D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr,2ir,2ri,2ii- processed 2D data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr,2ir,2ri,2ii- processed 2D data   auditp.txt- processing audit trail USAGE IN AU PROGRAMS XFBM XF2M XF1M SEE ALSO xfbps, xf2ps, xf1ps     "],["3278736139","xfbps, xf2ps, xf1ps","3278736139.html","",null," NAME xfbps - Calculate power spectrum in F2 and F1 (2D) xf2ps - Calculate power spectrum in F2 (2D) xf1ps - Calculatepower spectrum in F1 (2D) ph - Open phase correction dialog box (1D,2D) DESCRIPTION The commandsxf*pscalculate themagnitude spectrum. They can be started from the command line or from the phase correction dialog box. The latter is started with the commandph:    This dialog box offers several options, each of which selects a certain command for execution. Power spectrum in F2 This option selects the commandxf2psfor execution. It recalculates the real and F2-imaginary data according to:  Power spectrum (F1) This option selects the commandxf1psfor execution. It recalculates the real and F1-imaginary data according to:  Power spectrum (F2 and F1) This option selects the commandxfbpsfor execution. It recalculates the real according to:  Where:   rr= real data (2rrfile)   ir= F2-imaginary data (2irfile)   ri= F1-imaginary data (2rifile)   ii= F2\/F1-imaginary data (2iifile) The commandsxf*psis, for example, used in special cases to convert aphase sensitive spectrum to a power spectrum. This is useful for data which cannot be phased properly or data which are not phase sensitive but have been acquired as such. Thephcommand can be used on 1D or 2D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr,2ir,2ri,2ii- processed 2D data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr,2ir,2ri,2ii- processed 2D data   auditp.txt- processing audit trail USAGE IN AU PROGRAMS XFBPS XF2PS XF1PS SEE ALSO xfbm, xf2m, xf1m     "],["3278741003","xf2","3278741003.html","",null," NAME xf2 - Process data, including FT, in F2 (2D) DESCRIPTION The commandxf2processes a 2D dataset in the F2 direction. It can be started from the command line or from the Fourier transform dialog box. The latter is opened with the commandftf. xf2Fourier transforms time domain data (FID) intofrequency domain data (spectrum). Depending on the F2 processing parameters BC_mod, WDW, ME_mod and PH_mod,xf2also performsbaseline correction,window multiplication,linear prediction andphase correction, respectively. These steps are described in detail for the commandxfb. Normally, 2D data are processed with the commandxfbwhich performs a Fourier transform in both directions, F2 and F1. In some cases, however, 2D data must only be processed in the F2 direction. Examples are T1, T2 or Dosy data, or a 2D dataset which has been created from a series on 1D datasets. Even if a 2D dataset must be processed in both directions, it is sometimes useful to do that in two separate steps using the sequencexf2-xf1. The result is exactly the same as withxfbwith one exception;xfbperforms aquad spike correction (seexfb) and the sequencexf2-xf1does not. xf2takes the same options asxfb. Furthermore,xf2takes the special optionnd2dconverting an nD dataset (n>2) to a 2D dataset processing it in the acquisition direction. The size in the orthogonal direction (F1-SI) of the destination 2D dataset, is the product of the TD values of the source nD dataset. xf2can also be used to process one 2D plane of a 3D spectrum (seexfb). INPUT PARAMETERS F2 and F1 parameters Set from theftfdialog box, withedpor by typingsi,stsretc.:   SI - size of the processed data   STSR - strip start: first output point of strip transform   STSI - strip size: number of output points of strip transform   TDeff - number of raw data points to be used for processing   TDoff - first point of the FID used for processing (default 0)   XDIM -submatrix size (only used for the commandxf2xdim) Set by the acquisition, can be viewed withdpaor by typingstd:   TD - time domain; number of raw data points F2 parameters Set from theftfdialog box, withedpor by typingbc_modetc. BC_mod - FID baseline correction mode   BCFW - filter width for BC_mod = sfil or qfil   COROFFS - correction offset for BC_mod = spol\/qpol or sfil\/qfil ME_mod - FID linear prediction mode   NCOEF - number of linear prediction coefficients   LPBIN - number of points for linear prediction   TDoff - number of raw data points predicted for ME_mod = LPb* WDW - FID window multiplication mode   LB - Lorentzian broadening factor for WDW = em or gm   GB - Gaussian broadening factor for WDW = gm, sinc or qsinc   SSB - Sine bell shift for WDW = sine, qsine, sinc or qsinc   TM1, TM2 - limits of the trapezoidal window for WDW = trap PH_mod - phase correction mode   PHC0 - zero order phase correction value for PH_mod = pk   PHC1 - first order phase correction value for PH_mod = pk FCOR - first (FID) data point multiplication factor (0.0-2.0, default 0.5) REVERSE - flag indicating to reverse the spectrum Set by the acquisition, can be viewed withdpaor by typingsaq_mod:   AQ_mod - acquisition mode (determines the Fourier transform mode)   BYTORDA - byteorder or the raw data   NC - normalization constant F1 parameters Set by the acquisition, can be viewed withdpaor by typingsfnmode:   FnMODE - Fourier transform mode OUTPUT PARAMETERS F2 and F1 parameters Can be viewed withdppor by typingssi,stdeffetc.:   SI - size of the processed data   TDeff - number of raw data points that were used for processing   STSR - strip start: first output point of strip transform   STSI - strip size: number of output points of strip transform   FTSIZE - Fourier transform size   XDIM -submatrix size F2 parameters Can be viewed withdppor by typingsft_mod,symax_petc.:   FT_mod - Fourier transform mode   YMAX_p - maximum intensity of the processed data   YMIN_p - minimum intensity of the processed data   S_DEV - standard deviation of the processed data   NC_proc - intensity scaling factor   BYTORDP - byte order of the processed data F1 parameters Set by the acquisition, can be viewed withdppor by typingsmc2:   MC2 - Fourier transform mode INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   ser- raw data (input if2rrdoes not exist or is Fourier transformed in F2)   acqus- F2 acquisition status parameters   acqu2s- F1 acquisition parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr- processed data (input if it exists but is not Fourier transformed in F2)   proc- F2 processing parameters   proc2- F1 processing parameters NOTICE   Note that if2rris input,2riis also input if xf1 has been done. OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr- first quadrant real processed data   2ir- second quadrant imaginary processed data (output if FnMODE ≠ QF)   2ii- second quadrant imaginary processed data (output if FnMODE = QF)   procs- F2 processing status parameters   auditp.txt- processing audit trail USAGE IN AU PROGRAMS XF2 SEE ALSO xf1,xfb, ftf,xtrf, xtrf2 "],["3278749323","xfb, ftf","3278749323.html","",null," NAME xfb -Processdata, including FT, in F2 and F1 (2D) ftf - Open Fourier transform dialog box (1D,2D) DESCRIPTION The commandxfbprocesses a 2D dataset or a plane of a dataset with dimension ≥ 3. It can be started from the command line or from the Fourier transform dialog box. The latter is opened with the commandftf.    Theftfcommand recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. For 2D data, two options appear, both of which select thexfbcommand for execution, provided the F2 and F1 direction are both enabled. Standard Fourier transform This option only allows to set the parameter SI, the size of the real spectrum. Advanced Fourier transform This option allows to set all Fourier transform related parameters. xfbFourier transformstime domain data intofrequency domain data. Depending on the processing parameters BC_mod, WDW, ME_mod and PH_mod,xfbalso performsbaseline correction,window multiplication,linear prediction and spectrumphase correction. The processing steps done byxfbcan be described as follows:   Baseline correction of the 2D time domain data. Each row and\/or column is baseline corrected according to BC_mod. This parameter takes the valueno,single,quad,spol,qpolsfilorqfil. More details on BC_mod can be found in chapter List of processing parameters.  Linear prediction of the 2D time domain data. Linear prediction is done according to ME_mod. This parameter takes the valueno,LPfr,LPfc,LPbr,LPbc, LPmifrorLPmifc.Usually, ME_mod = no, which means no prediction is done. Forward prediction (LPfr,LPfc, LPmifrorLPmifc) can, for example, be used to extendtruncated FIDs. Backward prediction (LPbrorLPbc) can be used to improve the initial data points of the FID. Linear prediction is only performed for NCOEF > 0. Furthermore, LPBIN and, for backward prediction, TDoff play a role (see these parameters in chapter List of processing parameters).  Window multiplication of the 2D time domain data. Each row and\/or column is multiplied with a window function according to WDW. This parameter takes the valueem,gm,sine,qsine,trap,user,sinc,qsinc,trafortrafs. More details on WDW can be found in chapter List of processing parameters.  Fourier transform of the 2D time domain data. Each row is Fourier transformed according to the acquisition status parameter AQ_mod as shown in the table below. Each column (F1) is Fourier transformed according to the acquisition status parameter FnMODE as shown in the table below.xfbdoes not evaluate the processing parameter FT_mod! However, it stores the Fourier transform mode as it was evaluated from AQ_mod (F2) or FnMODE (F1) in the processing status parameter FT_mod. If, for some reason, you want to Fourier transform a spectrum with a different mode, you can set the processing parameter FT_mod (withedp) and use the commandxtrf(seextrf). More details on FT_mod can be found in chapter List of processing parameters.  Phase correction of the 2D spectrum according to PH_mod. This parameter takes the valueno,pk,mcorps. For PH_mod = pk,xfbapplies the values of PHC0 and PHC1. This is only useful if thephase values are known. If they are not, you can do an interactivephase correction in Phase correction mode afterxfbhas finished. More details on PH_mod can be found in chapter List of processing parameters.      F2 AQ_mod  Fourier transform mode  F2 status FT_mod    qf  forward, single, real  fsr   qsim  forward, quad, complex  fqc   qseq  forward, quad, real  fqr   DQD  forward, quad, complex  fqc      F1 FnMODE  Fourier transform mode  F1 status FT_mod    QF  forward, quad, complex  fqc   QSEQ  forward, quad, real  fqr   TPPI  forward, single, real  fsr   States  forward, quad, complex  fqc   States-TPPI  forward, single, complex  fsc   Echo-AntiEcho  forward, quad, complex  fqc  The size of the processed data is determined by the processing parameter SI; SI real and SI imaginary points are created. A typical value for SI is TD\/2 in which case, all raw data points are used and nozero filling is done. In fact, several parameters control the number of input and output data points, for example:   SI > TD\/2: the raw data are zero filled before theFourier transform  SI < TD\/2: only the first 2*SI raw data points are used  0 < TDeff < TD: only the first TDeff raw data points are used  0 < TDoff < TD: the first TDoff raw data points are cut off at the beginning and TDoff zeroes are appended at the end (corresponds to left shift).  TDoff < 0: -TDoff zeroes are prepended at the beginning. Note that:   for SI < (TD-TDoff)\/2 raw data are cut off at the end  for DIGMOD=digital, the zeroes would be prepended to the group delay which does not make sense. You can avoid that by converting the raw data withconvdtabefore you process them.  0 < STSR < SI: only the processed data between STSR and STSR+STSI are stored (if STSI = 0, STSR is ignored and SI points are stored)  0 < STSI < SI: only the processed data between STSR and STSR+STSI are stored. NOTICE   Note that only in the first case the processed data contain the total information of the raw data. In all other cases, information is lost. xfbperforms aquad spike correction which means that the central data point of the spectrum is replaced by the average of the neighbouring data points in the F1 direction. Note that thequad spike correction is skipped if you process the data with the sequencexf2-xf1. xfbevaluates the parameter FCOR. The first point of the FIDs is multiplied with the value of FCOR which lies between 0.0 and 2.0. Fordigitally filteredAvance data, FCOR is only used in the F1 direction. In F2, it has no effect because the first point is part of the group delay and, as such, is zero. However, A*X data or Avance data measured with DIGMOD = analog, FCOR is used in F1 and F2. xfbevaluates the F2 parameter PKNL. On A*X spectrometers, PKNL = true causes a non linear 5th order phase correction of the raw data. This corrects possible errors caused by non linear behaviour of the analog filters. OnAvance spectrometers, PKNL must always be set to TRUE. Fordigitally filtered data, it causesxfbto handle thegroup delay of the FID. For analog data it has no effect. xfbevaluates the F2 and F1 parameter REVERSE. If REVERSE = TRUE, the spectrum will bereversed in the corresponding direction, i.e. the first data point becomes the last and the last data point becomes the first. The same effect can be obtained with the commandsrev2and\/orrev1afterxfb. USAGE: xfbis normally used without options. There are, however, several options available:   n   xfbnormally stores real andimaginary processed data. However, the imaginary data are only needed for phase correction. If the parameters PHC0 and PHC1 are set correctly, then you don’t need to store the imaginary data. The optionnallows to do that. This will save processing time anddisk space. If you still want to do aphase correction, you can create imaginary data from the real data with aHilbert transform (seexht2andxht1).  nc_proc value   xfbscales the data such that, i.e. the highest intensity of the spectrum lies between 228and 229. Theintensity scaling factor is stored in the processing status parameter NC_proc and can be viewed withdpp. The optionnc_proccausesxfbto use a specific scaling factor. However, you can only scale down the data by entering a greater (more positive) value than the onexfbwould use without this option. If you enter a smaller (more negative) value, the option will be ignored to preventdata overflow. The optionnc_proc lastcausesxfbto use the current value of the status processing parameter NC_proc, i.e. the value set by the previous processing step on this dataset.  raw\/proc   xfbworks on raw data if no processed data exist or if processed data exist and have been Fourier transformed in F2 and\/or F1. One of them is usually true, i.e. the data have not been processed yet or they have been processed, for example withxfb. If, however, the data have been processed withxtrfwith FT_mod = no, they are not Fourier transformed and a subsequentxfbwill work on the processed data. Therawoption causesxfbto work on the raw data, no matter what. Theprocoption causesxfbto work on the processed data. If these do not exist or are Fourier transformed, the command stops and displays an error message. In other words, the optionprocpreventsxfbto work on raw data.  big\/little   xfbstores the data in the databyte order (big orlittle endian) of the computer it runs on e.g.little endian on Windows PCs. Note that TopSpin’s predecessor XWIN-NMR onSGI UNIX workstations stores data inbig endian. The byte order is stored in the processing status parameter BYTORDP which can be viewed withsbytordp. The optionbigorlittleallows to predefine the byte order. This, for example, is used to read processed data withthird party software which can not interpret BYTORDP. This option is only evaluated whenxfbworks on the raw data.  xdim   Large 2D spectra are stored in the so-calledsubmatrix format. The size of the submatrices are calculated byxfband depend on the size of the spectrum and the available memory. The optionxdimallows to use predefined submatrix sizes. It causesxfbto interpret the F2 and F1 processing parameter XDIM which can be set by enteringxdimon the command line. The actually used submatrix sizes, whether predefined or calculated, are stored as the F2 and F1 processing status parameter XDIM and can be viewed withdpp. Predefining submatrix sizes is, for example, used to read the processed data withthird party software which can not interpret the processing status parameter XDIM. This option is only evaluated whenxfbworks on the raw data. Normally,xfbstores the entire spectral region as determined by the spectral width. You can, however, do a so-calledstrip transform which means that only a certain region of the spectrum is stored. This can be done by setting the parameters STSR and STSI which represent thestrip start andstrip size, respectively. They both can take a value between 0 and SI. The values which are actually used can be a little different. STSI is always rounded to the next multiple of 16. Furthermore, when the data are stored in submatrix format (see below), STSI is rounded to the next higher multiple of thesubmatrix size. Typedppto check this; if XDIM is smaller than SI, then the data are stored in submatrix format and STSI is a multiple of XDIM. Depending on size of the processed data and the available computer memory,xfbstores the data insequential or submatrix format. Sequential format is used when the entire dataset fits in memory, otherwise submatrix format is used.xfbautomatically calculates the submatrix sizes such that one row (F2) of submatrices fits in the available memory. The calculated submatrix sizes are stored in the processing status parameter XDIM (typedpp). The next two tables show the alignment of the data points forsequential and submatrix format, respectively. This example shows a dataset with the following sizes: F2 SI = 16, F1 SI = 16, F2 XDIM = 8, F1 XDIM = 4. The storage handling is completely transparent to the user and is only of interest when the data are interpreted bythird party software.    2D data in sequential storage format      2D data in 8*4 submatrix storage format    As can be seen in the second tableF1 FnMODEof this chapter, the acquisition mode in F1 (FnMODE) determines the Fourier transform mode. Furthermore, FnMODE determines the data storage mode. The description below demonstrates the difference in data storage between a data set with FnMODE = QF and one with FnMODE ≠ QF. FnMODE = QF xfbperforms complex (two-quadrant) processing. In F2 the data are acquired phase sensitive, in F1 non-phase sensitive. In the example below, the following parameter settings are used:   In F2: TD = 8, SI is 4   In F1: TD = 2, SI = 2 Furthermore, the following notation is used for individual data points:   rncm: pointnof FIDm. This point is real in F2 and complex in F1   incm: pointnof FIDm. This point is imaginary in F2 and complex in F1 Input F2 processing(raw data)  For F2 processing,r1c1i1c1is the first complex input point, r2c1 i2c1 the second etc. Output F2 processing = Input F1 processing  Below, the F1 input data are simply redisplayed in vertical order, with the first complex input point in bold. Input F1 processing  Output F1 processing  FnMODE ≠ QF xfbperforms hypercomplex (four-quadrant) processing. Both in F2 and F1, the data are acquired phase sensitive. In the example below, the following parameters settings are used:   In F2: TD = 8, SI is 4   In F1: TD = 4, SI = 2 Furthermore, the following notation is used for individual data points:   rnrm: pointnof FIDm. This point is real in F2 and F1  inrm: pointnof FIDm. This point is imaginary in F2 and real in F1  rnim: pointnof FIDm. This point is real in F2 and imaginary in F1  inim: pointnof FIDm. This point is imaginary in F2 and F1 Input F2 processing (raw data)  For F2 processing,r1r1i1r1is the first hypercomplex input data point, r2r1 i2r1 the second etc.Output F2 processing = Input F1 processing  Below, the F1 input data are simply redisplayed, with the first F1 complex input points in bold. Input F1 processing  Output F1 processing  FnMODE = Echo-Antiecho xfbperforms hypercomplex (four-quadrant) processing. Both in F2 and F1, the data are acquired phase sensitive. In the example below, the following parameters settings are used:   In F2: TD = 8, SI is 4   In F1: TD = 4, SI = 2 Furthermore, the following notation is used for individual data points:   rnrm: pointnof FIDm. This point is real in F2 and F1  inrm: pointnof FIDm. This point is imaginary in F2 and real in F1  rnim: pointnof FIDm. This point is real in F2 and imaginary in F1  inim: pointnof FIDm. This point is imaginary in F2 and F1 Input F2 processing (raw data)  For F2 processing,r1r1i1r1is the first hyper complex input data point, r2r1 i2r1 the second etc. Output F2 processing = Input F1 processing   Below, the F1 input data are simply redisplayed, with the first F1 complex input points in bold. Input F1 processing  Output F1 processing  Note that:   For FnMODE ≠ QF, zero filling once in F1 is done when SI = TD. For FnMODE = QF, zero filling once in F1 is done when SI = 2*TD.  FnMODE = QF is normally used on magnitude or power data. For this purpose, the F1 processing parameter PH_mod must be set to MC or PS, respectively. Note that in these cases, no imaginary data are stored after F1 processing.  FnMODE = Echo-Antiecho is equivalent to FnMODE = States, except that two consecutive FIDs (rows of the 2D raw data) are linearly combined according to the following rules:   re0 = -im1 - im0  im0 = re1 + re0  re1 = re1 - re0  im1 = im1 - im0  xfb n does not store imaginary data after F1 processing. 2D PROCESSING OF 3D DATA xfbcan also be used to process one 2Dplane of a 3D spectrum. This can be a plane in the F3-F2 or in the F3-F1 direction. The output 2D data are stored in a separateprocno. When the current dataset is a 3D,xfbwill prompt you for the plane axis direction, the plane number, the outputprocnoand, if applicable, for the permission to overwrite existing data. Alternatively, you can enter this information as arguments on the command line, for example:   xfb s23 17 2 y Will read the F3-F2 plane number 17 and store it under procno 2, overwriting possibly existing data. Furthermore, you can use thenodispargument to prevent opening\/displaying the destination dataset, e.g.:   xfb s23 17 2 y nodisp For 2D processing of 3D echo-antiecho (EA) data the optioneaois available. This option ensures EA calculation when:   the 3D raw data are EA in either F2 or F1 (the acquisition status parameter FnMODE = Echo-Antiecho in F2 or F1, respectively)  the processed plane does not include the EA direction For example, to process F2-F3 plane 17 of a 3D dataset which is EA in F1, enter:   xfb eao s23 17 2 y If you omit theeaooption, the plane is still processed but no EA calculation is done. Using theeaooption allows to determine the correct phase values for EA data or compare the processed plane with a plane extracted from a 3D processed data. Note that if the processed plane includes the EA direction, or if the 3D data are not EA in any direction, the optioneaohas no effect. When executed on a dataset with 3D raw data but 2D processed data (usually a result of a previous 2D processing command on that 3D dataset),xfbtakes one argument:   xfb <plane> Process the specified plane and store it under the currentprocno.   xfb same Process the same plane as the previous processing command and store it under the currentprocno. Thesameoption is automatically used by the AU program macro XFB. When used on a regular 2D dataset (i.e. with 2D raw data), it has no effect. INPUT PARAMETERS F2 and F1 parameters Set from theftfdialog box, withedpor by typingbc_mod,bcfwetc. BC_mod - FID baseline correction mode   BCFW - filter width for BC_mod = sfil or qfil   COROFFS - correction offset for BC_mod = spol\/qpol or sfil\/qfil ME_mod - FID linear prediction mode   NCOEF - number of linear prediction coefficients   LPBIN - number of points for linear prediction   TDoff - number of raw data points predicted for ME_mod = LPb* WDW - FID window multiplication mode   LB - Lorentzian broadening factor for WDW = em or gm   GB - Gaussian broadening factor for WDW = gm, sinc or qsinc   SSB - Sine bell shift for WDW = sine, qsine, sinc or qsinc   TM1, TM2 - limits of the trapezoidal window for WDW = trap PH_mod - phase correction mode   PHC0 - zero order phase correction value for PH_mod = pk   PHC1 - first order phase correction value for PH_mod = pk SI - size of the processed data STSR - strip start: first output point of strip transform STSI - strip size: number of output points of strip transform TDeff - number of raw data points to be used for processing TDoff - first point of the FID used for processing (default 0) FCOR - first (FID) data point multiplication factor (0.0-2.0, default 0.5) REVERSE - flag indicating to reverse the spectrum XDIM -submatrix size (only used for the commandxfbxdim) Set by the acquisition, can be viewed withdpaor by typingstd: TD - time domain; number of raw data points  F2 parameters Set from theftfdialog box, withedpor by typingpknl: PKNL - group delay compensation (Avance) or filter correction (A*X) Set by the acquisition, can be viewed withdpaor by typingsaq_mod.: AQ_mod - acquisition mode (determines the Fourier transform mode) BYTORDA - byteorder or the raw data NC - normalization constant  F1 parameters Set by the acquisition, can be viewed withdpaor by typingsfnmode: FnMODE - F1 Acquisition transform mode Set by the user withedpor by typingmc2: MC2 - FT mode in F1 (only used if F1-FnMODE = undefined) OUTPUT PARAMETERS F2 and F1 parameters Can be viewed withdppor by typingssi,stdeffetc.: SI - size of the processed data TDeff - number of raw data points that were used for processing FTSIZE - Fourier transform size STSR - strip start: first output point of strip transform STSI - strip size: number of output points of strip transform XDIM - submatrix size FT_mod - Fourier transform mode  F2 parameters Can be viewed withdppor by typingsymax_p,symin_petc.: YMAX_p - maximum intensity of the processed data YMIN_p - minimum intensity of the processed data S_DEV - standard deviation of the processed data NC_proc - intensity scaling factor BYTORDP - byte order of the processed data INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   ser- raw data (input if2rrdoes not exit or is Fourier transformed) <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr- real processed 2D data (input if it exists but is not Fourier transformed)   proc- F2 processing parameters   proc2- F1 processing parameters   acqus- F2 acquisition status parameters   acqu2s- F1 acquisition status parameters NOTICE   Note that if2rris input, then2irand2rican also be input, depending on the processing status of the data. OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ For FnMODE  QF:   2rr- real processed 2D data   2ir- second quadrant imaginary processed data   2ri- third quadrant imaginary processed data   2ii- fourth quadrant imaginary processed data For FnMODE = QF:   2rr- real processed 2D data   2ii- second quadrant imaginary processed data For all values of FnMODE:   procs- F2 processing status parameters   proc2s- F1 processing status parameters   auditp.txt- processing audit trail USAGE IN AU PROGRAMS XFB If you want to use XFB with an option, you can do that withXCMD, e.g. XCMD(\"xfb raw\") SEE ALSO xf1,xf2,xfbm, xf2m, xf1m,xfbp, xf2p, xf1p,xfbps, xf2ps, xf1ps,xtrf, xtrf2                "],["3278764299","xfbp, xf2p, xf1p","3278764299.html","",null," NAME xfbp -Phase correction in F2 and F1 direction (2D) xf2p - Phase correction in F2 (2D) xf1p - Phase correction in F1 (2D) ph - Open phase correction dialog box (1D,2D) DESCRIPTION 2D phase correction can be started from the command line or from the phase correction dialog box. The latter is opened with the commandph:    This dialog box offers several options, each of which selects a certain command for execution. Additive phasing using PHC0\/1 (F2 and F1) This option selects the commandxfbpfor execution. It performs a zero and first order 2D phase correction in the F2 and F1 direction.xfbpworks like the 1D commandpk. This means it does not calculate the phase values, it simply applies the current values of PHC0 and PHC1. Additive phasing using PHC0\/1 (F2) This option selects the commandxf2pfor execution. It works likexfbp, except that it only corrects the phase in the F2 direction. Additive phasing using PHC0\/1 (F1) This option selects the commandxf1pfor execution. It works likexfbp, except that it only corrects the phase in the F1 direction. xf*pare only useful when the PHC0 and PHC1 values are known. If they are not, you can perform 2D interactive phase correction. To do that, select the optionManual Phasingin thephdialog box or clickin the toolbar. The interactive phase correction procedure is described in the TopSpin Users Guide. The phase values can also be determined by the 1D interactive phase correction of a row or column. To do that, read a row (rsr) and\/or column (rsc) and clickin the toolbar (see TopSpin Users Guide). Alternatively, you can phase correct a row or column withapkand view the calculated phase values withdpp. Then you can go back to the 2D dataset, set the determined phase values withedpand runxfbpto apply them. xfbpuses but does not change the processing parameters PHC0 and PHC1 (edp). It does, however, change the corresponding processing status parameters (dpp), by adding the applied phase values. Thephcommand can be used on 1D or 2D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT PARAMETERS Set from thephdialog box, withedpor by typingphc0,phc1:   PHC0 - zero order phase correction value (frequency independent)   PHC1 - first order phase correction value (frequency dependent) OUTPUT PARAMETERS Can be viewed withdppor by typingsphc0,sphc1:   PHC0 - zero order phase correction value (frequency independent)   PHC1 - first order phase correction value (frequency dependent) INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr,ir,2ri,2ii- processed 2D data   procs- F2 processing status parameters   proc2s- F1 processing status parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr,ir,2ri,2ii- processed 2D data   procs- F2 processing status parameters   proc2s- F1 processing status parameters   auditp.txt- processing audit trail USAGE IN AU PROGRAMS XFBP XF2P XF1P SEE ALSO xfb, ftf,xf2,xf1,xtrf, xtrf2,xtrfp, xtrfp2   "],["3278769163","xht2, xht1","3278769163.html","",null," NAME xht2 -Hilbert transform in F2 (2D) xht1 - Hilbert transform in F1 (2D) DESCRIPTION The commandxht2performs a Hilbert transform of 2D data in the F2 direction. The commandxht1performs a Hilbert transform of 2D data in the F1 direction. Hilbert transform createsimaginary data from the real data. Imaginary data are required for phase correction. They are normally created duringFourier transform withxfb,xf2orxf1. If, however, the imaginary data were not stored (xfbn) or have been deleted (deli), you can (re)create them withxht2orxht1. Note that Hilbert Transform is only useful when the real data have been created from zero filled raw data, with SI ≥ TD. Hilbert transform can also be used if the imaginary data exist but do not match the real data. This is the case when the latter have been manipulated after Fourier transform, for example byabs1,abs2,sub*,symorthird party software. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr- real processed 2D data   2ir- second quadrant imaginary data (if existing, input ofxht1)   2ri- third quadrant imaginary data (if existing, input ofxht2) OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr- real processed 2D data   2ir- second quadrant imaginary data (output ofxht2, created from2rr)   2ri- third quadrant imaginary data (output ofxht1, created from2rr)   2ii- fourth quadrant imaginary data   auditp.txt- processing audit trail USAGE IN AU PROGRAMS XHT2 XHT1 SEE ALSO xfb, ftf,xf2,xf1 "],["3278777483","xif2, xif1","3278777483.html","",null," NAME xif2 -Inverse Fourier transform in F2 (2D) xif1 - Inverse Fourier transform in F1 (2D) DESCRIPTION The commandxif2performs an inverse Fourier transform in the F2 direction. This meansfrequency domain data (spectrum) are transformed intotime domain data (FID). xif1performs an inverse Fourier transform in the F1 direction. NOTICE   Note that after xif2 or xif1 (or both), the data are still stored as processed data, i.e. the raw data are not overwritten. You can, however, createpseudo-raw data with the commandgenser which creates a new dataset. Inverse Fourier transform can also be done with the commandsxtrfp,xtrfp2andxtrfp1. To do that:   Typedppand check the status FT_mod.  Typeedpto set the processing parameters; set BC_mod, WDW, ME_mod and PH_mod tonoand FT_mod to the inverse equivalent of the status FT_mod.  Performxtrfp,xtrfp2orxtrfp1. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr,ir,2ri,2ii- processed 2D data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr,ir,2ri,2ii- processed 2D data   auditp.txt- processing audit trail USAGE IN AU PROGRAMS XIF2 XIF1 SEE ALSO genser,xtrfp, xtrfp2 "],["3278785035","xtrf, xtrf2","3278785035.html","",null," NAME xtrf - Custom processing of raw data in F2 and F1 (2D) xtrf2 - Custom processing of raw data in F2 (2D) DESCRIPTION The commandxtrfperforms customized processing of the raw data in both the F2 and F1 direction. It processes data according to the processing parameters BC_mod, WDW, ME_mod, FT_mod and PH_mod.xtrfworks likexfb, except for the following differences:   TheFourier transform is performed according to the processing parameter FT_mod, whereas the acquisition status parameter AQ_mod is ignored. This, for example, allows to process the data without Fourier transform (FT_mod = no). Furthermore, you can choose a Fourier transform mode different from the one that would be evaluated from theacquisition mode. This feature is not used very often because the Fourier transform as evaluated from the acquisition mode is usually the correct one. If, however, you want to manipulate theacquisition mode of the raw data, you can Fourier transform the data with one FT_mod,inverse Fourier transform them with a different FT_mod. Then you can usegenserto create pseudo-raw data with a different acquisition mode than the original raw data. The table below shows a list of values of FT_mod.  Abaseline correction is performed according to BC_mod. This parameter can take the valueno,single,quad,spol,qpol,sfilorqfil.xtrfevaluates BC_mod for the baseline correction mode (e.g. quad, qpol or qfil) and for thedetection mode (e.g. single or quad, spol or qpol, sfil or qfil). Note thatxfbevaluates the acquisition status parameter AQ_mod for the detection mode. More details on BC_mod can be found in chapter List of processing parameters.  When all parameters mentioned above are set tono, no processing is done but the raw data are still stored as processed data and displayed on the screen. This means the raw data are converted tosubmatrix format (files2rr,2ir,2riand2ii) and scaled according to the vertical resolution. Theintensity scaling factor is stored in the processing status parameter NC_proc and can be viewed withdpp. The size of these processed data and the number of raw data points which are used are determined by the parameters SI, TDeff and TDoff, as described for the commandxfb. For example, if 0 < TDeff < TD, the processed data are truncated. This allows to create pseudo-raw data with a smaller size than the original raw data (see alsogenser).      FT_mod  Fourier transform mode    no  no Fourier transform   fsr  forward, single channel, real   fqr  forward,quadrature, real   fsc  forward, single channel, complex   fqc  forward, quadrature, complex   isr  inverse, single channel, real   iqr  inverse,quadrature, real   isc  inverse, single channel, complex   iqc  inverse, quadrature, complex  The F1 Fourier transform mode and data storage mode depends on the F1 acquisition mode (see INPUT PARAMETERS below and the description ofxfb). xtrf2works likextrf, except that it only works in the F2 direction. xtrfandxtrf2take the same options asxfb. xtrfcan be used to do a combination of forward and backwardprediction. Runxtrfwith ME_mod = LPfc andxtrfp(orxfb) with ME_mod = LPbc. INPUT PARAMETERS F2 and F1 direction Set by the user withedpor by typingsi,bc_mod,bcfwetc.: SI - size of the processed data TDeff - number of raw data points to be used for processing TDoff - first point of the FID used for processing (default 0) FCOR - first (FID) data point multiplication factor (0.0-2.0, default 0.5) BC_mod - FID baseline correction mode   BCFW - filter width for BC_mod = sfil or qfil   COROFFS - correction offset for BC_mod = spol\/qpol or sfil\/qfil ME_mod - FID linear prediction mode   NCOEF - number of linear prediction coefficients   LPBIN - number of points for linear prediction   TDoff - number of raw data points predicted for ME_mod = LPb* WDW - FID window multiplication mode   LB - Lorentzian broadening factor for WDW = em or gm   GB - Gaussian broadening factor for WDW = gm, sinc or qsinc   SSB - Sine bell shift for WDW = sine, qsine, sinc or qsinc   TM1, TM2 - limits of the trapezoidal window for WDW = trap FT_mod - Fourier transform mode   STSR - strip start: first output point of strip transform   STSI - strip size: number of output points of strip transform   REVERSE - flag indicating to reverse the spectrum   PKNL - group delay compensation (Avance) or filter correction (A*X) PH_mod - phase correction mode   PHC0 - zero order phase correction value for PH_mod = pk   PHC1 - first order phase correction value for PH_mod = pk Set by the acquisition, can be viewed withdpaor by typingstd: TD - time domain; number of raw data points F2 direction Set by the acquisition, can be viewed withdpaor by typingsbytorda: BYTORDA - byteorder or the raw data NC - normalization constant F1 direction Set by the acquisition, can be viewed withdpaor by typingsfnmode: FnMODE - Acquisition mode OUTPUT PARAMETERS F2 and F1 parameters Can be viewed withdppor by typingssietc.: SI - size of the processed data TDeff - number of raw data points that were used for processing STSR - strip start: first output point of strip transform STSI - strip size: number of output points of strip transform XDIM - submatrix size F2 parameters Can be viewed withdppor by typingsymax_p,symin_petc.: YMAX_p - maximum intensity of the processed data YMIN_p - minimum intensity of the processed data S_DEV - standard deviation of the processed data NC_proc - intensity scaling factor BYTORDP - byte order of the processed data INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/   ser- raw data   acqus- F2 acquisition status parameters   acqu2s- F1 acquisition status parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   proc- F2 processing parameters   proc2- F1 processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr,2ir,2ri,2ii- processed 2D data   procs- processing status parameters   proc2s- processing status parameters   auditp.txt- processing audit trail USAGE IN AU PROGRAMS XTRF XTRF2 SEE ALSO xtrfp, xtrfp2,xfb, ftf,xf2,xf1 "],["3278794123","xtrfp, xtrfp2, xtrfp1","3278794123.html","",null," NAME xtrfp - Custom processing of processed data in F2 and F1 (2D) xtrfp2 - Custom processing of processed data in F2 (2D) xtrfp1 - Custom processing of processed data in F1 (2D) DESCRIPTION The commandxtrfpperforms customized processing of processed data both the F2 and F1 direction. It works likextrf, except that it only works on processed data. If processed data do not exist, an error message is displayed. If processed data do exist, they are further processed according to the parameters BC_mod, WDW, ME_mod, FT_mod and PH_mod as described forxtrf. xtrfp2works likextrfp, except that it only works in the F2 direction. xtrfp1works likextrfp, except that it only works in the F1 direction. Thextrfp*commands can, for example, be used to perform multiple additivebaseline corrections. This can be necessary if the raw data contain multiple frequency baseline distortions. You cannot do this withxfborxtrfbecause these commands always work on the raw data, i.e. they are not additive. xtrfp,xtrfp2andxtrfp1can also be used forinverse Fourier transform. To do that:   Typedppto check the status FT_mod  Typeedpto set the processing parameters; set BC_mod, WDW, ME_mod and PH_mod tonoand FT_mod to the inverse equivalent of the status FT_mod  Performxtrfp,xtrfp2orxtrfp1 As an alternative way to perform an inverse Fourier transform use the commandsxif2andxif1. INPUT PARAMETERS F2 and F1 parameters Set by the user withedpor by typingbc_mod,bcfwetc.: BC_mod - FID baseline correction mode   BCFW - filter width for BC_mod = sfil or qfil   COROFFS - correction offset for BC_mod = spol\/qpol or sfil\/qfil ME_mod - FID linear prediction mode   NCOEF - number of linear prediction coefficients   LPBIN - number of points for linear prediction   TDoff - number of raw data points predicted for ME_mod = LPb* WDW - FID window multiplication mode   LB - Lorentzian broadening factor for WDW = em or gm   GB - Gaussian broadening factor for WDW = gm, sinc or qsinc   SSB - Sine bell shift for WDW = sine, qsine, sinc or qsinc   TM1, TM2 - limits of the trapezoidal window for WDW = trap FT_mod - Fourier transform mode PH_mod - phase correction mode   PHC0 - zero order phase correction value for PH_mod = pk   PHC1 - first order phase correction value for PH_mod = pk FCOR - first (FID) data point multiplication factor (0.0-2.0, default 0.5) REVERSE - flag indicating to reverse the spectrum Set by a previous processing command, e.g.xtrf, can be viewed withdpp: SI - size of the processed data STSR - strip start: first output point of strip transform STSI - strip size: number of output points of strip transform TDeff - number of raw data points to be used for processing TDoff - first point of the FID used for processing (default 0) F1 parameters Set by a previous processing command, e.g.xtrf, can be viewed withdpp: MC2 - Fourier transform mode OUTPUT PARAMETERS F2 parameters Can be viewed withdppor by typingsymax_p,symin_petc.: YMAX_p - maximum intensity of the processed data YMIN_p - minimum intensity of the processed data S_DEV - standard deviation of the processed data NC_proc - intensity scaling factor BYTORDP - byte order of the processed data INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr,2ir,2ri,2ii- processed 2D data   proc- F2 processing parameters   proc2- F1 processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr,2ir,2ri,2ii- processed 2D data   procs- F2 processing status parameters   proc2s- F1 processing status parameters   auditp.txt- processing audit trail USAGE IN AU PROGRAMS XTRFP XTRFP2 XTRFP1 SEE ALSO xtrf, xtrf2,xfb, ftf,xf2,xf1 "],["3278802443","zert2, zert1, zert","3278802443.html","",null," NAME zert2 - Zero a trapezoidal region of each row (2D) zert1 - Zero a trapezoidal region of each column (2D) zert - Open zero region dialog box (2D) DESCRIPTION The zero region commands can be started from the command line or from the zero region dialog box. The latter is opened with the commandzert.    This dialog box offers only one option which can be used in the F2 or F1 direction. Zero trapezoidal region in F2 This option selects the commandzert2for execution. The trapezoidal region to be zeroed is defined as follows:   Only the rows between F1-ABSF2 and F1-ABSF1 are zeroed  The part (region) of each row which is zeroed shifts from row to row. The first row is zeroed between F2-ABSF2 and F2-ABSF1. The last row is zeroed between F2-SIGF2 and F2-SIGF1. For intermediate rows, the low field limit is an interpolation of F2-ABSF2 and F2-SIGF2 and the high field limit is an interpolation of F2-ABSF1 and F2-SIGF1. zert2works exactly likeabst2, except that the data points are zeroed instead of baseline corrected. Zero trapezoidal region in F1 This option selects the commandzert1for execution. The trapezoidal region to be zeroed is defined as follows:   Only the columns between F2-ABSF2 and F2-ABSF1 are zeroed  The part (region) of each column which is zeroed shifts from column to column. The first column is zeroed between F1-ABSF2 and F1-ABSF1. The last column is zeroed between F1-SIGF2 and F1-SIGF1. For intermediate columns, the low field limit is an interpolation of F1-ABSF2 and F1-SIGF2 and the high field limit is an interpolation of F1-ABSF1 and F1-SIGF1. zert1works exactly likeabst1, except that the data points are zeroed instead of baseline corrected. INPUT PARAMETERS Set from thezertdialog box, withedpor by typingabsf1,absf2etc.: ABSF1 - low field limit of the zero region in the first row ABSF2 - high field limit of the zero region in the first row SIGF1 - low field limit of the zero region in the last row SIGF2 - high field limit of the zero region in the last row INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr- real processed 2D data   proc2- F1 processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/   2rr- real processed 2D data   proc2s- F1 processing status parameters   auditp.txt- processing audit trail USAGE IN AU PROGRAMS ZERT2 ZERT1 SEE ALSO abs2, abst2 commanda,abs1, abst1 commanda  "],["3277535243","3D Processing Commands","3277535243.html","",null," This chapter describes all TopSpin 3D processing commands. They only work on 3D data and store their output in processed data files. 3D raw data are never overwritten. We will often refer to the three directions of a 3D dataset as the F3, F2 and F1 direction. F3 is always theacquisition direction. For processed data, F2 and F1 are always the second and third direction, respectively. For raw data, this order can be the same or reversed as expressed by the acquisition status parameter AQSEQ. 3D processing commands which work on raw data automatically determine theirstorage order from AQSEQ. The name of a 3D processing command expresses the direction in which it works, e.g.tf3works in F3,tf2in F2 andtf1in the F1 direction. The commandr12reads an F1-F2 plane,r13reads an F1-F3 plane etc. For each command, the relevant input and output parameters are mentioned. Furthermore, the relevant input and output files and their location are mentioned. Although file handling is completely transparent, it is sometimes useful to know which files are involved and where they reside. For example, if you have permission problems or if you want to process or interpret your data withthird party software. "],["3277539723","ft3d","3277539723.html","",null," NAME ft3d - Process data, including FT, in the F3, F2 and F1 direction (3D) DESCRIPTION The commandft3dprocesses a 3D dataset in all three directions F3, F2 and F1. It is equivalent to the command sequencetf3-tf2-tf1ortf3-tf1-tf2(see below). ft3dperforms aFourier transform which transforms time domain data (FID) intofrequency domain data (spectrum). Depending on the processing parameters BC_mod, WDW, ME_mod and PH_mod, it also performsbaseline correction,window multiplication,linear prediction and spectrumphase correction. ft3dexecutes the following processing steps:   Baseline correction The time domain data are baseline corrected according to BC_mod. This parameter takes the valueno,single,quad,spol,qpolsfilorqfil.  Linear prediction Linear prediction is done according to ME_mod. This parameter takes the valueno,LPfr,LPfc,LPbr,LPbc, LPmifrorLPmifc.Usually, ME_mod = no, which means no prediction is done. Forward prediction (LPfr,LPfc, LPmifrorLPmifc) can, for example, be used to extendtruncated FIDs. Backward prediction (LPbrorLPbc) is usually only done in F3, e.g. improve the initial data points of the FID. Linear prediction is only performed if NCOEF > 0. Furthermore, the parameters LPBIN and, for backward prediction, TDoff are evaluated.  Window multiplication The time domain data are multiplied with a window function according to WDW. This parameter takes the valueem,gm,sine,qsine,trap,user,sinc,qsinc,trafortrafs.  Fourier transform The time domain data are Fourier transformed in F3 according to the acquisition status parameter AQ_mod (see AQ_mod table below). In F2 and F1, they are Fourier transformed according to the acquisition status parameter FnMODE (if FnMODE = undefined, ft3d evaluates the processing parameter MC2). The Fourier transform mode is stored in the processing status parameter FT_mod. Note thatft3ddoes not evaluate the processing parameter FT_mod!  Phase correction The frequency domain data are phase corrected according to PH_mod. This parameter takes the valueno,pk,mcorps. For PH_mod = pk,ft3dapplies the values of PHC0 and PHC1. This is only useful if thephase values are known. You can determine them by typingxfbon the 3D data to process a 23 or 13 plane, do a phase correction on the resulting the 2D dataset and store the phase values to 3D.      status AQ_mod  Fourier transform mode  status FT_mod   qf  forward, single, real  fsr   qsim  forward, quad, complex  fqc   qseq  forward, quad, real  fqr   DQD  forward, quad, complex  fqc          FnMODE  Fourier transform mode  status FT_mod   undefined  according to MC2     QF  forward, quad, real  fqc   QSEQ  forward, quad, real  fqr   TPPI  forward, single, real  fsr   States  forward, quad, complex  fqc   States-TPPI  forward, single, complex  fsc   Echo-AntiEcho  forward, quad, complex  fqc  The size of the processed data is determined by the processing parameter SI; SI real and SI imaginary points are created. A typical value for SI is TD\/2 in which case, all raw data points are used and nozero filling is done. In fact, several parameters control the number of input and output data points, for example:   SI > TD\/2: the raw data are zero filled before theFourier transform  SI < TD\/2: only the first 2*SI raw data points are used  0 < TDeff < TD: only the first TDeff raw data points are used  0 < TDoff < TD: the first TDoff raw data points are cut off and TDoff zeroes are appended at the end  TDoff < 0: -TDoff zeroes are prepended at the beginning. Note that:   for SI < (TD-TDoff)\/2 raw data are cut off at the end  for DIGMOD=digital, the zeroes would be prepended to the group delay which does not make sense. You can avoid that by converting the raw data withconvdtabefore you process them.  0 < STSR < SI: only the processed data between STSR and STSR+STSI are stored (if STSI = 0, STSR is ignored and SI points are stored)  0 < STSI < SI: only the processed data between STSR and STSR+STSI are stored. Note that only in the first case the processed data contain the total information of the raw data. In all other cases, information is lost. Before you runft3d, you must set the processing parameter SI in all three directions F3, F2 and F1. ft3devaluates the acquisition status parameter AQSEQ, which defines the storage order of the raw data. Raw data can be stored in the order 3-2-1 or 3-1-2. Processed data, however, are always stored in the order 3-2-1. For AQSEQ=321,ft3dis equivalent to the command sequencetf3-tf2-tf1. For AQSEQ=312, it is equivalent totf3-tf1-tf2. Note, however, that for magnitude or power data, the processing order is independent of AQSEQ.ft3dthen behave as follows:   for F1-PH_mod = mc \/ ps,tf3-tf2-tf1is executed  for F2-PH_mod = mc \/ ps,tf3-tf1-tf2is executed Note that PH_mod = mc\/ps is only allowed in either F2 or F1, not in both and also not in F3. ft3devaluates the processing parameter FCOR. The first point of the FIDs is multiplied with the value of FCOR which lies between 0.0 and 2.0. Fordigitally filteredAvance data, FCOR has no effect in F3 because the first point is part of thegroup delay and, as such, is zero. In that case, it only plays a role in the F2 and F1 direction. However, on A*X data or Avance data measured with DIGMOD = analog, there is no group delay and FCOR also plays a role in F3. ft3devaluates the processing parameter PKNL. On A*X spectrometers, PKNL = true causes a non linear 5th orderphase correction of the raw data. This corrects possible errors caused by non linear behaviour of the analog filters. On Avance spectrometers, PKNL must always be set to TRUE. Fordigitally filtered data, it causesft3dto handle thegroup delay of the FID. For analog data it has no effect. ft3devaluates the processing parameter REVERSE. If REVERSE = TRUE, the spectrum will bereversed, i.e. the first data point becomes the last and the last data point becomes the first. ft3dcan be used with the following command line arguments: n ft3dwill not store theimaginary data. Imaginary data are only needed forphase correction in last processed direction. If thephase values are already known and PHC0 and PHC1 have been set accordingly,ft3dwill perform phase correction and there is no need to store the imaginary data. This will save processing time anddisk space. If you still need to do a phase correction afterft3d, you can create imaginary data from the real data with aHilbert transform (seetht1). Note that if thenoption is omitted, imaginary data are only stored in the last processed direction. 21or12 ft3d 21is equivalent to the command sequencetf3-tf2-tf1, whereasft3d 12is equivalent totf3-tf1-tf2. xdim 3D spectra are stored in the so-calledsubcube format. The size of the subcubes is calculated byft3dand depends on the size of the spectrum and the available memory. The optionxdimallows to use predefined subcube sizes. It causesft3dto interpret the F3, F2 and F1 processing parameter XDIM which can be set by enteringxdimon the command line. Note that XDIM = 0, is evaluated as XDIM = SI. The actually used subcube sizes, whether predefined or calculated, are stored as the F3, F2 and F1 processing status parameter XDIM and can be viewed withdpp. Predefining subcube sizes is, for example, used to read the processed data withthird party software which can not interpret the processing status parameter XDIM. big\/little ft3dstores the data in the data storage order of the computer it runs on, e.g.little endian on Windows PCs. Note that TopSpin’s predecessor XWIN-NMR onSGI UNIX workstations stores data inbig endian.The storage order is stored in the processing status parameter BYTORDP (typesbytordp). If, however, you want to read the processed data withthird party software which can not interpret this parameter, you can use thebig\/littleoption to predefine the storage order. p<du> The optionpallows to store the processed data on a different top level data directory, typically a different disk. The rest of the data directory path is the same as that of the raw data. If the specified top level directory does not exist, it will be created. Normally,ft3dstores the entire spectral region as determined by the spectral width. However, you can do a so-calledstrip transform which means that only a certain region of the spectrum is stored. This can be done by setting the parameters STSR and STSI which represent thestrip start andstrip size, respectively. They both can take a value between 0 and SI. The values which are actually used can be a little different. STSI is always rounded to the next higher multiple of 16. Furthermore, when the data are stored insubcube format (see below), STSI is rounded to the next multiple of thesubcube size. Typedppto check this; if XDIM is smaller than SI, then the data are stored in subcube format and STSI is a multiple of XDIM. ft3dstores the data insubcube format. It automatically calculates thesubcube sizes such that one row (F3) of subcubes fits in the available memory. Furthermore, one column (F2) and onetube (F1) of subcubes must fit in the available memory. The calculated subcube sizes are stored in the processing status parameter XDIM (typedpp). The alignment of the data points subcube format is the extension of the alignment in a 2D dataset as it is shown in2D data in 8*4 submatrix storage format. The storage handling is completely transparent to the user and is only of interest when the data are interpreted bythird party software. INPUT PARAMETERS F3, F2 and F1 parameters Set by the acquisition, can be viewed withdpaorstd: TD - time domain; number of raw data points  Set by the user withedpor by typingsi,stsretc.: SI - size of the processed data STSR - strip start: first output point of strip transform STSI - number of output points of strip transform TDeff - number of raw data points to be used for processing TDoff - first point of the FID used for processing (default 0) BC_mod - FID baseline correction mode BCFW - filter width for BC_mod = sfil or qfil COROFFS - correction offset for BC_mod = spol\/qpol or sfil\/qfil ME_mod - FID linear prediction mode NCOEF - number of linear prediction coefficients LPBIN - number of points for linear prediction TDoff - number of raw data points predicted for ME_mod = LPb* WDW - FID window multiplication mode LB - Lorentzian broadening factor for WDW = em or gm GB - Gaussian broadening factor for WDW = gm, sinc or qsinc SSB - Sine bell shift for WDW = sine, qsine, sinc or qsinc TM1, TM2 - limits of the trapezoidal window for WDW = trap PH_mod - phase correction mode PHC0 - zero order phase correction value for PH_mod = pk PHC1 - first order phase correction value for PH_mod = pk FCOR - first (FID) data point multiplication factor (0.0-2.0, default 0.5) REVERSE - flag indicating to reverse the spectrum F3 parameters Set by the acquisition, can be viewed withdpaorsaq_modetc.: AQ_mod - acquisition mode (determines the status FT_mod) AQSEQ - acquisition sequence (3-2-1 or 3-1-2) BYTORDA - byteorder or the raw data NC - normalization constant F2 and F1 parameters Set by the acquisition, can be viewed withdpaor by typingsfnmode: FnMODE - Fourier transform mode OUTPUT PARAMETERS F3, F2 and F1 parameters Can be viewed withdppor by typingssi,sstsretc.: SI - size of the processed data STSR - strip start: first output point of strip transform STSI - strip size: number of output points of strip transform FTSIZE - Fourier transform size TDeff - number of raw data points that were used for processing TDoff - first point of the FID used for processing (default 0) XDIM - subcube size FT_mod - Fourier transform mode F3 parameters Can be viewed withdppor by typingsymax_petc.: YMAX_p - maximum intensity of the processed data YMIN_p - minimum intensity of the processed data S_DEV - standard deviation of the processed data NC_proc - intensity scaling factor BYTORDP - byte order of the processed data F2 and F1 parameters Can be viewed withdppor by typingsmc2: MC2 - Fourier transform mode INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ ser- raw data acqus- F3 acquisition status parameters acqu2s- F2 acquisition status parameters acqu3s- F1 acquisition status parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ proc- F3 processing parameters proc2- F2 processing parameters proc3- F1 processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr- real processed 3D data 3rri- real\/imaginary processed data (for AQSEQ =321, FnMODE ≠ QF) 3rir- real\/imaginary processed data (for AQSEQ =312, FnMODE ≠ QF) 3iii- imaginary processed data (for FnMODE = QF) procs- F3 processing status parameters proc2s- F2 processing status parameters proc3s- F1 processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS FT3D SEE ALSO tf3,tf2,tf1 "],["3277544971","projplp, projpln, sumpl","3277544971.html","",null," NAME projplp - Calculate positiveprojection (nD) projpln - Calculate negativeprojection (nD) sumpl - Calculate sum projection (nD) DESCRIPTION The commandsprojplp,projplnandsumplcalculate the 2D positive, negative and sum projection, respectively. When entered without arguments, they all open the same dialog:    Here you can select the desired command in theOptionssection and specify the plane orientation, first and last row\/column and output PROCNO in the Parameter section. The parameters can also be specified as arguments. Up to 5 arguments can be used: <plane orientation> 23, 13, 12 (3D data) 34, 24, 14, 23, 13, 12, 43, ..., 21 (4D data) <first plane> The plane included in the calculation <last plane> The last plane included in the calculation <dest. procno> Theprocnowhere the 2D output data are stored n Prevents the destination dataset from being displayed\/activated (optional) Here is an example: projplp 13 10 128 998 n Calculates the positive F1-F3 projection of the planes 10 to 128 along F2 and stores it under PROCNO 998. Instead of specifying the first and last plane, you can also use the argumentallfor all cubes. For example: projplp 23 all 10 Calculates the positive F2-F3 projection of all planes along F1 and stores it under PROCNO 10. projplp,projplnandsumplwork on data of dimension ≥3D. On 4D and 5D data, the dialog shown in the figure above does not appear. Instead, the arguments are prompted for one at a time, if they are not specified on the command line. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr- real processed 3D data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr- real processed 2D data SEE ALSO rpl,wpl,rser2d  "],["3277552523","r12, r13, r23, slice","3277552523.html","",null," NAME r12 - Read F1-F2plane from 3D data and store as 2D data r13 - Read F1-F3 plane from 3D data and store as 2D data r23 - Read F2-F3 plane from 3D data and store as 2D data slice - Open the read plane dialog box (2D, 3D) DESCRIPTION The commandsr12,r13andr23read a plane from 3D processed data and store it as a 2D data set. When entered without arguments, they open the dialog box shown:    This dialog box offers several options, each of which selects a certain command for execution. Furthermore, you must specify three parameters:   Plane orientation: F1-F2, F1-F3 or F2-F3. This parameter determines which of the commandsr12,r13orr23is executed.  Plane number: The maximum plane number is the SI value in the direction orthogonal to the plane orientation.  Destination procno: Theprocnowhere the output 2D dataset is stored. For each option described below, a table shows how the processing state of the output 2D data relates to the processing state of the input 3D data. This table can be interpreted as follows:   FID: Data have not been Fourier transformed (time domain data)  Real:- Data have been Fourier transformed but imaginary data do not exist  real+imag: Data have been Fourier transformed and imaginary data exist Depending on the processing state, an extracted plane can be further processed with 2D processing commands likexf2,xf1,xf2petc. Extract an orthogonal spectrum plane in F1-F2 This option selects the commandr12for execution. It reads an F1-F2 plane from a 3D data set and stores it as a 2D data set:      3D data processed with  3D input data  2D output data   F3  F2  F1  F2  F1    tf3  real+imag  FID  FID  FID  FID   tf3, tf2  real  real+imag  FID  real+imag  FID   tf3, tf2, tf1  real  real  real+imag  real  real+imag   tf3, tf1, tf2  real  real+imag  real  real+imag  real   r12input\/output data Extract an orthogonal spectrum plane in F1-F3 This option selects the commandr13for execution. It reads an F1-F3 plane from a 3D data set and stores it as a 2D data set:      3D data processed with  3D input data  2D output data   F3  F2  F1  F2  F1    tf3  real+imag  FID  FID  real+imag  FID   tf3, tf2  real  real+imag  FID  real  FID   tf3, tf2, tf1  real  real  real+imag  real  real+imag   tf3, tf1, tf2  real  real+imag  real  real  real   r13input\/output data Extract an orthogonal spectrum plane in F2-F3 This option selects the commandr23for execution. It reads an F2-F3 plane from a 3D data set and stores it as a 2D data set:      3D data processed with  3D input data  2D output data   F3  F2  F1  F2  F1    tf3  real+imag  FID  FID  real+imag  FID   tf3, tf2  real  real+imag  FID  real  real+imag   tf3, tf2, tf1  real  real  real+imag  real  real   tf3, tf1, tf2  real  real+imag  real  real  real+imag   r23input\/output data  The parameters required byr12,r13andr23can also be entered as arguments on the command line. In that case, the command is executed without opening the dialog box. For example,r1210999reads an F1-F2 plane number 10 and stores it inprocno999. Note that the Plane orientation is not specified as an argument but part of the command name. The commandsr12,r13andr23are equivalent to the commandsrpl12,rpl13andrpl23, respectively (see the description ofrpl). INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr,3irr,3rir,3rri,3iii- processed 3D data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr,2ir,2ri,2ii- processed 2D data auditp.txt- processing audit trail USAGE IN AU PROGRAMS R12(plane, procno). For example R12(64, 1) R13(plane, procno). For example R13(64, 1) R23(plane, procno). For example R23(64, 1) SEE ALSO r12, r13, r23, slice,r12d, r13d, r23d, ,rpl,wpl  "],["3277557771","r12d, r13d, r23d","3277557771.html","",null," NAME r12d - Readdiagonal F1=F2plane and store as 2D data (3D) r13d - Readdiagonal F1=F3 plane and store as 2D data (3D) r23d - Readdiagonal F2=F3 plane and store as 2D data (3D) DESCRIPTION Read plane commands can be started from the command line or from the read plane dialog box. The latter is opened with the commandslice.    This dialog box offers several options, each of which selects a certain command for execution. Extract a diagonal spectrum plane in F1-F2 This option selects the commandr12dfor execution. It reads the diagonal F1=F2 plane from a 3D data set and stores it as a 2D data set. Extract a diagonal spectrum plane in F1-F3 This option selects the commandr13dfor execution. It reads the diagonal F1=F3 plane from a 3D data set and stores it as a 2D data set. Extract a diagonal spectrum plane in F2-F3 This option selects the commandr23dfor execution. It reads the diagonal F2=F3 plane from a 3D data set and stores it as a 2D data set. For each option, you must specify the destinationprocno. r12d,r13dandr23donly store the real data. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr- real processed 3D data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr- real processed 2D data SEE ALSO r12, r13,rpl,wpl  "],["3277566091","rser2d","3277566091.html","",null," NAME rser2d - Read plane from raw 3D data and store as a 2D (3D). DESCRIPTION The commandrser2dreads aplane from 3D raw data (a series of FIDs) and stores it as a pseudo raw 2D data set. When entered without arguments, it opens the following dialog box:    Here you can specify three required parameters:   Plane orientation: F1-F3 or F2-F3 (must contain acquisition (F3) direction)  Plane number: the maximum plane number is the TD value in the direction orthogonal to the plane orientation  Destination EXPNO: theexpnowhere the output 2D dataset is stored The parameters can also be entered as arguments on the command line. In that case, the command is executed without opening the dialog box. For example,rser2ds2310999reads an F3-F2 plane number 10 and stores it inexpno999 In contrast torser,rser2dcan only be entered on the source dataset, not on the destination dataset. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ ser- 3D raw data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ ser- 2D pseudo raw data audita.txt- acquisition audit trail <dir>\/data\/<user>\/nmr\/<name>\/<expno2>\/pdata\/1\/ used_from- data path of the source 3D data and the plane number USAGE IN AU PROGRAMS RSER2D (direction, plane, expno) SEE ALSO wser,wserp,rpl,wpl  "],["3277574411","tabs3, tabs2, tabs1","3277574411.html","",null," NAME tabs3 -Automatic baseline correction in F3 (3D) tabs2 -Automatic baseline correction in F2 (3D) tabs1 -Automatic baseline correction in F1 (3D) DESCRIPTION tabs3performs an automatic baseline correction in the F3 direction, by subtracting apolynomial. Thedegree of the polynomial is determined by the F3 parameter ABSG which has a value between 0 and 5, with a default of 5.tabs3works likeabsfin 1D andabs2in 2D. This means that it only corrects a certain spectral region which is determined by the parameters ABSF1 and ABSF2. tabs2works liketabs3, except that corrects data in the F2 direction using the F2 parameters ABSG, ABSF2 and ABSF1. tabs1works liketabs3, except that corrects data in the F1 direction using the F1 parameters ABSG, ABSF2 and ABSF1. INPUT PARAMETERS F3 parameters Set by the user withedpor by typingabsg: ABSG - degree of the polynomial to be subtracted (0 to 5, default of 5) F3, F2 and F1 parameters Set by the user withedpor by typingabsf1,absf2: ABSF1- low field limit of the correction region ABSF2 - high field limit of the correction region INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr- real processed 3D data proc- F3 processing parameters proc2- F2 processing parameters proc3- F1 processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr- real processed 3D data procs- F3 processing status parameters proc2s- F2 processing status parameters proc3s- F1 processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS TABS3 TABS2 TABS1 SEE ALSO abs, absf, absd, bas,abs1, abst1, absd1, absot1, bas,abs2, abst2, absd2, absot2 "],["3277594763","tf1","3277594763.html","",null," NAME tf1 - Process data, including FT, in F2 (3D) DESCRIPTION The commandtf1processes a 3D dataset in the F1 direction. This involves aFourier transform which transforms time domain data (FID) intofrequency domain data (spectrum). Depending on the processing parameters BC_mod, WDW, ME_mod and PH_mod,tf1also performsbaseline correction,window multiplication,linear prediction and spectrumphase correction. The processing steps done bytf1can be described as follows: tf1only works on data which have already been processed withtf3and possibly withtf2. It performs the following processing steps:   Baseline correction of the F1 time domain data  Eachtube is baseline corrected according to BC_mod. This parameter takes the valueno,single,quad,spol,qpolsfilorqfil. More details on BC_mod can be found in chapter List of processing parameters.  Linear prediction of the F1 time domain data  Linear prediction is done according to ME_mod. This parameter takes the valueno,LPfr,LPfc,LPbr,LPbc, LPmifr, LPmifc.Usually, ME_mod = no, which means no prediction is done. Forward prediction in F1 (LPfr,LPfc,LPmifrorLPmifc) can, for example, be used to extendtruncated FIDs. Backward prediction (LPbrorLPbc) is not used very often in F1. Linear prediction is only performed for NCOEF > 0. Furthermore, LPBIN and, for backward prediction, TDoff play a role (see these parameters in chapter List of processing parameters).  Windowmultiplication of the F1 time domain data  Each tube is multiplied with a window function according to WDW. This parameter takes the valueem,gm,sine,qsine,trap,user,sinc,qsinc,trafortrafs. More details on WDW can be found in chapter List of processing parameters.  Fourier transform of the F1 time domain data. Each tube is Fourier transformed according to the F1 processing status parameter MC2.tf1does not evaluate the processing parameter FT_mod! Instead, it evaluates the F1 processing status parameter MC2, which was set bytf3to the value of the F1 acquisition status parameter FnMODE (if FnMODE = undefined, tf3 sets processing status MC2 to processing MC2).tf1stores the corresponding Fourier transform mode as the processing status parameter FT_mod (typedpp).  Phase correction of the F1 frequency domain data.  Each column is phase corrected according to PH_mod. This parameter takes the valueno,pk,mcorps. For PH_mod = pk,tf1applies the values of PHC0 and PHC1. This is only useful if thephase values are known. You can determine them by typingxfbon the 3D data to process a 13 or 12 plane, do a phase correction on the resulting the 2D dataset and store the phase values to 3D. More details on PH_mod can be found in chapter List of processing parameters.      F1 MC2  Fourier transform mode  status FT_mod   QF  forward, quad, real  fqc   QSEQ  forward, quad, real  fqr   TPPI  forward, single, real  fsr   States  forward, quad, complex  fqc   States-TPPI  forward, single, complex  fsc   Echo-AntiEcho  forward, quad, complex  fqc  The F1 processing parameter SI determines the size of the processed data in the F1 direction. This must, however, be set beforetf3is done and cannot be changed aftertf3. Seetf3for the role of TD, TDeff and TDoff. tf1can do astrip transform according to the F1 parameters STSR and STSI (seetf3). tf1evaluates the F1 parameter FCOR. The first point of the FIDs is multiplied with the value of FCOR which is a value between 0.0 and 2.0. As such, FCOR allows to control the DC offset of the spectrum. tf1evaluates the F1 parameter REVERSE. If REVERSE=TRUE, the spectrum will bereversed in F1, i.e. the first data point becomes the last and the last data point becomes the first. tf1evaluates the F1 status parameter MC2. For MC2 ≠ QF,tf1uses the file3rrras input and the files3rrrand3rrias output. For MC2 = QF,tf1uses the files3rrrand3iiias input and output. The role of MC2 is described in detail for the 2D processing commandxfb. INPUT PARAMETERS F1 parameters Set by the user withedpor by typingbc_mod,bcfwetc.: BC_mod - FID baseline correction mode BCFW - filter width for BC_mod = sfil or qfil COROFFS - correction offset for BC_mod = spol\/qpol or sfil\/qfil ME_mod - FID linear prediction mode NCOEF - number of linear prediction coefficients LPBIN - number of points for linear prediction TDoff - number of raw data points predicted for ME_mod = LPb* WDW - FID window multiplication mode LB - Lorentzian broadening factor for WDW = em or gm GB - Gaussian broadening factor for WDW = gm, sinc or qsinc SSB - Sine bell shift for WDW = sine, qsine, sinc or qsinc TM1, TM2 - limits of the trapezoidal window for WDW = trap PH_mod - phase correction mode PHC0 - zero order phase correction value for PH_mod = pk PHC1 - first order phase correction value for PH_mod = pk FCOR - first (FID) data point multiplication factor (0.0-2.0, default 0.5) REVERSE - flag indicating to reverse the spectrum F3, F2 and F1 parameters Set bytf3, can be viewed withdppor by typingssi,sstsietc.: SI - size of the processed data STSR - strip start: first output point of strip transform STSI - strip size: number of output points of strip transform TDeff - number of raw data points to be used for processing TDoff - first point of the FID used for processing (default 0) F1 parameters Set by thetf3, can be viewed withdppor by typingsmc2: MC2 - Fourier transform mode OUTPUT PARAMETERS F1 parameters can be viewed withdppor by typingsft_mod: FT_mod - Fourier transform mode FTSIZE - Fourier transform size F3 parameters Can be viewed withdppor by typingsymax_petc.: YMAX_p - maximum intensity of the processed data YMIN_p - minimum intensity of the processed data S_DEV - standard deviation of the processed data NC_proc - intensity scaling factor INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ acqu3s- F1 acquisition status parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr- processed 3D data (Fourier transformed in F1) 3iii- real\/imaginary processed data (if MC2 = QF) proc3- F1 processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr- real processed 3D data 3rir- real\/imaginary data (if MC2 ≠ QF) 3iii- real\/imaginary processed data (if MC2 = QF) proc3s- F1 processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS TF1(store_imag) Wherestore_imagecan beyorn SEE ALSO tf3,tf2,ft3d "],["3277587211","tf2","3277587211.html","",null," NAME tf2 - Process data, including FT, in F2 (3D) DESCRIPTION The commandtf2processes a 3D dataset in the F2 direction. This involves aFourier transform which transforms time domain data (FID) intofrequency domain data (spectrum). Depending on the processing parameters BC_mod, WDW, ME_mod and PH_mod,tf2also performsbaseline correction,window multiplication,linear prediction and spectrumphase correction. The processing steps done bytf2can be described as follows: tf2only works on data which have already been processed withtf3. It performs the following processing steps in the F2 direction:   Baseline correction of the F2 time domain data  Each column is baseline corrected according to BC_mod. This parameter takes the valueno,single,quad,spol,qpolsfilorqfil. More details on BC_mod can be found in chapter List of processing parameters.  Linear prediction of the F2 time domain data  Linear prediction is done according to ME_mod. This parameter takes the valueno,LPfr,LPfc,LPbr,LPbc, LPmifr or LPmifc.Usually, ME_mod = no, which means no prediction is done. Forward prediction in F2 (LPfr,LPfc,LPmifrorLPmifc) can, for example, be used to extendtruncated FIDs. Backward prediction (LPbrorLPbc) is not used very often in F2. Linear prediction is only performed for NCOEF > 0. Furthermore, LPBIN and, for backward prediction, TDoff play a role (see these parameters in chapter List of processing parameters).  Windowmultiplication of the F2 time domain data  Each column is multiplied with a window function according to WDW. This parameter takes the valueem,gm,sine,qsine,trap,user,sinc,qsinc,trafortrafs. More details on WDW can be found in chapter List of processing parameters.  Fourier transform of the F2 time domain data  tf2Fourier transforms each column according to the F2 processing status parameter MC2 and stores the corresponding Fourier transform mode in the processing status parameter FT_mod (see table below). The status MC2 has been set by thetf3command to the value of the F2 acquisition status parameter FnMODE (if FnMODE = undefined, tf3 sets processing status MC2 to processing MC2). Note thattf2does not evaluate the processing parameter FT_mod!  Phase correction of the F2 frequency domain data.  Each column is phase corrected according to PH_mod. This parameter takes the valueno,pk,mcorps. For PH_mod = pk,tf2applies the values of PHC0 and PHC1. This is only useful if thephase values are known. You can determine them by typingxfbon the 3D data to process a 23 or 12 plane, do a phase correction on the resulting the 2D dataset and store the phase values to 3D. More details on PH_mod can be found in chapter List of processing parameters.      F2 status MC2  Fourier transform mode  status FT_mod   QF  forward, quad, real  fqc   QSEQ  forward, quad, real  fqr   TPPI  forward, single, real  fsr   States  forward, quad, complex  fqc   States-TPPI  forward, single, complex  fsc   Echo-AntiEcho  forward, quad, complex  fqc  The F2 processing parameter SI determines the size of the processed data in the F2 direction. This must, however, be set beforetf3is done and cannot be changed aftertf3. Seetf3for the role of TD, TDeff and TDoff. tf2can do astrip transform according to the F2 parameters STSR and STSI (seetf3). tf2evaluates the F2 parameter FCOR. The first point of the FIDs is multiplied with the value of FCOR which is a value between 0.0 and 2.0. As such, FCOR allows to control the DC offset of the spectrum. tf2evaluates the F2 parameter REVERSE. If REVERSE = TRUE, the spectrum will bereversed in F2, i.e. the first data point becomes the last and the last data point becomes the first. tf2evaluates the F2 status parameter MC2. For MC2 ≠ QF,tf2uses the file3rrras input and the files3rrrand3riras output. For MC2 = QF,tf2uses the files3rrrand3iiias input and output. The role of MC2 is described in detail for the 2D processing commandxfb. INPUT PARAMETERS F2 parameters Set by the user withedpor by typingbc_mod,bcfwetc.: BC_mod - FID baseline correction mode BCFW - filter width for BC_mod = sfil or qfil COROFFS - correction offset for BC_mod = spol\/qpol or sfil\/qfil ME_mod - FID linear prediction mode NCOEF - number of linear prediction coefficients LPBIN - number of points for linear prediction TDoff - number of raw data points predicted for ME_mod = LPb* WDW - FID window multiplication mode LB - Lorentzian broadening factor for WDW = em or gm GB - Gaussian broadening factor for WDW = gm, sinc or qsinc SSB - Sine bell shift for WDW = sine, qsine, sinc or qsinc TM1, TM2 - limits of the trapezoidal window for WDW = trap PH_mod - phase correction mode PHC0 - zero order phase correction value for PH_mod = pk PHC1 - first order phase correction value for PH_mod = pk FCOR - first (FID) data point multiplication factor (0.0-2.0, default 0.5) REVERSE - flag indicating to reverse the spectrum F3, F2 and F1 parameters Set bytf3, can be viewed withdppor by typingssi,sstsietc.: SI - size of the processed data STSR - strip start: first output point of strip transform STSI - strip size: number of output points of strip transform TDeff - number of raw data points to be used for processing TDoff - first point of the FID used for processing (default 0) F2 parameters Set by thetf3, can be viewed withdppor by typingsmc2: MC2 - Fourier transform mode F1 parameters Set by the acquisition, can be viewed withdpaor by typingstdetc.: TD - time domain; number of raw data points OUTPUT PARAMETERS F2 parameters Can be viewed withdppor by typingsft_mod: FT_mod - Fourier transform mode FTSIZE - Fourier transform size F3 parameters Can be viewed withdppor by typingsymax_p,symin_petc.: YMAX_p - maximum intensity of the processed data YMIN_p - minimum intensity of the processed data S_DEV - standard deviation of the processed data NC_proc - intensity scaling factor INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ acqu2s- F2 acquisition status parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr- processed 3D data (Fourier transformed in F3) 3iii- real\/imaginary processed data (if MC2 = QF) proc2- F2 processing parameters procs,proc2s,proc3s- F3, F2, F1 processing status parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr- real processed 3D data 3rir- real\/imaginary data (if MC2 ≠ QF) 3iii- real\/imaginary processed data (if MC2 = QF) procs- F3 processing status parameters proc2s- F2 processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS TF2(store_imag) wherestore_imagecan beyorn SEE ALSO tf3,tf1,ft3d "],["3277581963","tf3","3277581963.html","",null," NAME tf3 - Process data, including FT, in F3 (3D) DESCRIPTION The commandtf3processes a 3D dataset in the F3 direction. F3 is the first direction of a 3D dataset, i.e. theacquisition direction.tf3always performs aFourier transform which transforms time domain data (FID) intofrequency domain data (spectrum). Depending on the processing parameters BC_mod, WDW, ME_mod and PH_mod, it also performsbaseline correction,window multiplication,linear prediction and spectrumphase correction. The processing steps done bytf3can be described as follows:   Baseline correction of the F3 time domain data  Each row is baseline corrected according to BC_mod. This parameter takes the valueno,single,quad,spol,qpolsfilorqfil. More details on BC_mod can be found in chapter List of processing parameters.  Linear prediction of the F3 time domain data  Linear prediction is done according to ME_mod. This parameter takes the valueno,LPfr,LPfc,LPbr,LPbc, LPmifrorLPmifc.Usually, ME_mod = no, which means no prediction is done. Forward prediction (LPfr,LPfc, LPmifrorLPmifc) can, for example, be used to extendtruncated FIDs. Backward prediction (LPbrorLPbc) can be used to improve the initial data points of the FID. Linear prediction is only performed if NCOEF > 0. Furthermore, the parameters LPBIN and, for backward prediction, TDoff play a role (see these parameters in chapter List of processing parameters).  Windowmultiplication of the F3 time domain data  Each row is multiplied with a window function according to WDW. This parameter takes the valueem,gm,sine,qsine,trap,user,sinc,qsinc,trafortrafs. More details on WDW can be found in chapter List of processing parameters.  Fourier transform of the F3 time domain data  Each row is Fourier transformed according to the acquisition status parameter AQ_mod as shown in the table below.tf3does not evaluate the processing parameter FT_mod! However, it stores the Fourier transform mode in the processing status parameter FT_mod.  Phase correction of theF3 frequency domain data  Each row is phase corrected according to PH_mod. This parameter takes the valueno,pk,mcorps. For PH_mod = pk,tf3applies the values of PHC0 and PHC1. This is only useful if thephase values are known. You can determine them by typingxfbon the 3D data to process a 23 or 13 plane, do a phase correction on the resulting the 2D dataset and store the phase values to 3D. More details on PH_mod can be found in chapter List of processing parameters.      AQ_mod  Fourier transform mode  status FT_mod   qf  forward, single, real  fsr   qsim  forward, quad, complex  fqc   qseq  forward, quad, real  fqr   DQD  forward, quad, complex  fqc  The size of the processed data is determined by the processing parameter SI; SI real and SI imaginary points are created. A typical value for SI is TD\/2 in which case, all raw data points are used and nozero filling is done. In fact, several parameters control the number of input and output data points, for example:   SI > TD\/2: the raw data are zero filled before theFourier transform  SI < TD\/2: only the first 2*SI raw data points are used  0 < TDeff < TD: only the first TDeff raw data points are used  0 < TDoff < TD: the first TDoff raw data points are cut off and TDoff zeroes are appended at the end  TDoff < 0: -TDoff zeroes are prepended at the beginning. Note that:   for SI < (TD-TDoff)\/2 raw data are cut off at the end  for DIGMOD=digital, the zeroes would be prepended to the group delay which does not make sense. You can avoid that by converting the raw data withconvdtabefore you process them.  0 < STSR < SI: only the processed data between STSR and STSR+STSI are stored (if STSI = 0, STSR is ignored and SI points are stored)  0 < STSI < SI: only the processed data between STSR and STSR+STSI are stored. Note that only in the first case the processed data contain the total information of the raw data. In all other cases, information is lost. Before you runtf3, you must set the processing parameter SI in all three directions F3, F2 and F1. The commandtf2does not evaluate the F2 processing parameter SI, it evaluates the processing status parameter SI as it was set bytf3. tf3evaluates the acquisition status parameter AQSEQ. This parameter defines the storage order of the raw data 3-2-1 or 3-1-2. For processed data, F2 and F1 are always the second and third direction, respectively. For raw data, this order can be the same or reversed as expressed by AQSEQ. tf3evaluates the processing parameter FCOR. The first point of the FIDs is multiplied with the value of FCOR which lies between 0.0 and 2.0. Fordigitally filteredAvance data, FCOR has no effect in F3 because the first point is part of thegroup delay and, as such, is zero. In that case, it only plays a role in the F2 and F1 direction (seetf2andtf1). However, on A*X data or Avance data measured with DIGMOD = analog, there is no group delay and FCOR also plays a role in F3. tf3evaluates the processing parameter PKNL. On A*X spectrometers, PKNL = true causes a non linear 5th orderphase correction of the raw data. This corrects possible errors caused by non linear behaviour of the analog filters. On Avance spectrometers, PKNL must always be set to TRUE. Fordigitally filtered data, it causestf3to handle thegroup delay of the FID. For analog data it has no effect. tf3evaluates the processing parameter REVERSE. If REVERSE = TRUE, the spectrum will bereversed in F3, i.e. the first data point becomes the last and the last data point becomes the first. tf3can be used with the following command line options: n tf3will not store theimaginary data. Imaginary data are only needed forphase correction. If thephase values are already known and PHC0 and PHC1 have been set accordingly,tf3will perform phase correction and there is no need to store the imaginary data. This will save processing time anddisk space. If you still need to do a phase correction aftertf3, you can create imaginary data from the real data with aHilbert transform (seetht3). xdim 3D spectra are stored in the so-calledsubcube format. The size of the subcubes is calculated bytf3and depends on the size of the spectrum and the available memory. The optionxdimallows to use predefined subcube sizes. It causestf3to interpret the F3, F2 and F1 processing parameter XDIM which can be set with the commandxdim. The actually used subcube sizes, whether predefined or calculated, are stored as the F3, F2 and F1 processing status parameter XDIM and can be viewed withdpp. Predefining subcube sizes is, for example, used to read the processed data withthird party software which cannot interpret the processing status parameter XDIM. big\/little tf3stores the data in the data storage order of the computer it runs on, e.g.little endian on Windows PCs. Note that TopSpin’s predecessor XWIN-NMR onSGI UNIX workstations stores data inbig endian.The storage order is stored in the processing status parameter BYTORDP (typesbytordp). If, however, you want to read the processed data withthird party software which can not interpret this parameter, you can use thebig\/littleoption to predefine the storage order. Normally,tf3stores the entire spectral region as determined by the spectral width. However, you can do a so-calledstrip transform which means that only a certain region of the spectrum is stored. This can be done by setting the parameters STSR and STSI which represent thestrip start andstrip size, respectively. They both can take a value between 0 and SI. The values which are actually used can be a little different. STSI is always rounded to the next higher multiple of 16. Furthermore, when the data are stored insubcube format (see below), STSI is rounded to the next multiple of thesubcube size. Typedppto check this; if XDIM is smaller than SI, then the data are stored in subcube format and STSI is a multiple of XDIM. tf3stores the data insubcube format. It automatically calculates thesubcube sizes such that one row (F3) of subcubes fits in the available memory. Furthermore, one column (F2) and onetube (F1) of subcubes must fit in the available memory. The calculated subcube sizes are stored in the processing status parameter XDIM (typedpp). The alignment of the data points for sequential and subcube format is the extension of the alignment in a 2D dataset as it is shown in2D data in sequential storage formatand2D data in 8*4 submatrix storage format. The storage handling is completely transparent to the user and is only of interest when the data are interpreted bythird party software. INPUT PARAMETERS F3, F2 and F1 parameters Set by the user withedpor by typingsi,stsretc.: SI - size of the processed data STSR - strip start: first output point of strip transform STSI - number of output points of strip transform TDeff - number of raw data points to be used for processing TDoff - first point of the FID used for processing (default 0) F3 parameters Set by the user withedpor by typingbc_mod,bcfwetc.: BC_mod - FID baseline correction mode BCFW - filter width for BC_mod = sfil or qfil COROFFS - correction offset for BC_mod = spol\/qpol or sfil\/qfil ME_mod - FID linear prediction mode NCOEF - number of linear prediction coefficients LPBIN - number of points for linear prediction TDoff - number of raw data points predicted for ME_mod = LPb* WDW - FID window multiplication mode LB - Lorentzian broadening factor for WDW = em or gm GB - Gaussian broadening factor for WDW = gm, sinc or qsinc SSB - Sine bell shift for WDW = sine, qsine, sinc or qsinc TM1, TM2 - limits of the trapezoidal window for WDW = trap PH_mod - phase correction mode PHC0 - zero order phase correction value for PH_mod = pk PHC1 - first order phase correction value for PH_mod = pk FCOR - first (FID) data point multiplication factor (0.0-2.0, default 0.5) REVERSE - flag indicating to reverse the spectrum PKNL - group delay compensation (Avance) or filter correction (A*X) Set by the acquisition, can be viewed withdpaorsaq_modetc.: AQ_mod - acquisition mode (determines the status FT_mod) AQSEQ - acquisition sequence (3-2-1 or 3-1-2) TD - time domain; number of raw data points BYTORDA - byteorder or the raw data NC - normalization constant F2 and F1 parameters Set by the acquisition, can be viewed withdpaor by typingsfnmodeetc.: FnMODE - Fourier transform mode OUTPUT PARAMETERS F3, F2 and F1 Can be viewed withdppor by typingssi,sstsietc.: SI - size of the processed data STSR - strip start: first output point of strip transform STSI - strip size: number of output points of strip transform TDeff - number of raw data points that were used for processing TDoff - first point of the FID used for processing (default 0) XDIM - subcube size F3 parameters Can be viewed withdppor by typingssi,stdeffetc.: FTSIZE - Fourier transform size FT_mod - Fourier transform mode YMAX_p - maximum intensity of the processed data YMIN_p - minimum intensity of the processed data S_DEV - standard deviation of the processed data NC_proc - intensity scaling factor BYTORDP - byte order of the processed data F2 and F1 parameters Can be viewed withdppor by typings mc2etc.: MC2 - Fourier transform mode INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ ser- raw data acqus- F3 acquisition status parameters acqu2s- F2 acquisition status parameters acqu3s- F1 acquisition status parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ proc- F3 processing parameters proc2- F2 processing parameters proc3- F1 processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr- real processed 3D data 3irr- real\/imaginary processed data (for FnMODE ≠ QF) 3iii- real\/imaginary processed data (for FnMODE = QF) procs- F3 processing status parameters proc2s- F2 processing status parameters proc3s- F1 processing status parameters auditp.txt- processing audit trail USAGE IN AU PROGRAMS TF3(store_imag, partition) Wherestore_imagecan beyornandpartitionis the top level data directory SEE ALSO tf2,tf1,ft3d "],["3277602315","tf3p, tf2p, tf1p","3277602315.html","",null," NAME tf3p - Phase correction in F3 (3D) tf2p - Phase correction in F2 (3D) tf1p - Phase correction in F1 (3D) DESCRIPTION tf3pperforms aphase correction in the F3 direction applying the values of PHC0 and PHC1. These values must first be determined, for example on a 2Dplane. You can do that by typingxfbon the 3D data to process a 23 or 13 plane, do a phase correction on the resulting the 2D dataset and store the phase values to 3D. tf2pworks liketf3p, except that it works in the F2 direction applying the F2 parameters PHC0 and PHC1. These can be determined on a 2D plane extracted withr23orr12. tf1pworks liketf3p, except that it works in the F1 direction applying the F1 parameters PHC0 and PHC1. These can be determined on a 2D plane extracted withr13orr12. tf3pcan only be done:   directly aftertf3(not aftertf2ortf1)  if theF3 imaginary data exist Note that the commandtf3ndoes not store the imaginary data. You can, however, create them data from the real data with aHilbert transform (commandtht3). Phase correction is already done as a part of the commandstf3,tf2andtf1, if PH_mod = pk and PHC0 and PHC1 are set. INPUT PARAMETERS Set by the user withedpor by typingphc0,phc1etc. PHC0 - zero order phase correction value (frequency independent) PHC1 - first order phase correction value (frequency dependent) OUTPUT PARAMETERS Can be viewed withdppor by typingsphc0,sphc1etc.: PHC0 - zero order phase correction value (frequency independent) PHC1 - first order phase correction value (frequency dependent) INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr- real processed 3D data 3irr- F3 imaginary processed data (input oftf3p) 3rir- F2 imaginary processed data (input oftf2p) 3rri- F1-imaginary processed data (input oftf1p) OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr- real processed 3D data 3irr- F3 imaginary processed data (output oftf3p) 3rir- F2 imaginary processed data (output oftf2p) 3rri- F1-imaginary processed data (output oftf1p) auditp.txt- processing audit trail USAGE IN AU PROGRAMS TF3P(store_imag), wherestore_imagecan beyorn TF2P(store_imag), wherestore_imagecan beyorn TF1P(store_imag), wherestore_imagecan beyorn SEE ALSO tf3,tf2,tf1,pk,xfbp, xf2p, xf1p "],["3277610635","tht3, tht2, tht1","3277610635.html","",null," NAME tht3 - Hilbert transform in F3 (3D) tht2 - Hilbert transform in F2 (3D) tht1 - Hilbert transform in F1 (3D) DESCRIPTION tht3performs aHilbert transform in the F3 direction creatingimaginary data from the real data. The resulting imaginary data can then be used forphase correction withtf3p. tht2performs a Hilbert transform in the F2 direction creatingimaginary data from the real data. The resulting imaginary data can then be used for phase correction withtf2p. tht1performs a Hilbert transform in the F1 direction creatingimaginary data from the real data. The resulting imaginary data can then be used for phase correction withtf1p. Note that Hilbert Transform is only useful when the real data have been created from zero filled raw data, with SI ≥ TD. Normally, the imaginary data are created duringFourier transform. If, however, the imaginary data are missing or do not match the real data and you want to do aphase correction, you can (re)create them with Hilbert transform. Imaginary data do not match the real data if the latter have been manipulated after the Fourier transform, for example by baseline correction orthird party software. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr- real processed 3D data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3irr- F3 imaginary processed data (output oftht3) 3rir- F2 imaginary processed data (output oftht2) 3rri- F1-imaginary processed data (output oftht1) auditp.txt- processing audit trail SEE ALSO tf3,tf2,tf1 "],["3278819851","nD Processing Commands","3278819851.html","",null," TopSpin offers nD processing. Datasets up to 5D have been tested by Bruker. nD data can be displayed by reading cubes, planes or traces. "],["3278837899","absnd","3278837899.html","",null," NAME absnd - nD automatic baseline correction DESCRIPTION The commandabsndperforms an automatic baseline correction of data of dimension ≥3D. It takes one argument, the direction to be corrected. If no argument is specified on the command line, it is requested:    absndsubtracts apolynomial, thedegree of which is determined by the parameter ABSG, which has a value between 0 and 5, with a default of 5. It only corrects a certain spectral region which is determined by the parameters ABSF1 and ABSF2. absndactually processes 2D planes of an nD data set, performing a series ofabs2orabs1commands. On 3D data, the commandsabsnd3,absnd2andabsnd1are equivalent totabs3,tabs2andtabs1, respectively. INPUT PARAMETERS Acquisition direction: Set by the user withedpor by typingabsg.: ABSG - degree of the polynomial to be subtracted (0 to 5, default of 5) All directions: Set by the user withedpor by typingabsf1,absf2: ABSF1- low field limit of the correction region ABSF2 - high field limit of the correction region INPUT FILES For 4D data: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 4rrrr- processed 4D data proc- F4 processing parameters proc2- F3 processing parameters proc3- F2 processing parameters proc4- F1 processing parameters For 3D data, the input data file is3rrrwhereas theproc4does not exist. For data of dimension n where n ≥ 5, input data files are namednrandni, e.g.5r,5i,6r,6ietc. OUTPUT FILES For 4D data: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 4rrrr- processed 4D data procs- F4 processing status parameters proc2s- F3 processing status parameters proc3s- F2 processing status parameters proc4s- F1 processing status parameters For 3D data, the output data file is3rrrwhereasproc4sdoes not exist. For data of dimension n where n ≥ 5, output data files are namednrandni, e.g.5r,5i,6r,6ietc. SEE ALSO abs1, abst1, absd1, absot1, bas,abs2, abst2, absd2, absot2,tabs3, tabs2, tabs1  "],["3278873739","ftnd","3278873739.html","",null," NAME ftnd - nD processing including Fourier transform (≥ 3D) DESCRIPTION The commandftndprocesses nD data performing fid baseline correction, linear prediction, window multiplication, Fourier transform and phase correction. The command automatically recognizes the data dimensionality and handles data of dimension ≥3D. In TopSpin,ftndhas been tested by Bruker on 3D, 4D, 5D and 6Ddata. Note that 3D data can also be processed with the conventional commandstf3,tf2,tf1andft3d. As an example,ftndis described here for a 4D dataset. It takes the following three arguments: <direction> the direction(s) to be processed. Allowed values are: 0 : all directions, in the order defined by AQSEQ 4321, 4312, 4231, 4213, 4132, 4123 : all directions in specified order 4, 3, 2, or 1 : F4, F3, F2 or F1, respectively. <procno> Output procno of the processed data. Optional argument, normally unused. In special cases, however, the data cannot be processed in-place, and must be stored in a different procno.ftndwill then prompt you for an output procno. dlp Delayed linear prediction. Optional argument, only applicable when all directions are processed. This argument ensures that when linear prediction is performed in a certain direction, all other directions are already Fourier transformed (see below). If the arguments are not specified on the command line,ftndwill normally only prompt you for the direction. The output procno is only prompted for if inplace operation is not possible. Here are some example of specifying arguments on the command line: ftnd0 Process the data in all directions in the order defined by the acquisition status parameter AQSEQ ftnd4 Process data in direction F4 ftnd4312 999 Process the data in all directions, in the order F4-F3-F1-F2 and store the result in procno 999 ftnd0 dlp Process the data in all directions, in the order defined by AQSEQ, performing delayed linear prediction according to ME_MOD and NCOEF. Missing arguments are prompted for, except for thedlpargument. Note that for the first argument, the direction, only the allowed directions are displayed and the next logical direction is suggested. The figure below shows the dialog opened byftndon a 4D dataset that has already been processed in F4 and F3.    Extract 1D, 2D or 3D data from 4D, 5D,... processed data. To view the result of 4D processing, open the dataset (procno) where the processed data are stored and read a 3D-cube, 2D-plane or 1D trace. This can be done with the commandsrcb,rplandrtr, respectively. These commands automatically switch to the destination dataset showing the 3D, 2D or 1D dataset, respectively (see the description of these commands for more information). Furthermore, you can extract positive, negative or sum cube projections with the commandsprojcbp,projcbnandsumcb, respectively. Similarly, you can extract plane projections with the commandsprojplp,projplnandsumpl, respectively. Instead of processing the entire 4D dataset and reading a certain plane or trace, you can also process single 2D-planes or 1D fids of the 4D raw data. To process a plane, just enterxfb,xf2orxtrfand specify the requested plane axis orientation, plane number and outputprocno. To process a trace, just enter a 1D processing command likeftortrfand specify the requested fid number and outputprocno. Obviously, 1D\/2D processing commands can also be used to further process or reprocess traces\/planes or processed 4D data. For example:   Open a 4D dataset  ftnd4-Perform 4D processing in the F4 direction  rpl341999-Read F3-F4 plane 1 and store it inprocno999. Note that the plane is stored as a F2-processed 2D dataset.  xf1- Perform 2D processing in the F1-direction. Processing the four directions in separate steps Normally,ftndwith the argument0or one of the arguments 4321, 4312, .. etc. to process all directions. In some cases, you may want to process the different directions in individual steps and perform the sequenceftnd4,ftnd3, .. etc. The first direction to be processed must be F4, the other three directions can be processed in any order. Note that every order in which the data are processed in F3, F2 an and F1 gives the same result, unless linear prediction is done (ME_mod and NCOEF ≠ 0) Delayed linear prediction Linear prediction is a valuable method for improving the resolution of nD data with small TD values and often truncated FIDs. The effect of linear prediction in one direction can, however, be distorted by modulations introduced by other, untransformed, directions. Thedlpargument allows to perform linear prediction in a certain direction while all other directions have already been Fourier transformed. Let’s take an example to see how this works. Suppose you have a 4D dataset with acquisition order 4321 (parameter AQSEQ), which you want to processed in all 4 directions including Window Multiplication (WM) and Fourier transform (FT). Furthermore, you want to increase the resolution with linear prediction (LP) in the third (F2) and fourth (F1) direction. As such, you have set the parameters WDW, and, in F2 and F1, ME_mod and NCOEF, to appropriate values. If you use the commandftnd 0the following happens:   Processing in F4 (WM - FT)  Processing in F3 (WM - FT  Processing in F2 (LP - WM - FT  Processing in F1 (LP - WM - FT So when linear prediction is done in F2, data have not been Fourier transformed yet in F1, which can cause distortions. If, however, you use the commandftnd0dlpfor delayed linear prediction, the following happens:   Processing in F4 (WM - FT)  Processing in F3 (WM - FT)  Processing in F2 (FT)  Processing in F1 (LP - WM - FT)  Processing in F2 (IFT - inverse Fourier transform, including Hilbert Transform to create temporary imaginary data)  Processing in F2 (LP - WM - FT) Now when linear prediction is done in F2, the data are Fourier transformed in F1 (and all other directions). For the F1 direction, linear prediction does not have to be delayed because F1 is the last direction being processed. Note thatftndalso performs fid baseline correction and spectrum phase correction if the parameters BC_mod and PH_mod, respectively, are set. Delayed linear prediction can also be performed in two steps. The command: ftnd0dlp(with F2-ME_mod ≠ 0 and NCOEF ≠0) is equivalent with the command sequence:   ftnd0(with F2-ME_mod = 0) and WDW = 0  lpnd2(with F2-ME_mod ≠ 0, NCOEF ≠ 0 and WDW ≠ 0) In-place operation Normally,ftndcan perform an in-place operation, which means the processed data are stored in the currentprocno. In special cases, however, in-place operation is not possible and the processed data must be stored in a differentprocno.ftndwill prompt the user for the outputprocno. When processing is finished, the display will automatically change to the destination PROCNO. Whether or not in-place operation is possible depends on the direction being processed and the zero-filling conditions. In-place operation is done:   In the first direction: always  In the second direction: always as long as all directions are processed with one command, e.g. withftnd 0.  In the third, fourth etc. directions: if at least single zero filling (SI ≥ TD and (STSI = 0 or STSI ≥ TD)). Note that if aprocnois specified on the command line, it is used, i.e. the processed data of the last two directions are stored there. Restrictions nD processing The commandftndhas the following restrictions:   Raw and processed data have the same dimensionality, i.e. the values of the status parameters PARMODE and PPARMOD must be the same. Note that 2D processing commands likexfbalso work on datasets with different raw and processed data dimensionality, e.g. 3D raw and 2D processed data.  If dimension > 3 and the acquisition mode (acquisition status parameter FnMODE) is QF in one direction, it must be QF in all directions. In other words, you cannot process mixed single detection\/hypercomplex data for dimension > 3.  For data of dimension ≥ 5D, only the natural acquisition order (AQSEQ = 0) is supported.  Simultaneous echo-antiecho not supported; the acquisition status parameter FnMODE must not be echo-antiecho in more than 1 direction. Note that the values of parameters which use a predefined list are stored as integers. The first value of the list is always stored as 0, the second value as 1 etc. The table below shows the values of the parameter PH_mod as an example:      Parameter value  Integer stored in the proc(s) file   no  0   pk  1   mc  2   ps  3  INPUT PARAMETERS F4, F3, F2 and F1 parameters Set by the user withedpor by typingsi,stsretc.: SI - size of the processed data STSR - strip start: first output point of strip transform STSI - number of output points of strip transform TDeff - number of raw data points to be used for processing TDoff - first point of the FID used for processing (default 0) FCOR - first (FID) data point multiplication factor (0.0-2.0, default 0.5) REVERSE - flag indicating to reverse the spectrum BC_mod - FID baseline correction mode BCFW - filter width for BC_mod = sfil or qfil COROFFS - correction offset for BC_mod = spol\/qpol or sfil\/qfil ME_mod - FID linear prediction mode NCOEF - number of linear prediction coefficients LPBIN - number of points for linear prediction TDoff - number of raw data points predicted for ME_mod = LPb* WDW - FID window multiplication mode LB - Lorentzian broadening factor for WDW = em or gm GB - Gaussian broadening factor for WDW = gm, sinc or qsinc SSB - Sine bell shift for WDW = sine, qsine, sinc or qsinc TM1, TM2 - limits of the trapezoidal window for WDW = trap PH_mod - phase correction mode PHC0 - zero order phase correction value for PH_mod = pk PHC1 - first order phase correction value for PH_mod = pk Set by the acquisition, can be viewed withdpaorsaq_modetc.: TD - time domain; number of raw data points F4 parameters Set by the user withedpor by typingaqorder,pknletc.: AQORDER - Acquisition order PKNL - group delay compensation (Avance) or filter correction (A*X) Set by the acquisition, can be viewed withdpaorsaq_modetc.: AQ_mod - acquisition mode (determines the status FT_mod) AQSEQ - acquisition sequence (3-2-1 or 3-1-2) BYTORDA - byteorder or the raw data NC - normalization constant F3, F2 and F1 parameters Set by the acquisition, can be viewed withdpaor by typingsfnmodeetc.: FnMODE - Fourier transform mode OUTPUT PARAMETERS F4, F3, F2 and F1 Can be viewed withdppor by typingssi,sstsietc.: SI - size of the processed data STSR - strip start: first output point of strip transform STSI - strip size: number of output points of strip transform TDeff - number of raw data points that were used for processing TDoff - first point of the FID used for processing (default 0) XDIM - subcube size FT_mod - Fourier transform mode FTSIZE - Fourier transform size F4 parameters Can be viewed withdppor by typingssi,stdeffetc.: AQORDER - Acquisition order YMAX_p - maximum intensity of the processed data YMIN_p - minimum intensity of the processed data S_DEV - standard deviation of the processed data NC_proc - intensity scaling factor BYTORDP - byte order of the processed data F3, F2 and F1 parameters Can be viewed withdppor by typings mc2etc.: MC2 - Fourier transform mode INPUT FILES For 4D data: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ ser- raw data acqus- F4 acquisition status parameters acqu2s- F3 acquisition status parameters acqu3s- F2 acquisition status parameters acqu4s- F1 acquisition status parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ proc- F4 processing parameters proc2- F3 processing parameters proc3- F2 processing parameters proc4- F1 processing parameters For 3D dataproc4sdoes not exist. For data of dimension n where n ≥ 5 the additional files proc5,...,etc. exist. OUTPUT FILES For 4D data: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 4rrrr- processed 4D data procs- F4 processing status parameters proc2s- F3 processing status parameters proc3s- F2 processing status parameters proc4s- F1 processing status parameters For 3D data, the output data file is3rrrwhereasproc4sdoes not exist. For data of dimension n where n ≥ 5, processed data files are namednrandni, e.g.5r,5i,6r,6ietc. and the additional files proc5s,..., etc. exist. SEE ALSO absnd,lpnd,pknd,projcbp, projcbn, sumcb,projplp, projpln, sumpl  "],["3278842379","lpnd","3278842379.html","",null," NAME lpnd - nD linear prediction DESCRIPTION The commandlpndperforms a linear prediction of data with dimension ≥3D. It takes one argument, the direction to be processed. If no argument is specified on the command line, it is requested:    lpndworks on data that have already been Fourier transformed in the specified direction, e.g. withftnd. Since linear prediction is normally performed on a unfiltered FID, the data should first be processed withftndwith WDW = no, and then withlpndwhile WDW is set to the desired window function. lpndperforms the following steps in the specified direction:   Inverse Fourier transform (if imaginary data do not exist, they are automatically created with Hilbert transform).  Regular processing including:   Linear prediction according to ME_mod, NCOEF  Window multiplication according to WDW  Fourier transform Linear prediction is a valuable method for improving the resolution of nD data with small TD values and often truncated FIDs. The effect of linear prediction in one direction can, however, be distorted by modulations introduced by other, untransformed, directions. Therefore, it is a good idea to first process the data in all directions and then performlpnd. This entire procedure, including the correct window handling, is automatically performed by the commandftnddlp(delayed linear prediction). However, if you want both backward and forward prediction, the latter must be done withlpnd. In this case, you have to perform the following steps:   Backward prediction withftndwhile ME_mod=LPbr or LPbc and WDW=no.  Forward prediction withlpndwhile ME_mod=LPfr or LPfc and WDW set to the desired window function. For more information, see the description offtnd. INPUT AND OUTPUT PARAMETERS Seeftnd INPUT FILES For 4D data: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 4rrrr- processed 4D data proc- F4 processing parameters proc2- F3 processing parameters proc3- F2 processing parameters proc4- F1 processing parameters For 3D data, the input data file is3rrrwhereas theproc4does not exist. For data of dimension n where n ≥ 5, input data files are namednrandni, e.g.5r,5i,6r,6ietc. OUTPUT FILES For 4D data: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 4rrrr- processed 4D data procs- F4 processing status parameters proc2s- F3 processing status parameters proc3s- F2 processing status parameters proc4s- F1 processing status parameters For 3D data, the output data file is3rrrwhereasproc4sdoes not exist. For data of dimension n where n ≥ 5, output data files are namednrandni, e.g.5r,5i,6r,6ietc. SEE ALSO ftnd  "],["3278829963","mcnd","3278829963.html","",null," NAME mcnd - magnitude calculation on nD data DESCRIPTION The commandmcndcalculates the magnitude spectrum of a nD dataset. The intensity i is replaced by its absolute value according to the formula:  where R and I are the real and imaginary part of the spectrum respectively. The imaginary part of nD QF datasets is kept in a separate file in 3iii for 3D data in 4iii for 4D data in 5i for 5D data in 6i for 6D data when processing the last direction of a nD QF dataset. PH_mod in this direction is usually set to mc. This leads to a magnitude calculation after Fourier transform and the file holding imaginary data is removed. With themcndcommand the magnitude calculation can be done in a separate processing step, especially if PH_mod in the last processing direction was not set to mc or ps. If the commandmcndis applied to hypercomplex nD datasets imaginary data are calculated internally by a Hilbert transform. INPUT FILES 3rrrr,3iii- for 3D data 4rrrr,4iiii- for 4D data 5r,5i- for 5D data 6r,6i- for 6D data OUTPUT FILES auditp.txt 3rrr- for 3D data 4rrrr- for 4D data 5r- for 5r data 6r- for 6D data SEE ALSO mc,ps,apk, apks, apkm, apkf, ph,trf, trfp  "],["3278846859","pknd","3278846859.html","",null," NAME pknd - nD phase correction DESCRIPTION The commandpkndperforms aphase correction of data of dimension ≥3D, applying the values of PHC0 and PHC1. It takes one argument, the direction to be corrected. If no argument is specified on the command line, it is requested:    Before you executepknd, the phase values must first be determined, for example on a 2Dplane. You can do that by typingxfbon the nD data to process a plane, do a phase correction on the resulting the 2D dataset and store the phase values in the nD dataset. Note that phase correction normally requires the existence of imaginary data. Usually, however these do not exist for data of dimension ≥ 4. Therefore,pkndautomatically creates temporary imaginary data using Hilbert transform. Actually the command processes 2D planes of an nD dataset, performing a series ofxht2-xf2porxht1-xf1commands. On 3D data, the commandspknd3,pknd2andpknd1are equivalent totf3p,tf2pandtf1p, respectively. INPUT PARAMETERS Set by the user withedpor by typingphc0,phc1etc. PHC0 - zero order phase correction value (frequency independent) PHC1 - first order phase correction value (frequency dependent) OUTPUT PARAMETERS Can be viewed withdppor by typingsphc0,sphc1etc.: PHC0 - zero order phase correction value (frequency independent) PHC1 - first order phase correction value (frequency dependent) INPUT FILES For 4D data: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 4rrrr- processed 4D data proc- F4 processing parameters proc2- F3 processing parameters proc3- F2 processing parameters proc4- F1 processing parameters For 3D data, the input data file is3rrrwhereas theproc4does not exist. For data of dimension n where n ≥ 5, input data files are namednrandni, e.g.5r,5i,6r,6ietc. OUTPUT FILES For 4D data: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 4rrrr- processed 4D data procs- F4 processing status parameters proc2s- F3 processing status parameters proc3s- F2 processing status parameters proc4s- F1 processing status parameters For 3D data, the output data file is3rrrwhereasproc4sdoes not exist. For data of dimension n where n ≥ 5, output data files are namednrandni, e.g.5r,5i,6r,6ietc. SEE ALSO ftnd,tf3p, tf2p, tf1p,xfbp, xf2p, xf1p,xht2, xht1  "],["3278851339","projcbp, projcbn, sumcb","3278851339.html","",null," NAME projcbp - Calculate positive 3Dprojection projcbn - Calculate negative 3Dprojection sumcb - Calculate sum 3D projection DESCRIPTION The commandsprojcbp,projcbnandsumcbcalculate the positive, negative and sum 3D projection, respectively, from a dataset of dimension ≥ 4. They require take up to 5 arguments:   <cube orientation>: 234, 134, 124, ..., 432, 321 etc.  <first cube>: the first cube included in the calculation  <last cube>: the last cube included in the calculation  <dest. procno>: theprocnowhere the 3D output data are stored  xdim :sets the subcube sizes according to XDIM (optional)  n :prevents the destination dataset from being displayed\/activated (optional) Here is an example of the usage of a 3D projection command: projcbp 234 1 32 999 n Calculates the positive F2-F3-F4 3D projection of cube 1 to 32 along the F1 direction, stores it under PROCNO 999 but does not change the display to the output data. Instead of specifying the first and last cube, you can also use the argumentallfor all cubes. For example: projcbp 234 all 10 Calculates the positive F2-F3-F4 3D projection of all cubes along F1 and stores it under PROCNO 10. Missing arguments (except for the optional ones) will be prompted for. For example, enteringprojcbpwithout any arguments will display the dialog:    Note the following aspects:   The maximum first and last cube is determined by the size of the data in the direction not included cube orientation; i.e. the direction along which the projection is calculated.  XDIM is a processing parameter which must be set in each direction included cube orientation when with thexdimargument is used.  The numerical arguments must be specified in the above order, whereas the argumentsall,xdimandncan be specified at any position. INPUT FILES For a 4D dataset: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 4rrrr- real processed 4D data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr- real processed 3D data procs- F3 processing status parameters proc2s- F2 processing status parameters proc3s- F1 processing status parameters auditp.txt- processing audit trail SEE ALSO projplp, projpln, sumpl  "],["3278855819","rcb","3278855819.html","",null," NAME rcb - Read cube from data ≥ 4D and store as 3D data DESCRIPTION The commandrcbreads a cube from processed data of dimension ≥ 4. It stores the extracted cube in a differentprocnoas a 3D dataset.    rcbtakes up to five arguments: <cube axis orientation>: 234, 134, 124, ..., 432, 321 etc. The digits refer to the F4, F3, F2 and F1 axes of the 4D data. Note that the order of the three digits is relevant:   The first digit is the 4D axis that corresponds to the 3D-F1 axis.  The second digit is the 4D axis that corresponds to the 3D-F2 axis.  The last digit is the 4D axis that corresponds to the 3D-F3-axis. This means that for values like 234, 134, 124 etc. the axis order or the 3D cube and the 4D dataset are the same. For values like 432, 423, 143 etc., they are different. <cube number>: 1 - SI SI is the 4D size in the direction orthogonal to the cube orientation <procno>: Destination 3Dprocno(source 4Dprocnoifrcbis entered on the destination 3D dataset) xdim :optional argument Sets the subcube sizes according to the processing parameter XDIM in the respective directions. This parameter must be set in the source 4D dataset beforercbis executed. n :optional argument Prevents the destination dataset from being displayed\/activated Arguments which are not specified on the command line will be prompted for, except forxdimandnargument. rcbcan be entered on the source 4D dataset or, if this already exists, on the destination 3D dataset. The number of required arguments is different (see below). rcbentered on a source 4D dataset In this case,rcbprompts the user for three arguments. Alternatively, these can be entered on the command line. Here are some examples: rcb Prompt the user for thecube axis orientation, thecube numberanddestination 3D procnoand read the cube accordingly. rcb23410999 Read F2-F3-F4 cube 10 and store it inprocno999. rcb32410999 Read F2-F3-F4 plane 10 and store it inprocno999, exchanging the F2 and F3 axes rcb12464101 xdim Read F1-F2-F4 plane 64 with subcube sizes according to the respective XDIM values and store it inprocno101. rcb12464 Read F1-F2-F4 plane 64, prompt the user for the destinationprocno rcb214110 n Read an F1-F2-F4 plane number 1 and store it inprocno10, exchanging the F2 and F1 axes. Do not display\/activate the destination dataset. rcbentered on a destination 3D dataset This is typically done on a 3D dataset which is a cube extracted by a previousrcbcommand, which was entered on the source 4D dataset. In that case,rcbrequires only one argument; thecube number.By default, the same cubeaxis orientationandsource 4D dataset (procno)are used as with the previousrcbcommand (as defined in theused_fromfile of the 3D dataset). You can, however, use two or three arguments to specify a different cubeaxis orientationand\/or4D source procno. On a regular 3D dataset (not a plane from a 3D),rcbrequires three arguments. Here are some examples ofrcbexecuted on a 3D dataset, where the 3D dataset is a cube from a 4D dataset: rcb Prompt the user for thecube number. Use thecube axis orientationandsource 4D procnoas defined in the current 3D dataset. rcb11 Read cube 11. Use thecube axis orientationandSource 4D procnoas defined in current 3D dataset. rcb12311 Read F1-F2-F3 plane 11. Use thesource 4D procnoas defined in current 3D dataset. rcb123112 Read F1-F2-F3 plane 11 from the 4D dataset underprocno2 As described above, thercbargumentcube axis orientationdetermines whether the axes are exchanged. Axes exchange is sometimes required to match nuclei when you compare a 4D cube with a 3D dataset. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 4rrrr,4iiii- processed 4D data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr,3iii- processed 3D data auditp.txt- processing audit trail used_from- data path of the source 4D data and the cube axis orientation SEE ALSO rpl,wpl,rtr,wtr  "],["3278878219","rpl","3278878219.html","",null," NAME rpl - Read plane from data ≥ 3D and store as 2D data DESCRIPTION The commandrplreads aplane from processed data with dimension ≥ 3D and stores it as a 2D dataset in a differentprocno. rpltakes up to five arguments. As an example we take a plane read from a 3D dataset: <planeaxisorientation>: 23, 13, 12, 32, 31 or 21 The digits refer to the F3, F2 and F1 axes of the 3D data. Note that the order of the two digits is relevant:   the first digit is the 3D axis that corresponds to the 2D-F1 axis  the last digit is the 3D axis that corresponds to the 2D-F2-axis This means that for the values 21, 31 and 32, the axes are exchanged, storing rows as columns and vice versa (see below). <plane number>: 1 - SI SI is the 3D size in the direction orthogonal to the plane orientation <procno>: Destination 2Dprocno(source 3Dprocnoifrplis entered on the destination 2D dataset) <inmem>: optional argument for usage in AU programs only Improves performance by data caching. Caution: nD data must not be modified by any command other thanwplbetween two consecutiverplinmemorwplinmemcommands. n :optional argument Prevents the destination dataset from being displayed\/activated Obligatory arguments which are not specified on the command line will be prompted for. rplcan be entered on the source 3D dataset or, if it already exists, on the destination 2D dataset. The number of required arguments is different (see below). rplentered on a source 3D dataset In this case,rplprompts the user for three arguments. Alternatively, these can be entered on the command line. Here are some examples: rpl Prompt the user for theplane axis orientation, theplane numberandsource 3D procnoand read the plane accordingly. rpl2310999 Read F2-F3 plane 10 and store it inprocno999. rpl3210999 Read F2-F3 plane 10 and store it inprocno999, exchanging the F2 and F3 axes. rpl1264101 Read F1-F2 plane 64 and store it inprocno101. rpl1264 Read F1-F2 plane 64, prompt the user for thedestination procno rpl31110n Read an F1-F3 plane number 1 and store it inprocno10, exchanging the F1 and F3 axes. Do not display\/activate the destination dataset. rplentered on a destination 2D dataset This is typically done on a 2D dataset which is a plane extracted by a previousrplcommand, which was entered on the source 3D dataset. In that case,rplrequires only one argument; theplane number.By default, the same plane axis orientationandsource 3D dataset (procno)are used as with the previousrplcommand (as defined in theused_fromfile of the 2D dataset). You can, however, use two or three arguments to specify a different plane axis orientationand\/or3D source procno. On a regular 2D dataset (not a plane from a 3D),rplrequires three arguments. Here are some examples ofrplexecuted on a 2D dataset, where the 2D dataset is a plane from a 3D dataset: rpl Prompt the user for the plane number, use theplane axis orientationandsource 3D procnoas defined in the current 2D dataset and read the plane accordingly. rpl11 Read plane 11. Use theplane axis orientationandsource 3D procnoas defined in current 2D dataset. rpl 31 11 Read F1-F3 plane 11, exchanging the F1 and F3 axes. Use thesource 3D procnoas defined in current 2D dataset. rpl 13 11 2 Read F1-F3 plane 11 from the 3D dataset underprocno2 As described above, therplargumentplane axis orientationdetermines whether the axes are exchanged. This is sometimes required to match nuclei when you compare a 3D plane with a 2D dataset. Example: you have a 3D NOESYHSQC (F3-1H, F2-13C, F1-1H) and want to compare an F2-F1 plane with a 2D HSQC (F2-1H, F1-13C). Now compare the following actions: rpl 12: The plane is stored as a 2D dataset with F2-13C, F1-1H which cannot be directly compared with the a HSQC. rpl 21: The plane is stored as a 2D dataset with F2-1H, F1-13C which can be directly compared with the a HSQC. In special cases,rplresults in a 2D dataset which is not Fourier transformed in F2. This occurs, for example, if you runrpl12on a 3D dataset which has only been transformed in F3.rplunshuffles the output data, storing the odd and even points in separate data files (2rrand2ir). As a result the size in F2 (parameter SI) is only half the size of the corresponding direction in the 3D dataset. If, for some reason, you want keep the same size, you can userplwith the optionkeepsize. The output data are then zero filled once in F2. Here is an example: rpl 12 1 10 keepsize Note that a plane read withkeepsizecannot be written back to the source dataset because the sizes do not match. The behaviour of the commandrplis similar to the commandsrsrandrsc, in the sense that it can be entered from the source and destination dataset. On a data with dimension > 3,rplworks the same as on a 3D dataset, except that there are more plane axis orientations. For example on 4D dataset, possible orientations are34,24,14,23,13,12,43,42,41,32,31and21. For an example if theinmemoption, see the AU programift3d. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr,3irr,3rir,3rri,3iii- processed data (rplon 3D data) 4rrrr,4iiii- processed data (rplon 4D data) OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr,2ir,2ri,2ii- processed 2D data auditp.txt- processing audit trail used_from- data path of the source 3D data and the plane number SEE ALSO wpl,rtr,wtr,rcb,wser,wserp,rser2d "],["3278860299","rtr","3278860299.html","",null," NAME rtr - Read trace from data ≥ 2D and store as 1D data DESCRIPTION The commandrtrreads a trace from processed data with dimension ≥ 2D and stores it as a 1D dataset. rtrtakes up to four arguments. As an example we take a trace read from a 3D dataset: <axis orientation>: 1, 2 or 3 The digit refers to the F3, F2 and F1 axis of the 3D data. <trace number>: 1 - MAX Where MAX is the product of the SI value in the directions orthogonal to the trace orientation. <procno>: Destination 1Dprocno(source 3Dprocnoifrtris entered on the destination 1D dataset) n :optional argument. Prevents the destination dataset from being displayed\/activated Obligatory arguments that are not specified on the command line will be prompted for. rtrcan be entered on the source 3D dataset or, if this already exists, on the destination 1D dataset. The number of required arguments is different (see below). rtrentered on a source 3D dataset In this case,rtrprompts the user for three arguments. Alternatively, these can be entered on the command line. rtr Prompt the user for theaxis orientation,trace numberanddestination procnoand read the trace accordingly. rtr 3 10 999 Read F3 trace 10 and store it inprocno999. rtr 1 1 10 n Read F1 trace 1 and store it inprocno10. Do not display\/activate the destination dataset. rtrentered on a destination 1D dataset This is typically done on a 1D dataset which is a trace extracted by a previousrtrcommand, which was entered on the source 3D dataset. In that case,rtrrequires only one argument; thetrace number.By default, the sameaxis orientationandsource 3D dataset (procno)are used as with the previousrtrcommand (as defined in theused_fromfile of the 1D dataset). You can, however, use two or three arguments to specify a differentaxis orientationand\/or3D source procno. On a regular 1D dataset (not a trace from a 3D),rtrrequires three arguments. Here are some examples ofrtrexecuted on a 1D dataset which is a trace from a 3D dataset: rtr Prompt the user for thetrace number, use theaxis orientationandsource 3D procnoas defined in the current 1D dataset and read the trace accordingly. rtr 11 Read trace 11. Use theaxis orientationandsource 3D procnoas defined in current 1D dataset. rtr 3 11 2 Read F3 trace 11 from the 3D dataset underprocno2 Note that on 2D data the commandrtrworks likersrandrsc, except that the trace direction can be freely chosen. Furthermore,rtralways stores the 1D output data in a differentprocnoof the same dataset whereasrsrandrsccan store data in the dataset ~TEMP. On 4D or higher dimensional datasets,rtrworks the same as on a 3D dataset, except that there are more axis orientations. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr,2ir,2ri,2ii- processed data (rtron 2D data) 3rrr,3irr,3rir,3rri,3iii- processed data (rtron 3D data) 4rrrr,4iiii- processed data (rtron 4D data) OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data auditp.txt- processing audit trail used_from- data path of the source data and the trace number SEE ALSO wtr,rpl,wpl,rcb,wser,wserp "],["3278824331","wcb","3278824331.html","",null," NAME wcb - Write 3D data to a cube of data ≥ 4D DESCRIPTION The commandwcbreplaces a cube of processed data with dimension ≥ 4D with a 3D processed dataset. It is usually, but not necessarily, used to write back a cube that was extracted withrcb. This cube can be modified and\/or written back to a different cube number. wcbtakes up to three arguments. As an example, we take a cube written to a 4D dataset: <cube axis orientation> : 234, 134, 124, 123, 432, ..., 321 etc. The digits refer to the F4, F3, F2 and F1 axes of the 4D data. Note that the order of the three digits is relevant: the first digit is the 4D axis that corresponds to the 3D-F1 axis the last digit is the 4D axis that corresponds to the 3D-F3-axis <cube number> : 1 - SI SI is the 4D size in the direction orthogonal to the cube axis orientation <procno> destination 4D procno (source 4D procno ifwcbis entered on the destination 3D dataset). wcbcan be entered on the 3D source dataset or on the destination 4D dataset. The number of required arguments is different (see below). wcb entered on the source 3D dataset In this case,wcbprompts the user for two arguments only, the cube number and the 4D destination procno. The cube axis orientation is taken from the 3D dataset (used_from file). The two arguments can also be specified on the command line. If, however, you specify three arguments, the plane axis orientation is taken from the first argument rather than from the 3D dataset. Examples: wcb prompt the user for the cube number and destination 4D procno, take the cube axis orientation from the current 3D dataset and write the cube accordingly. wcb 11 1 write the current 3D data to cube 11 of the 4D dataset in procno 1. Take the cube axis orientation from the current 2D dataset. wcb 432 11 2 write the current 4D data to F2-F3-F4 cube number 11 of the 4D data in procno 2, exchanging the F2 and F4 axes. Note that if the source 3D dataset does not contain aused_fromfile, for example because it is not an extracted plane,wcbwill prompt the user for the cube axis orientation. Entering wcb on the destination 4D dataset In this case,wcbprompts the user for three arguments. Alternatively, these can be entered on the command line. Examples: wcb 234 10 999 Write the 3D data in procno 999 to F2-F3-F4 cube 10 of the current 4D data. wcb 234 32 101 Write the 3D data in procno 101, to the F2-F3-F4 cube 32 of the current 4D data wcb 234 Prompt the user for the procno of the source 3D dataset and the cube number. Write the 3D dataset to the specified F2-F3-F4 cube accordingly. Entering wcb on a 5D dataset On a data with dimension > 4,wcbworks the same as on a 4D dataset, except that there are more cube axis orientations. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr, 3iii- processed 3D data used_from- data path of the source 4D data and the cube number OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 4rrrr, - processed data (wcbon 4D data) 5r,5i- processed data (wcbon 5D data) auditp.txt- processing audit trail SEE ALSO rcb,rpl,rtr,wtr,rser,wser,wserp "],["3278864779","wpl","3278864779.html","",null," NAME wpl - Write 2D data to a plane of data ≥ 3D DESCRIPTION The commandwplreplaces aplane of processed data with dimension ≥ 3D with a 2D processed data set. It is usually, but not necessarily, used to write back a plane that was extracted withrpl. This plane can be modified and\/or written back to a different plane number.    wpltakes up to four arguments. As an example we take a plane written to a 3D data set: <planeaxisorientation>: 12, 13, 23, 21, 31 or 32 The digits refer to the F3, F2 and F1 axes of the 3D data. Note that the order of the two digits is relevant:   the first digit is the 3D axis that corresponds to the 2D-F1 axis  the last digit is the 3D axis that corresponds to the 2D-F2-axis This means that for the values 21, 31 and 32, the axes are exchanged, i.e. rows are stored as columns and vice versa (see below). <planenumber>: 1 - SI SI is the 3D size in the direction orthogonal to the plane axis orientation <procno> Destination 3Dprocno(source 3Dprocnoifwplis entered on the destination 2D data set) <inmem>: optional argument for usage in AU programs only Improves performance by data caching. Caution: nD data must not be modified by any command other thanwplbetween two consecutiverplinmemorwplinmemcommands. n Do not write imaginary data. Only the real data plane is written to the real destination data. This option preventswplto abort when nD destination data exist, but 2D source data do not. Caution: this options makes the nD imaginary data inconsistent. wplcan be entered on the 2D source dataset or on the destination 3D data set. The number of required arguments is different (see below). wplentered on the source 2D data set In this case,wplprompts the user for two arguments only, theplane numberandthe3D destination procno. Theplane axis orientationis taken from the 2D data set (used_fromfile). The two arguments can also be specified on the command line. If, however, you specify three arguments, theplane axis orientationis taken from the first argument rather than from the 2D data set. Examples: wpl Prompt the user for theplane numberanddestination 3D procno, take theplane axis orientationfrom the current 2D data set and write the plane accordingly. wpl 11 1 Write the current 2D data to plane 11 of the 3D dataset inprocno1. Take theplane axis orientationfrom the current 2D data set. wpl 31 11 2 Write the current 2D data to F1-F3 plane number 11 of the 3D data inprocno2, exchanging the F1 and F3 axes. Note that if the source 2D data set does not contain aused_fromfile, for example because it is not an extracted plane,wplwill prompt the user for theplane axis orientation. Enteringwplon the destination 3D dataset In this case,wplprompts the user for three arguments. Alternatively, these can be entered on the command line. Examples: wpl 23 10 999 Write the 2D data inprocno999 to F2-F3 plane 10 of the current 3D data. wpl 12 32 101 Write the 2D data inprocno101, to the F1-F2 plane 32 of the current 3D data wpl 12 Prompt the user for theprocnoof the source 2D dataset and the plane number. Write the 2D dataset to the specified F1-F2 plane accordingly. Enteringwplon a 4D dataset On a data with dimension > 3,wplworks the same as on a 3D data set, except that there are more plane axis orientations. For example on 4D data set, possible orientations are12, 13, 14, 23, 24, 34, 21, 31, 32, 41, 42and43. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr,2ir,2ri,2ii- processed 2D data used_from- data path of the source 3D data and the plane number OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr,3irr,3rir,3rri,3iii- processed data (wplon 3D data) 4rrrr,4iiii- processed data (wplon 4D data) auditp.txt- processing audit trail SEE ALSO rpl,rtr,wtr,rcb,wser,wserp  "],["3278869259","wtr","3278869259.html","",null," NAME wtr - Write 1D data to a trace of data ≥ 2D DESCRIPTION The commandwtrreplaces a trace of processed data with dimension ≥ 2D with a 1D processed dataset. It is usually, but not necessarily, used to write back a trace that was extracted withrtr. This trace can be modified and\/or written back to a different trace number. wtrtakes up to three arguments. As an example we take a trace written to a 3D dataset: <axis orientation>: 1, 2 or 3 The digit refer to the F3, F2 and F1 axes of the 3D data. <trace number>: 1 - MAX Where MAX is the product of the SI value in the directions orthogonal to the trace orientation <procno> Destination 3Dprocno(source 1Dprocnoifwtris entered on the destination 3D dataset) wtrcan be entered on the 1D source dataset or on the destination 3D dataset. The number of required arguments is different (see below). wtrentered on the source 1D dataset In this case,wtrprompts the user for two arguments only, thetrace numberandthe1D destination procno. Theaxis orientationis taken from the 3D dataset (used_fromfile). The two arguments can also be specified on the command line. If, however, you specify three arguments, theaxis orientationis taken from the first argument rather than from the 3D dataset. Examples: wtr Prompt the user for thetrace numberanddestination 3D procno, take theaxis orientationfrom the current 1D dataset and write the trace accordingly. wtr 11 1 Write the current 1D data to trace 11 of the 3D dataset inprocno1. Take theaxis orientationfrom the current 1D dataset. wtr 3 11 2 Write the current 1D data to F3 trace number 11 of the 3D data inprocno2. Note that if the source 1D dataset does not contain aused_fromfile, for example because it is not an extracted trace,wtrwill prompt the user for theaxis orientation. Enteringwtron the destination 3D dataset In this case,wtrprompts the user for three arguments. Alternatively, these can be entered on the command line. Examples: wtr 2 10 999 Write the 1D data inprocno999 to F2 trace 10 of the current 3D data. wtr 1 32 101 Write the 1D data inprocno101, to the F1 trace 32 of the current 3D data. wtr 1 Prompt the user for the trace number and theprocnoof the source 1D dataset. Write the 1D dataset to the specified F1 trace accordingly. Enteringwtron a 4D dataset On a data with dimension > 3,wtrworks the same as on a 3D dataset, except that there are more axis orientations. For example on 4D dataset, possible orientations are1, 2, 3and4. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data used_from- data path of the source nD data and the trace number OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr,2ir,2ri,2ii- processed data (wtron 2D data) 3rrr,3irr,3rir,3rri,3iii- processed data (wtron 3D data) 4rrrr,4iiii- processed data (wtron 4D data) auditp.txt- processing audit trail SEE ALSO rtr,rpl,wpl,rcb,wser,wserp "],["3278882699","Analysis Commands","3278882699.html","",null," This chapter describes TopSpin analysis commands for 1D, 2D and 3D data. Although they do not really process (manipulate) the data, they are part of the processing part of TopSpin. Some of them merely interpret the data and display their output, i.e. they do not change the dataset in any way. Others change parameters (likesrefandsino) or create new files (likeedtiandpps). None of them, however, change the processed data. "],["3279046923","autocalib","3279046923.html","",null," NAME autocalib – automatic calibration (2D)  DESCRIPTION The commandautocalibalign 2D and 1D datasets relative to a reference (the first dataset given in the call). As a requirement, the reference has to be a 2D dataset.  OUTPUT PARAMETERS As a consequence of the shifting in the alignment the following parameter will be adapt (except for the reference): SR – Spectrum reference frequency  USAGE autocalib F1 F2 “<path_reference>” “<path_data1>” “<path_data2>” ….  F1 \/ F2 – determine the direction for the alignment <path_reference> - the first given dataset is the reference as a default (has to be 2D) <path> - all paths have to be given in the following absolute format: <path-to-data>\\<expno>\\pdata\\<procno>  SEE ALSO The interactive usage in the TopSpin User Manual – 2D Calibration in Multiple Display. "],["3278929547","daisy","3278929547.html","",null," NAME daisy - 1D simulation program DESCRIPTION TopSpin offers the Daisy package for simulating spectra based on chemical shifts and coupling constants. Daisy supports the following input data:   TopSpin multiplet analysis package  Windaisy  HAM  ACD  Perch Daisy can be started as follows:ClickApplications | Simulate | Simulate\/Iterate 1D Spectrum[daisy]    For more information ondaisy: ClickHelp | Manuals| Analysis andSimulation|Daisy  "],["3278937099","daisyguide","3278937099.html","",null," NAME daisyguide - Daisy tutorial DESCRIPTION The commanddaisyguideopens the Daisy tutorial:    This guides you through the Daisy program. Note that this can also be started with the command daisy. For more information ondaisyguide: ClickHelp | Manuals | Analysis and Simulation | Daisy SEE ALSO daisy  "],["3278914443","dcon2d, dcon","3278914443.html","",null," NAME dcon2d -Gaussian,Lorentzian ormixeddeconvolution (2D) dcon - Open deconvolution dialog box (1D,2D) DESCRIPTION The commanddcon2dperforms deconvolution, fitting a Gaussian, Lorentzian or mixed function to the peaks in the displayed region. Before you start this command, you must select the desired region and perform peak picking (commandpp). Then enter the commanddconordcon2dto open the dialog box.    This offers several options, each of which selects a certain command for execution. Use Lorentzian shape This option deconvolves the spectrum by fitting a Lorentzian function to the peaks. It is typically used foroverlapping peaks with aLorentzian lineshape to determine the ratio of each individual peak. Use Gaussian shape This option deconvolves the spectrum by fitting a Gaussian function to the peaks. It is typically used foroverlapping peaks with aGaussian lineshape to determine the ratio of each individual peak. Use mixed shape This option deconvolves the spectrum by fitting a mixed Lorentzian\/Gaussian function to the peaks. It requires the parameterGaussian percentage for mixed shapeto be set. A mixed shape deconvolution is typically used for spectra which cannot be approximated by a pure Lorentzian or a pure Gaussian lineshape. View fitted parameters of the last deconvolution This option shows the fitted parameters and peaks of the last performed deconvolution on the current dataset. View calculated spectrum of the last deconvolution This option shows the graphical result of the last deconvolution; the original and the deconvolved spectrum in multi-display mode. The result of deconvolution is:   The quality of the fit expressed by the minimized chi-square value.  A list of peaks within the selected region, and for each peak its frequency, width, intensity and integral. This list is displayed on the screen.  The fitted line shape, which is shown together with the original spectrum in multi-display mode. NOTICE   Note that the deconvolution can be optimized for memory usage or speed. Furthermore, you can check the optionSave individual peak line shapesto store the deconvolution result for each peak in a separate procno. All resulting procnos are shown superimposed in multi-display mode. As such, each deconvolved peak can be separately scaled and shifted.  INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr- real processed 2D data peaklist.xml- peak list proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/1000\/ 2rr- deconvolved processed 2D data (first individual peak) dcon2dpeaks.txt- deconvolution parameters and peaks procs- processing status parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/1001\/ 2rr- deconvolved processed 2D data (second individual peak) dcon2dpeaks.txt- deconvolution parameters and peaks procs- processing status parameters etc. SEE ALSO gdcon, ldcon, mdcon, ppp, dconpl, dcon,mldcon  "],["3278922763","dosy2d","3278922763.html","",null," NAME dosy2d - Process DOSY dataset (2D) DESCRIPTION The commanddosy2dprocesses a 2D DOSY dataset. DOSY is a special representation of diffusion measurements. Instead of generating just numbers using the T1\/T2 fitting package (i.e. diffusion coefficients and error values), the DOSY processing gives pseudo 2D data, where the F1 axis displays diffusion constants rather than NMR frequencies. For more information ondosy: clickHelp | Manuals | Acquisition Application Manuals | Dosy INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ difflist- list of gradient amplitudes in Gauss\/cm <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr- 2D data processed in F2 only dosy- DOSY processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr- 2D processed data auditp.txt- processing audit trail SEE ALSO eddosy,dosy3d "],["3278887179","dosy3d","3278887179.html","",null," NAME dosy3d - Process DOSYdataset (3D) DESCRIPTION The commanddosy3dprocesses a 3D DOSY dataset. DOSY is a special representation of diffusion measurements. Instead of generating just numbers using the T1\/T2 fitting package (i.e. diffusion coefficients and error values), the DOSY processing gives pseudo 3D data where the F2 or F1 axis displays diffusion constants rather than NMR frequencies. For more information ondosy3d: ClickHelp | Manuals | Acquisition Application Manuals | Dosy INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ difflist- list of gradient amplitudes in Gauss\/cm  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr- 3D data which are processed in F3 and F2 or in F3 and F1 dosy- DOSY processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr- 3D processed data auditp.txt- processing audit trail SEE ALSO eddosy,dosy2d "],["3278944651","edstruc","3278944651.html","",null," NAME edstruc - Open the 2D Molecule Structure Editor DESCRIPTION The commandedstrucopens the 2DMolecule Structure Editor. Entering this command is equivalent to clicking theStructuretab in the 2D data window and clicking the button2D Editor.    A full description of the 2D Structure Editor package can be found under: Help | Manuals | Analysis and Simulation | 2D Structure Editor SEE ALSO jmol  "],["4221480971","vstrucs","4221480971.html","",null," NAME vstrucs – Visualize Structure Data (SD) files DESCRIPTION  2D Multi-Structure Viewer (vstrucs) The Multi-Structure Viewer is a viewer with several features to visualize Structure Data (SD) files:   The possibility of visualizing all structures in SD files.  Scroll through a large number of structure files and zoom into interesting ones.  Work with compressed files save disk space (e.g. .zip or .gz files downloaded from PubChem without decompression).   The editor provides a simple control with the following buttons:   Open a different SD structure file.  Zoom inor outto show fewer or more structures in the overview.  Toggle atom numbers on and off. The above screen shot has atom numbers enabled. The viewer supports the following structure file types: .mol, .sdf, .sdf.gz, .sdf.zip. Typevstrucsor clickApplications | Small molecules | 2D Multi-Structure Viewer (vstrucs). Select the structure file from the Explorer window. Once the editor is open, it is possible to change to other files by clicking theOpenbutton.            "],["3278903819","gdcon, ldcon, mdcon, ppp, dconpl, dcon","3278903819.html","",null," NAME gdcon -Gaussiandeconvolution (1D) ldcon -Lorentziandeconvolution (1D) mdcon -MixedGaussian\/Lorentzian deconvolution (1D) ppp - Generate peak list for deconvolution (1D) dconpl - Show result of last deconvolution (1D) dcon - Open deconvolution dialog box (1D,2D) DESCRIPTION Deconvolution commands can be entered on the command line or started from the deconvolution dialog box, which is opened with the commanddcon.    This offers several options, each of which selects a certain command for execution. Use Lorentzian shape This option selects the commandldconfor execution. It deconvolves the spectrum fitting a Lorentzian function to the peaks. It is typically used foroverlapping peaks with aLorentzian line shape to determine the ratio of each individual peak. Use Gaussian shape This option selects the commandgdconfor execution. It deconvolves the spectrum by fitting a Gaussian function to the peaks. It is typically used foroverlapping peaks with aGaussian line shape to determine the ratio of each individual peak. Use mixed shape, auto peak pick into filepeaklist This option selects the commandmdconautofor execution. It first picks the peaks for deconvolution and stores them in thepeaklistfile. Then it deconvolves the spectrum by fitting a mixed Lorentzian\/Gaussian function to these peaks. This command is typically used to deconvolve spectra which cannot be approximated by a pureLorentzian or a pureGaussian lineshape. Use mixed shape, use peaks from filepeaklist This option selects the commandmdconfor execution. It works likemdconauto, except that it uses an existingpeaklistfile. This file must have been created:   by executingmdconauto  by executingppp  by executingppsand exporting the peak table (Peaks tab in data window) to the filepeaklist. Generate peak list, no deconvolution This option selects the commandpppfor execution. It picks the peaks for deconvolution and stores the result in the filepeaklist.pppis implicitly executed bymdconauto. Re-Display peak list from last deconvolution This option selects the commanddconplfor execution. It shows the peak list (filedconpeaks.txt) which was created with the last deconvolution on the current dataset. Display the Lorentz\/Gauss curves of the last deconvolution This option selects the commanddconplvfor execution. It shows the individually fitted peaks and their sum. The deconvolution commands only work on the displayed region, as expressed by the parameters F1P and F2P. Furthermore, they select peaks according to thepeak picking parameters MI, MAXI and PC. They also evaluate the parameter AZFW, which determines the minimum distance between two peaks for them to be fitted independently. Peaks which are less than AZFW ppm apart, are considered to be overlapping. As a rule of the thumb, set AZFW to ten times the width at half height of the signal. The result of deconvolution is:   the quality of the fit expressed by the minimized chi-square value  a list of peaks within the plot region, and for each peak its frequency, width, intensity and area. This list is displayed on the screen.  the fitted lineshape which is shown together with the original spectrum in multi-display mode.  individually fitted peaks and their sum, as shown bydconplv All deconvolution commands can be started from the command line. In this case, they use the current values of the required parameters. Tailor Mixed Shape Deconvolution Use peak list created by regular peak picking Mixed deconvolution creates and uses its own peaklist. You can, however, force it: use the peaklist created with regular peak picking with the commandconvertpeaklist. To do that:   Perform peak picking, e.g. withpps.  Enterconvertpeaklistpeaklist  Entermdcon. Select fit parameters for each individual peaks The deconvolution fit parameters can be enabled\/disabled for each individual peak. To do that: Edit the filepeaklistin the PROCNO directory of the dataset. At the end of a peak entry, you can specify three flags for the three parameters to be optimized; chemical shift, half width and amplitude: 0 = optimize this parameter 1 = do not optimize this parameter Here is an example of a peaklist: H #frequency half width %gauss\/100. 3304.390 4.52 0.0 0 0 0 3289.368 2.26 0.0 1 1 1 3262.410 7.91 0.0 0 1 0 3216.022 4.52 0.0 0 0 1 Signal 1: All 3 Parameters are optimized (default) Signal 2: All three Parameters are not optimized Signal 3:chemical shift and amplitude are optimized, half width is not Signal 4: chemical shift and half width are optimized, amplitude is not INPUT PARAMETERS Set from thedcondialog box, withedpor by typingazfw,f1petc.: AZFW - minimum distance in ppm for peaks to be fitted independently F1P - low field (left) limit of the deconvolution region (= plot region) F2P - high field (right) limit of the deconvolution region (= plot region) MI -minimum relative intensity (cm) for peak picking MAXI -maximum relative intensity (cm) for peak picking PC -peak picking sensitivity INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r- real processed 1D data dconpeaks.txt- peak list (input ofdconpl) peaklist- peak list (input ofmdcon) proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r- real processed 1D data dconpeaks.txt- peak list (output ofldcon,gdcon,mdcon) peaklist- peak list (output ofpppandmdconauto) procs- processing status parameters USAGE IN AU PROGRAMS LDCON GDCON MDCON PPP USAGE IN AU PROGRAMS dcon2d For further information about deconvolution please look up the User Manual. SEE ALSO dcon2d, dcon,mldcon  "],["3278949899","int2d, int3d, int","3278949899.html","",null," NAME int2d - Calculate integrals (2D) int3d - Calculate integrals (2D) int - Open integral dialog box (1D, 2D, 3D) DESCRIPTION The commandint2dcalculates 2D integrals. It opens the following dialog box:    Here you can set the minimum threshold for integration. You can enter:   Enter the relative intensity: value between 0.0 and 1.0  Enter the absolute intensity: value between 0.0 and YMax_p (processing status parameter).  ClickSet to...and choose from one of the following options:   lowest contour level -value of the lowest contour level (seeedlev)  value stored in MI- value of the processing parameter MI (seeedp)  most recent MI used- value used by lastint2dcommand on any dataset If you enter a relative value, the absolute value is automatically adjusted and vice versa. Setting themost recent MI usedallows to compare integral value, e.g. of the NOE peak of a series of 2D spectra. Obviously, this only makes sense for spectra that are measured and processing under similar conditions. The calculated integrals will be marked in the data field and can be listed by clicking theIntegralstab. int3dis the same asint2d, except that it works on 3D data. Theintcommand can be used on 1D, 2D or 3D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. The following figure shows a region of peaks after peak picking.    The next figure shows the same region after 2D integration. Here you can see the integral labels and areas. The area color can be set in the user preferences (commandset) asColor of 3rd 1D spectrum.   INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr- real processed 2D data (input ofint2d) 3rrr- real processed 3D data (input ofint3d) OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ integ_points.txt- data points of integral regions integrals.txt- peaks, integral regions and integral values SEE ALSO li, lipp, lippf, int    "],["3278957451","jmol","3278957451.html","",null," NAME jmol - Open the Jmol molecule structure viewer DESCRIPTION The commandjmolopens theJmolmolecule structure editor.    A description of the Jmol Molecule Viewer can be found under the JmolHelpmenu, submenuUser Guide. INPUT PARAMETERS Set by the user withedaor by typingchemstr: CHEMSTR - molecule structure filename INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ <name> -molecule structure file acqu- TopSpin acquisition parameters <tshome>\/classes\/prop\/StructureSamples\/*- molecule structure files SEE ALSO edstruc  "],["3278965003","li, lipp, lippf","3278965003.html","",null," NAME li- List integrals (1D) lipp - List integrals and peaks within F1P-F2P (1D) lippf - List integrals and peaks of the full spectrum (1D) int - Open integral dialog box (1D, 2D, 3D) DESCRIPTION Integral commands can be started from the command line or from the integration dialog box.    The latter is opened with the commandint. This dialog box has several options, each of which selects a certain command for execution. Auto-find regions, integrate & display results This option executes the command sequenceabs-li. The commandabsdetermines the integral regions creating theintrngfile. The commandlicalculates the integral value for each integral region and shows the result in on the screen. Integrate existing regions and display results This option executes the commandli. This command calculates the integral value for each integral region and shows the result in on the screen. List peaks and integrals within the displayed region This option executes the commandlipp. It works likeli, except that it also performs peak picking and shows a list of integral regions and peaks within the region F1P - F2P. List peaks and integrals of the entire spectrum This option executes the commandlippf. It works likelipp, except that it only determines the integrals and peaks over the entire spectrum. Theli*commands evaluates the parameter INTSCL if the regions have been determined interactively. For INTSCL ≠ –1, the current dataset is defined asreference dataset for integral scaling. For INTSCL = –1, the integrals of the current dataset are scaled relative to the reference dataset. As such, you can compare the areas of peaks in a series of experiments. Furthermore, the parameter INTBC is evaluated. For INTBC = yes, an automatic baseline correction (slope and bias) of the integrals is performed. This, however, is only done when the integral regions were determined withabs, not if they were determined interactively. Theintcommand can be used on 1D, 2D or 3D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT PARAMETERS Set withedp, from theintdialog box or by typingintscl,intbcetc.: INTSCL - scale 1D integrals relative to a reference data set INTBC - automatic baseline correction of integrals created byabs F1P - low field (left) limit of the plot region in ppm (input forlipp) F2P - high field (right) limit of the plot region in ppm (input forlipp) INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r- real processed 1D data intrng- 1D integral regions (created byabsor interactive integration) OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ integrals.txt- ascii file containing the output ofli integrals_lipp.txt- ascii file containing the output oflippintegrals_lippf.txt- ascii file containing the output oflippf USAGE IN AU PROGRAMS LI LIPP LIPPF SEE ALSO int2d, int3d, int  "],["3278969867","mana","3278969867.html","",null," NAME mana - Switch to multiplet analysis mode (1D) DESCRIPTION The commandmanaswitches to multiple analysis mode.    It can be started as follows:   ClickAnalyse | Multiplets. or   entermanain the command line or   open it from the Multiplet Analysis Guide (commandmanaguide).  A full description of the Multiplet Analysis package can be found under: Help | Manuals | Analysis and Simulation | Structure Analysis Tools SEE ALSO managuide  "],["3278978955","managuide","3278978955.html","",null," NAME managuide - Open the Multiplet Analysis Guide (1D) DESCRIPTION The commandmanaguideopens the Multiplet Analysis Guide which guides you through the multiplet analysis procedure.    A full description of the Multiplet Analysis package can be found under: Help | Manuals | Analysis and Simulation | Structure Analysis Tools SEE ALSO mana  "],["3999960843","mldcon","3999960843.html","",null," NAME mldcon– Mixed Gaussian\/Lorentzian deconvolution using machine learning based algorithm (1D) DESCRIPTION The commandmldcondeconvolves a 1D spectrum by fitting a mixed Lorentzian\/Gaussian function to the peaks. The algorithm was developed to work on 1H 1D spectra, and it is based on a deep learning algorithm trained for peak detection. The algorithm requires a phase and baseline corrected 1D spectrum as input, and outputs a list of peaks that can be used to describe the spectrum. The algorithm works based on two deconvolution steps performed automatically: (i) initial peaks detection and peak parameters guess using deep learning, and (ii) accurate fit of peaks position, amplitude, width and line shape to match spectrum amplitudes. The algorithm automatically optimizes the mixed Lorentzian\/Gaussian ratio of each peak to obtain the best possible fit to the input data. The percentage of Gaussian contribution to the line shape is expressed by the lineshape parameter, and it can range from 0 (pure Lorentzian – line shape parameter equal to 0) to 100% (pure Gaussian – line shape parameter equal to 1). The ability to fit both Lorentzian and Gaussian line shapes makes the algorithm suitable to deconvolve spectra that can be described by either line shape or by a mix of the two. The algorithm stores the deconvolution results as mldcon.csv file in the corresponding PROCNO directory. For each detected peak, the mldcon.csv file reports peak frequency in ppm, intensity in absolute values, full width at half maximum in Hz, line shape as ratio of Gaussian contribution to the total line shape, and absolute area. The peak positions and intensities are also stored as peaklist.xml file, to allow visualization of the predicted peak positions in the spectrum and for the Plot Editor. After successful completion of the deconvolution algorithm,mldcondisplays by default the result in a deconvolution visualization window. An example of the deconvolution visualization window is shown in the figure below. This window displays the input spectrum (in blue), the detected peaks (in grey), their sum (reconstructed spectrum, in red), and the difference between the input and the reconstructed spectrum (residuals, in black).     Use the commandmldcon -d(ormldcon -display) to display the visualization window without running the deconvolution algorithm. This option builds a deconvolution visualization window using the results stored in the mldcon.csv file (i.e., it shows the results of a previous mldcon run). Use the -s (or -silent) option to run the deconvolution command silently, without automatically opening the deconvolution visualization window (for more details, see USAGE below). The reconstructed spectrum is not saved by default. It is possible to store the reconstructed spectrum using the commandmldcon -sr(or-store), which would run the deconvolution and save the reconstructed spectrum in the PROCNO 999 directory of the corresponding EXPNO. Use the additional -procno and -o options to respectively change the PROCNO directory and force overwriting (for more details, see USAGE below). Note that the algorithm offers a range of options that can be used to tailor your results and personalize your workflow. Examples are: deconvolve only a given part of the spectrum, run the deconvolution using an existing user-defined guess instead of the deep learning prediction (starts from a peaklist.xml or mldcon.csv file), increase the number of fit iterations to have a more accurate fitting, and more. Many of these options can also be combined together. An overview of all the options is given in the USAGE paragraph below.  USAGE The following options run the full deconvolution algorithm (deep learning initial guess + accurate fitting). A slash separates matching options. mldcon- Run the deconvolution and display the results in a deconvolution visualization window. mldcon -s\/-silent- Run the deconvolution silently (without opening the deconvolution visualization window). mldcon -r=<value1>,<value2>\/-range=<value1>,<value2>– Run the deconvolution in the region of the spectrum between <value1> and <value2> ppm. The-r\/-rangeoption cannot be combined with the-intrngand-e\/-excludeoptions. For optimal results, include the full signal regions in the range by extending the range to hit the baseline on both sides (region with only noise). mldcon -e=<value1>,<value2>\/-exclude=<value1>,<value2>– Run the deconvolution for the full spectrum leaving out the region between <value1> and <value2> ppm. The-e\/-excludeoption cannot be combined with the-r\/-rangeand-intrngoptions. mldcon -intrng– Run the deconvolution in the integral regions. The- intrngoption cannot be combined with the-r\/-rangeand-e\/-excludeoptions. For optimal results, include the full signal regions in the integral regions by extending the edges to hit the baseline on both sides (region with only noise). mldcon -sr\/-store– Run the deconvolution, display the results in a deconvolution visualization window, store the reconstructed spectrum in PROCNO 999. mldcon -sr\/-store -procno=<value>– Run the deconvolution, display the results in a deconvolution visualization window, store the reconstructed spectrum as PROCNO <value>. <value> must be a positive integer higher than 0. mldcon -sr\/-store -o– Run the deconvolution, display the results in a deconvolution visualization window, store the reconstructed spectrum in PROCNO 999 and force overwriting if the PROCNO directory already exists. The-ooption can also be combined with the-procno. mldcon -sino=<value>– Run the deconvolution, filter out peaks smaller than <value> times the noise level, display the results in a deconvolution visualization window. The default-sinovalue is 5. Note that the noise level is roughly estimated by the algorithm, and it might slightly deviate from the correct value. Note also that the-sinoparameter cannot be used in combination with-csvand-ppin order to preserve the number of user defined peaks. mldcon -fit=<value>– Run the deconvolution using <value> times the number of fitting iterations of the accurate fitting, display the results. Use this option to get a more accurate fitting if the default result has a large residual. <value> must be a positive integer higher than 0. (example:mldcon -fit=2will double the number of fitting iterations) mldcon -f– Force the deconvolution algorithm to run on spectra that are not 1H spectra. The following options run only the accurate fitting part of the deconvolution algorithm and allow users to define the initial peak parameters guess. A slash separates matching options. mldcon -pp– Read the content of the peaklist.xml file (created e.g. using the manual peak picking window), run the deconvolution using peaks at the positions defined in the peaklist.xml file as initial guess, display the results. Note that if the peak positions are changed during the fitting, the peaklist.xml file will be updated. mldcon -csv– Read the content of the mldcon.csv file, run the accurate fitting using the peaks defined in mldcon.csv as initial guess, display the results. Note that if the peak parameters are changed during the fitting the mldcon.csv file will be updated. mldcon -pp\/-csv -tolppm=<value>– Run the deconvolution restricting the chemical shift adjustment made by the accurate fitting to <value> ppm from the initial guess, display the results. This option can be combined with both-csvand-pp. (examplemldcon -pp -tolppm=0.01: deviates peak positions max 0.01ppm from the input guess) mldcon -csv -tolamp=<value>– Run the deconvolution restricting the amplitudes adjustment made by the accurate fitting to <value>% of the initial guess, display the results. This option can be combined with-csvonly. (examplemldcon -csv -tolamp=10: deviates peak amplitudes max 10% from the input guess) mldcon -csv -tolwidth=<value>– Run the deconvolution restricting the line width adjustment made by the accurate fitting to <value>% of the initial guess, display the results. This option can be combined with-csvonly. (examplemldcon -csv -tolwidth=10: deviates peak line widths max 10% from the input guess) mldcon -csv -tolls=<value>– Run the deconvolution restricting the lineshape parameter adjustment made by the accurate fitting to <value> units from the initial guess, display the results. This option can be combined with-csvonly. (examplemldcon -csv -tolls=0.1: deviates peak lineshape parameters max 0.1 units from the input guess) The following options do not run the deconvolution algorithm. A slash separates equivalent options. mldcon -d\/-display– Open a deconvolution visualization window with the results stored in the mldcon.csv file. mldcon -srcsv\/-storecsv– Reconstruct the spectrum from the peak list in the mldcon.csv file, and store it as PROCNO 999. This option can be combined with the-procnoand-ooptions to respectively change the PROCNO directory and force overwriting. Note that most of the options can be used together to combine their results.  INPUT FILES <dir>\/<name>\/<expno>\/pdata\/<procno>\/ 1r, 1i - processed 1D data (frequency domain) mldcon.csv(input ofmldcon -csvandmldcon -srcsv\/storecsv) peaklist.xml(input ofmldcon -pp)  OUTPUT FILES <dir >\/<name>\/<expno>\/pdata\/<procno>\/ mldcon.csv– peak list created bymldcon peaklist.xml– peak list for the plot editor auditp.txt– processing audit trail 1r– real processed 1D data of the reconstructed spectrum (output ofmldcon -sr\/-storeandmldcon -srcsv\/storecsv)  USAGE IN AU PROGRAMS MLDCON(option_string) All the options in the USAGE paragraph can be used in automation and passed as option_string (const char*). Example MLDCON(“-range=4,5 -fit=2”). Note that the function always requires an option string, so the defaultmldconcommand can be used in AU programs using MLDCON(“”).  SEE ALSO dcon2d, dcon;gdcon, ldcon, mdcon, ppp, dconpl, dcon  "],["3278893963","peakw","3278893963.html","",null," NAME peakw - Calculate width of highest peak in displayedregion (1D) DESCRIPTION The commandpeakwcalculates the peak width at half height of the highest peak in the displayed region. The result is appended to the notebook and displayed on the screen:    The command can also be used with one argument: the height at which the width will be calculated. peakw <height> For example,peakw 0.66calculates the width of the highest peak in the displayed region at 66% of the height. OUTPUT FILES <userprop>\/notebook.txt- notebook text file SEE ALSO nbook  "],["3278987275","pps, ppf, ppl, pph, ppj, pp","3278987275.html","",null," NAME pps - Perform peak picking on displayed region ppf - Perform peak picking on full spectrum ppl - Perform peak picking in predefined regions pph - Perform peak picking and also show anintensity histogram ppj - Perform peak picking and store peaks in JCAMP-DX forma  DESCRIPTION Peak picking commands can be started from the command line or from the peak picking dialog box:    All peak picking commands open the dialog box with the corresponding option selected. The commandpp, however, selects the last used option. Auto-Pick peaks on displayed spectrum region This option selects the commandppsfor execution. It determines all peaks within the displayed region. The following table shows an example of its output.      #  ADDRESS  FREQUENCY  INTENSITY       [Hz]  [PPM]      1  648.7  3698.825  7.3995  0.17   2  658.4  3687.649  7.3771  0.21  The peak list is created according to several criteria which are determined by various parameters. A data point is added to the peak list if:   its intensity is higher than its two neighboring points  its relative intensity is smaller than MAXI  its relative intensity is larger than MI  its absolute intensity is larger than PC*noise  it lies within thedisplayed region as expressed by F2P and F1P Where MAXI, MI and PC are processing parameters and noise is calculated from the first 32th part of the spectrum. The values of MI and MAXI must be chosen in relation to the plot parameter CY; the intensity (in cm) of thereference peak. The reference peak is the highest peak in the spectrum or in a certain part of it. The spectral region which contains reference peak, is determined by the parameter PSCAL. For PSCAL = global, this is entire spectrum. The next table shows all possible values of PSCAL and the corresponding regions. For PSCAL = ireg or pireg, theregfile is interpreted. To create aregfile clickto switch to integration mode, clickand selectSave regions to reg. Theregfile can be viewed or edited with the commandedmiscreg.      PSCAL  Peak used as reference for vertical scaling    global  The highestpeak of the entire spectrum.   preg  The highest peak within theplot region.   ireg  The highest peak within the regions specified in theregfile. If it does not exist,globalis used.   pireg  asireg, but the peak must also lie within the plot region.   sreg  The highest peak in the regions specified inscaling region file. This file is specified by the parameter SREGLST. If SREGLST is not set or it specifies a file which does not exist,globalis used.   psreg  assregbut the peak must also lie within the plot region.   noise  The intensity height of the noise of the spectrum.  For PSCAL = sreg or psreg, the scaling region file is interpreted. This is used to make sure thesolvent peak is not used as reference. The name of a scaling region file is typically of the form NUCLEUS.SOLVENT, e.g. 1H.CDCl3. For most common nucleus\/solvent combinations, a signal region file is delivered with TopSpin. In several 1D standard parameter sets which are used during automation, PSCAL is set tosregand SREGLST to NUCLEUS.SOLVENT as defined by the parameters NUCLEUS and SOLVENT. ppsevaluates the parameter PSIGN which can take three possible value:   pos - only positivepeaks appear in the list  neg - only negative peaks appear in the list  both - both positive and negative peaks appear in the list Auto-Pick peaks on full spectrum This option selects the commandppffor execution. It works likeppsexcept that it picks peaks on the full spectrum. Auto-Pick peaks in predefined regions (filepeakrng) This option selects the commandpplfor execution. It picks the peaks in predefined regions. To define those regions:   ClickDefine regions\/peaks manuallyin the peaks dialog box or clickin the toolbar to switch to peak picking mode.  Clickand drag the cursor inside the data window to define the regions.  Right-click inside the data window and selectPick Peaks on rangesor enterpplon the command line. Like 1st option but peak list with histogram This option selects the commandpphfor execution. It works likepps, except that it also shows anintensity histogram. This allows to get a quick overview over the intensity distribution. Like 1st option but peak in JCAMP format This option selects the commandppjfor execution. It works likepps, except that the peak list is stored inJCAMP-DX format in the filepp.dx. This file resides in the processed data directory and can be used for external programs which require JCAMP peak lists. As the file created bytojdxit contains the acquisition and processing parameters but instead of data points it contains a list of peaks. The last part of the filepp.dxlooks like:      ##NPOINTS= 4    ##PEAK TABLE= (XY..XY)   2.3241  1.58   2.2962  1.18   1.9943  10.00   1.8725  1.36  Theppcommand can be used on 1D, 2D or 3D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT PARAMETERS Set by the user withedpor by typingmi,maxietc.: MI -minimum relative intensity (cm) MAXI - maximum relative intensity (cm) PC - peak picking sensitivity PSIGN - peak sign (pos, neg, or both) PSCAL - determines the region with the reference peak for vertical scaling SREGLST - name of the scaling region file used for PSCAL = sreg\/psreg ASSFAC - assign the highest or second highest peak as reference for scaling ASSWID - region excluded from second highest peak search  Set by the user withedpor by typingf1p,f2petc.: F1P - low field (left) limit of the plot region in ppm F2P - high field (right) limit of the plot region in ppm INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r- real processed 1D data proc- processing parameters reg- region with the reference peak for PSCAL =iregorpireg  OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ peaks- peak list containing all peaks in the entire spectrum peaklist.xml- peak list created byppandppsfor the Plot Editor peak.txt- peak list created byppandpps( TopSpin 2.0 and older) or byconvertpeaklist( TopSpin 2.1 and newer) peakhist.txt -peak list with histogram, created bypph pp.dx- peak list in JCAMP-DX format created byppj USAGE IN AU PROGRAMS PP PPL PPH PPJ SEE ALSO peakw,gdcon, ldcon, mdcon, ppp, dconpl, dcon,li, lipp, lippf, int      "],["3278992523","ppd","3278992523.html","",null," NAME ppd - Perform peak picking with derivative-based algorithm DESCRIPTION The commandppdcan be useful to pick peak shoulders which are not found by other peak picking commands.    INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r- real processed 1D data proc- processing parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ peaklist.xml- peak list created for the Plot Editor SEE ALSO pps, ppf, ppl, pph, ppj, pp  "],["3279000843","pp2d","3279000843.html","",null," NAME pp2d - Performpeak picking (2D) pp - Open peak picking control dialog (1D, 2D, 3D) DESCRIPTION 2D peak picking can be started from the command line or from the peak picking dialog box. The latter can be opened with the commandpp:    In this dialog window, you can set the following options:   Append peaks to list: When it is checked, the found peaks are appended to a possibly existing list. When it is unchecked, a new list is created [pp2dappend]  Discard new peak(s) if already in list:Check this option to avoid duplicate peaks [pp2dnoduplicates]  Export results as XwinNmr peaklist: In addition to TopSpin XML format, the result is also stored in XWIN-NMR format (filepeak.txt) [pp2dtxt]. This file is typically used with XWIN-NMR AU programs. Furthermore, you can set the following peak picking parameters: Region parameters Here you can set the region limitsFrom (F1P)andTo (F2P)for both the F2 and F1 direction. Only peaks within this region will be picked. Note that the limits can be specified in the text fields or set with the buttonSet to. The latter allows you to select from:   Full range- full spectrum  Displayed range- range displayed in the data window  Range defined by stored parameters- range stored in parameters F1P\/F2P  Most recent range stored in peak list- range on which last automatic peak picking was done (Only active when peak picking was already done). Sensitivity parameters Here you can set the peak picking parameters MI and MAXI which are also used for 1D peak picking. Note that MI can also be set interactively with the buttonSet to, tothe lowest contour level,the current value of MIorthe most recent valuestored in the peak list. Furthermore, you can set the parameters:   PPDIAG - diagonal gap; minimum distance between picked peaks and diagonal signals. Mainly used for homonuclear spectra.  PPRESOL - peak picking resolution Miscellaneous parameters Here you can set the following parameters:   PPMPNUM: Maximum number of picked peaks. Note that 0 or no value specified means unlimited.  PPIPTYP: Peak picking interpolation type (parabolic or none).  PSIGN: The sign of the picked peaks (positive, negative or both). To start peak picking:   ClickOK. The peak picking progress will be shown in the TopSpin status line. When the peak picking process has finished:   The number of found peaks is displayed in the status line. Note that if the optionAppend peaks to listis checked, only additional peaks are reported as found.  The peaks and parameters are stored in the processing directory. To view the peak list, click thePeakstab of the data window toolbar. The peak picking dialog window has two extra buttons:   Reset all to: Allows you to reset all parameters to the stored parameters or to the most recent values stored in the peak list. Note that the stored parameters and the parameters in the peak list can be different since parameters can also be set withedpor from the command line. However, right after peak picking they are the same.  Start manual picker: To switch to interactive peak picking mode (equivalent to clickingin the TopSpin upper toolbar). The options specified in square brackets in the dialog window and further options can also be specified on the command line. For example:   ppappend: Open peak picking dialog with theAppend..option checked.  ppnoduplicates: Open peak picking dialog with theDiscard new peaks..option checked.  ppsilent: Perform peak picking on the displayed region with the last stored options (no dialog). Equivalent to the commandpps.  ppnodia: Perform peak picking on the last stored region with the last stored options (no dialog).  ppappendnoduplicatesnodia: Perform peak picking on the last stored region with the specified options. Theppcommand can be used on 1D, 2D or 3D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT PARAMETERS Set from theppdialog box, withedpor by typingf1p,mietc.: F1P - low field (left) limit of the peak picking region in F2 and F1 F2P - high field (left) limit of the deconvolution region F2 and F1 MI - minimum relative intensity (cm) MAXI - maximum relative intensity (cm) PC - peak picking sensitivity PPDIAG - diagonal gap; minimum distance to spectrum diagonal PPRESOL - peak picking resolution PPMPNUM - maximum number of picked peaks PPIPTYP - interpolation type PSIGN - peak sign (pos, neg, or both) INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 2rr- real processed 2D data proc- F2 processing parameters, including peak picking parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ procs- F2 processing parameters, including peak picking parameters peaklist.xml- 2D peak list in XML format peak.txt- 2D peak list in TXT format  <userhome>\/<.topspin-hostname\/prop\/ globals.prop- peak picking setup USAGE IN AU PROGRAMS PP2D SEE ALSO pp3d,pps, ppf, ppl, pph, ppj, pp   "],["3279005707","pp3d","3279005707.html","",null," NAME pp3d - Performpeak picking (3D) pp - Open peak picking control dialog (1D, 2D, 3D) DESCRIPTION 3D peak picking can be started from the command line or from the peak picking dialog box. The latter can be opened with the commandpp:    In this dialog window, you can set the following options:   Append peaks to list:When it is checked, the found peaks are appended to a possibly existing list. When it is unchecked, a new list is created [pp3d append].  Discard new peak(s) if already in list:Check this option to avoid duplicate peaks [pp3d noduplicates].  Export results as XwinNmr peak listIn addition to TopSpin XML format, the result is also stored in XWIN-NMR format (filepeak.txt) [pp3d txt]. This file is typically used with XWIN-NMR AU programs. Furthermore, you can set the following peak picking parameters: Region parameters Here you can set the region limitsFrom (F1P)andTo (F2P)for the F3, F2 and F1 direction. Only peaks within this region will be picked. Note that the limits can be specified in the text fields or set with the buttonSettoto:   Full range- full spectrum.  Displayed range- range displayed in the data window.  Range defined by stored parameters- range stored in parameters F1P\/F2P (To store displayed region: right-click in the data window and selectSave display region to).  Most recent range stored in peak list- range on which last automatic peak picking was done (Only active when peak picking was already done). Sensitivity parameters Here you can set the peak picking parameters MI and MAXI, which are also used for 1D peak picking. Note that MI can also be interactively set to the current value of MI, or the lowest contour level, using theSet tobutton. Furthermore, the parameter PPRESOL for peak picking resolution can be set. Miscellaneous parameters Here you can set the following parameters:   PPMPNUM- Maximum number of picked peaks. Note that 0 or no value specified means unlimited.  PPIPTYP- Peak picking interpolation type (parabolic or none).  PSIGN- The sign of the picked peaks (positive, negative or both).  To start peak picking clickOK. The peak picking progress will be shown in the TopSpin status line. When the peak picking process has finished:   The number of found peaks is displayed in the status line. Note that if the optionAppend peaks to listis checked, only additional peaks are reported as found.  The peaks and parameters are stored in the processing directory.  To view the peak list, click thePeakstab of the data window toolbar. The peak picking dialog window has two extra buttons:   Reset all to: Allows you to reset all parameters to the stored parameters or to the most recent values stored in the peak list. Note that the stored parameters and the parameters in the peak list can be different since parameters can also be set withedpor from the command line. However, right after peak picking they are the same.  Start manual picker: To switch to interactive peak [picking mode (equivalent to clickingin the TopSpin upper toolbar). The options specified in square brackets in the dialog window and further options can also be specified on the command line. For example:   pp append:Open peak picking dialog with theAppend..option checked.  ppnoduplicates:Open peak picking dialog with theDiscard new peaks..option checked.  ppsilent: Perform peak picking on the displayed region with the last stored options (no dialog). Equivalent to the commandpps.  ppnodia: Perform peak picking on the last stored region with the last stored options (no dialog).  ppappendnoduplicatesnodia: Perform peak picking on the last stored region with the specified options. Theppcommand can be used on 1D, 2D or 3D data. It recognizes the data dimensionality and opens a dialog box with the appropriate options and parameters. INPUT PARAMETERS Set from theppdialog box, withedpor by typingf1p,mietc.: F1P - low field (left) limit of the peak picking region in F3, F2 and F1 F2P - high field (left) limit of the deconvolution region F3, F2 and F1 MI - minimum relative intensity (cm) MAXI - maximum relative intensity (cm)PC - peak picking sensitivity PPRESOL - peak picking resolution PPMPNUM - maximum number of picked peaks PPIPTYP - Interpolation type PSIGN - peak sign (pos, neg, or both) INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 3rrr- real processed 3D data proc- F3 processing parameters, including peak picking parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ procs- F3 processing parameters, including peak picking parameters peaklist.xml- 3D peak list in XML format peak.txt- 3D peak list in TXT format  <userhome>\/<.topspin-hostname\/prop\/ globals.prop- peak picking setup SEE ALSO pp2d, pp,pps, ppf, ppl, pph, ppj, pp   "],["3279018891","sino","3279018891.html","",null," NAME sino - Calculatesignal to noise ratio (1D) SYNTAX sino [real] [noprint] DESCRIPTION The commandsinocalculates the signal to noise ratio of a 1D spectrum according to the formula:  Wheremaxvalis highest intensity in thesignal region. The signal region is determined by the processing parameters SIGF1 and SIGF2. If SIGF1 = SIGF2, the signal region is defined by:   The entire spectrum without the first 16th part of the data points, unless thescaling region file is defined (see next bullet item).  The regions defined in the solvent table entry NUC1.SOLVENT where NUC1 and SOLVENT areacquisition status parameters.  The factornoiseis calculated according to the algorithm shown in:  Where N is the total number of points in thenoise region, n = (N-1)\/2, and y(i) is the nth point in the noise region. The limits of the noise region are determined by the processing parameters NOISF1 and NOISF2. If they are equal, the first 16th part of the spectrum is used as the noise region. The parameters SIGF1, SIGF2, NOISF1 and NOISF2 can be set from the command line, from theProcparstab (commandedp) or, interactively, in Signal\/Noise display mode. The latter can be entered by clickingAnalyse | SiNo | Signal\/Noise ratio: Calculate (sino)or by entering.sinoon the command line. sinointernally performs a peak picking to determine the highest peak in the signal region. The result ofsinoappears on the screen, for example:    sinowithout any argument calculates the signal to noise on the real part of data (1r)  sino realperforms in the same way assino: only real part of spectra is used  sino magfirst performs a magnitude calculation of the signal region and then uses this data for the calculation. This makes the S\/N value independent on a signal phase.  sinonoprintdoes not show the result on the screen. Thenoprintoption is automatically set whensinois part of an AU program. The result ofsinois stored in the processing status parameter SINO which can be viewed withs sinoordpp. Thenoprintoption can be combined with the options described above:sino mag noprintwould calculate the S\/N on magnitude data without showing the dialog. The parameter SINO exists as processing parameter (edp) and as processing status parameter (dpp) and they have different functions. The latter is used to store the result of the commandsinoas discussed above. The former can be used to specify a signal to noise ratio which must be reached in an acquisition (see the parameter SINO in List of Processing Parameters and the AU programau_zgsino). INPUT PARAMETERS Set in.sinodisplay mode, withedpor by typingnoisf1,noisef2etc.: NOISF1 - low field (left) limit of the noise region NOISF2 - high field (right) limit of the noise region SIGF1 - low field (left) limit of the signal region SIGF2 - high field (right) limit of the signal region  Set by the acquisition, can be viewed withdpaor by typingsnuc1etc.: NUC1 - observe nucleus SOLVENT - sample solvent OUTPUT PARAMETERS Can be viewed withdppor by typings sino: SINO - signal to noise ratio INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r- real processed 1D data 1i- imaginary processed data (not used forsinoreal) proc- processing parameters  OUPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ procs- processing status parameters USAGE IN AU PROGRAMS SINO SEE ALSO abs, absf, absd, bas,Analysis Commands, List of Processing Parameters    "],["3979715339","sino2d","3979715339.html","",null," NAME sino2d  SYNTAX sino2d  Description sino2d - Signal\/Noise calculation for 2D spectra The command is implemented as a Jython script sino2d.py. You may start it either either by typingxpy sino2dorsino2din the command line. sino2d requests the name of region file:    Enter the filename (e.g. by completing the proposed path) and clickOK. The result is displayed in a text window. It shows detailed information about noise calculation.  INPUT PARAMETERS 2D sino requires a 2D signal region and a 2D noise region stored in an \"int2drng\" formatted file according to the following example: 0 0 a 1024 165 249 130.750166 117.206324 1024 279 314 7.416665 7.140323 a 1024 529 639 71.886546 54.175368 1024 375 421 6.667867 6.311296  Please see the format description below.  You may setup the file by hand, by a program, or most comfortably in the 2D integration mode:   Open a 2D spectrum in TopSpin.  Enter interactive integration mode using a menu entry or tool button or by entering the command.int.  Click on the tool buttondelete all regionsto start from scratch.  Click on the tool buttondefine new integration region.  Drag a region around a signal while keeping the left mouse button depressed. When the button is released, a popup menu is opened. Click on anintegrateentry, e.g. the first one (which one doesn't matter).  Move the mouse to a signal-free region and drag again the mouse to mark the region. Again click on anintegrateentry when releasing the left mouse button.  Click on the iconExport integration regions. Thewmiscwindow is opened. Click onWrite new....Enter a filename. The file is stored in the...\/list\/intrng2ddirectory which can be inspected using thermisccommand.  Format description of int2drng file:  Mode SI_F1 row1 row2 row1(ppm) row2(ppm) SI_F2 col1 col2 col1(ppm) col2(ppm)  SEE ALSO sino  "],["3279028747","sola","3279028747.html","",null," NAME sola - Switch to solids line shape analysis mode. DESCRIPTION The commandsolaswitches to solids line shape analysis mode.    This procedure is completely described in the TopSpin Users Guide. To open this: ClickHelp | Manuals | Analysis and Simulation | Structure Analysis Tools SEE ALSO solaguide  "],["3279010571","solaguide","3279010571.html","",null," NAME solaguide - Open the solids analysis guide (1D) DESCRIPTION The commandsolaguideopens a dialog box with a workflow for Solids Line Shape Analysis.    This procedure is completely described in the TopSpin Users Guide. To open this: ClickHelp | Manuals | Analysis and Simulation | Structure Analysis Tools SEE ALSO sola  "],["3279038603","t1guide","3279038603.html","",null," NAME t1guide - Open the relaxation analysis guide (2D) DESCRIPTION The commandt1guideopens a dialog box with a workflow for relaxation analysis including T1\/T2.    This procedure is completely described in the TopSpin Users Guide. To open this: ClickHelp | Manuals | General | User Manual.  "],["3277617419","Print\/Export Commands","3277617419.html","",null," This chapter describes TopSpin print, plot and export commands. Printing can be done directly from the TopSpin interface or from the Plot Editor. The data window can be exported into a graphics file. Commands are available for setting the plot title and, for 2D and 3D data, the contour levels. "],["3277621899","autoplot","3277621899.html","",null," NAME autoplot - Plot data according to Plot Editor layout (1D, 2D) DESCRIPTION The commandautoplotplots the current dataset according to aPlot Editor layout. Thelayout must be specified with the processing parameter LAYOUT. This layout can be a standardPlot Editor layout which is delivered with TopSpin or a user defined layout which has been set up from the Plot Editor. autoplotcan take the following arguments: -s setup.prt Use printer setup filesetup.prtinstead of the printer setup that was saved with the layout (not available in Windows version). -l N Remove N data sets from the portfolio and print again. -n Don‘t reset before printing. -f Force all 1D and\/or 2D objects in the layout to use axis limits as used in TopSpin (uses theF1P\/F2Pparameter for each direction). -e output.ps Createe.g. a Postscript file instead of printer output. Use the-?option to see a complete list of supported file formats. -v Showautoplotversion number. -h Show help text. -? Same as-h. For an extended description ofautoplotplease refer to the Plot Editor online help. INPUT PARAMETERS Set withedpor by typinglayoutetc.: LAYOUT - Plot Editor layout CURPLOT - Default plotter for Plot Editor INPUT FILES <tshome>\/plot\/layouts\/*.xwp- Bruker library Plot Editor layouts <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r- real processed 1D data procs- processing status parameters intrng- integral regions parm.txt- ascii file containing parameters which appear on the plot title- default title file outd- output device parameters portfolio.por- Plot Editor portfolio (input file is it exists) For a 2D dataset, the files2rr,proc2sandclevelsare also input. USAGE IN AU PROGRAMS AUTOPLOT AUTOPLOT_WITH_PORTFOLIO AUTOPLOT_TO_FILE(outputfile) AUTOPLOT_WITH_PORTFOLIO_TO_FILE(outputfile) SEE ALSO plot,print,prnt "],["3277628683","exportfile","3277628683.html","",null," NAME exportfile - Export data window tographics file (1D,2D,3D) DESCRIPTION The commandexportfilesaves the contents of a data window in a graphics file of selectable type, e.g..png,.tif,.wmfetc. It opens an Explorer window.    Here you can:   Click or enter the name of the output file.  ClickOK. Theresolution of such ascreen dumpequals the resolution of your screen. When you import a graphics file into another program, you may lose information when resizing the graphics. Enteringexportfileon the command line is equivalent to clickingFile | Export.... The pathname of the destination graphics file is available in the Windows clipboard. OUTPUT FILES <outputdir> outputfile[.png,.jpg, .jpeg,.bmp,.emf,.wmf] - graphics file SEE ALSO plot,autoplot,prnt,print  "],["3277638539","edlev","3277638539.html","",null," NAME edlev - Editcontour levels (2D,3D) DESCRIPTION The commandedlevopens a dialog box in which you can set the contour levels of a 2D dataset:    Manual setup This allows you to create an arbitrary sequence of levels   Enter the level values in the fields 1, 2, ... at the top of the dialog box.  ClickApplyto update the display orOKto store the levels, update the display and close the dialog box. Calculation This allows you to easily create a geometric or equidistant sequence of levels.   Click one of the following items:   Multiply with increment  to create ageometric sequence of levels.  Add increment  to create aequidistant sequence of levels.  Enter the desiredBase level,Level incrementandNumber of levels.  ClickFillto display and activate the sequence.  ClickApplyto update the display orOKto store the levels, update the display and close the dialog box. The Contour level sign allows you to select positive or negative levels, or both. Note that if you change the intensity interactively, for example with the buttons,or, the contour levels are automatically adjusted. Enteringedlevwill show the adjusted levels and clickingwill save them to disk. INPUT AND OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ clevels- Contour levels SEE ALSO ls, rs commandr, (.ls, .lt)      "],["3277647627","dpl","3277647627.html","",null," NAME dpl - Save the displayed region (1D, 2D) DESCRIPTION The commanddplsaves the displayed region in the parameters F1P and F2P. The command can also be executed by right-clicking in the data window and selectingSave Display Region To...This will open the dialog box shown:    Here selectParameters F1\/2and clickOK. OUTPUT PARAMETERS Can be viewed withedpor by typingf1porf2p: F1P - low field (left) limit of the plot region in ppm F2P - high field (right) limit of the plot region in ppm OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ proc- plot title SEE ALSO plot,prnt,print,autoplot  "],["3277656715",".md, .md no_load, .md write","3277656715.html","",null," NAME .md- displays spectra in multiple display .md no_load- entering multiple display by ignoring other sessions .md write- writes the assoc file containing the data set list for multiple display DESCRIPTION The following arguments of.mdfor controlling data sets from command line, AU-programs or Python programs are available:   Specified data set names can be shown in the display by command.md:  Enter command and full pathname for a specified dataset in the TopSpin command line:  .md <PathToDataset1>\\<expno1>\\pdata\\<procno> <PathToDataset2>\\ <expno2>\\pdata\\<procno>  The command.md no_loadignores the datasets stored in the last multiple display session and enters the multiple display  The command.md writewrites only the assoc file containing the data set list for multiple display. Please note that the multiple display module is not started with this command. Enter command and full pathname of specified dataset in the TopSpin command line:  .md write<PathToDataset1>\\<expno1>\\pdata\\<procno> <PathToDataset2>\\ <expno2>\\pdata\\<procno> Multiple display mode is supported for 1D and 2D spectra. For spectra with a dimension > 2 the selected slice (subplane) is shown."],["3277665035","parplot","3277665035.html","",null," NAME parplot - select parameters to appear on the plot (1D,2D) DESCRIPTION The commandparplotopens a dialog where you can select the acquisition and processing parameters that must appear on the plot:    To select the acquisition parameters to be shown on the plot:   Enable the radio buttonAcquisition Parameters. By default, all acquisition parameters are shown and theHidecolumn is empty.  In theShowcolumn: select the parameters to be hidden.  Click the<button in the center of the dialog.  If desired, you can also select experiment specific (ased) parameters by selecting the respectiveParameter filterand repeating step 2 and 3. To select the processing parameters to be shown on the plot:   Enable the radio buttonProcessing Parameters.  By default, some processing parameters are shown while most are hidden.  In theShowcolumn: select the parameters to be hidden.  Click the<button in the center of the dialog.  In theHidecolumn: select the parameters to be shown.  Click the>button in the center of the dialog. After selecting the acquisition and\/or processing parameters clickOKto save the selection. The dialog offers the following buttons:   Save as...: save the current selection under a user defined name  Open...: open a user defined selection  Restore Defaults: restore the TopSpin default selection  OK: save the current selection  Cancel: Close the dialog TheSave as...andOpenbutton allow to store several selections. Note that these can only be activated from theparplotdialog by using theOpenandOKbuttons, respectively and then count for all data set. Only parameters selected withparplotwill appear on the plot (on datasets created with TopSpin 1.3 or older, first remove the files format.temp in the dataset EXPNO and parm.txt in the dataset PROCNO). This counts for both interactive plotting (commandplot) and automated plotting (commandautoplot). INPUT AND OUTPUT FILES <tshome>\/exp\/stan\/nmr\/form\/acqu.l normpl- acquisition parameters that appear on the plot <tshome>\/exp\/stan\/nmr\/form\/proc.l normpl- processing parameters that appear on the plot <tshome>\/exp\/stan\/nmr\/form\/ <name>- user defined selection of acquisition\/processing parameters INPUT AND OUTPUT FILES parplot  "],["3277674123","edti","3277674123.html","",null," NAME edti - Set the data set title (1D, 2D, 3D) DESCRIPTION The commandedtiallows you to define the data set title. Entering this command is equivalent to clicking the Title tab. Changes in the title will automatically appear in the data window after clicking the Spectrum or Fid tab. The title defined withedtiwill also appear on plots created withprntorautoplot. The commandedtireplaces the formerly used commandsettiwhich is still available. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ title-plot title OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ title- plot title SEE ALSO edtix,plot,prnt,print,autoplot "],["3277680907","edtix","3277680907.html","",null," NAME edtix - Set the data set title (1D, 2D, 3D) DESCRIPTION The commandedtixallows you to define the data set title with an external editor. It uses the editor that is defined in the User Preferences. To set this editor:   ClickPreferences | Text Editors | Preferred text editor | Change The title will appear in the data window and on plots created withprntorautoplot. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ title-plot title OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ title- plot title SEE ALSO edti,plot,prnt,print,autoplot "],["3277687691","plot","3277687691.html","",null," NAME plot - Open the Plot Editor (1D, 2D) DESCRIPTION The commandplotstarts thePlot Editor with the current dataset and the layout defined by the processing parameter LAYOUT.    The plot limits of all data objects will be the same as in TopSpin. The command plot can take various arguments and can be used as follows: The commandplotcan be used with the following arguments: (no option)Force all data objects to use limits from TopSpin -rApplyReset Actionson all objects after loading the layout -nDo not change anything after loading the layout -pmyfile.por Load the portfolio filemyfile.por -iIgnore aportfolio.porfile found in the data set The main window of the Plot Editor consists of a drawing area, a menu bar and a toolbar which offers various graphical objects. Here you can display objects like FIDs, one- or two-dimensional NMR spectra, Stacked Plots, parameter lists and titles. You can add integral curves and peak lists to a spectrum, combine several spectra to a stacked plot draw projections around a 2D spectrum. Furthermore, the Plot Editor offers a set of so-called graphic primitives like lines, text, rectangles and bezier curves. You can place these objects anywhere on the screen and change their appearance. They can be superimposed on NMR-related graphics. All objects can be moved and resized interactively and for each object a range of editing modes is available. The TopSpin commandautoplotallows you to plot a spectrum using a Plot Editor layout. For a full description, please click: ClickHelp | Manuals | Automation and Data Publishing | Data Publishing INPUT PARAMETERS Set withedpor by typinglayoutetc.: LAYOUT - Plot Editor layout CURPLOT - Default plotter for Plot Editor INPUT AND OUTPUT FILES <tshome>\/plot\/layouts\/*.xwp- Bruker library Plot Editor layouts portfolio.por- Plot Editor portfolio (input file is it exists) <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ layout.xwp- Plot Editor layout last_plot.xwp- Last stored Plot Editor layout portfolio.por- Plot Editor portfolio INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r- real processed 1D data procs- processing status parameters intrng- integral regions parm.txt- ascii file containing parameters which appear on the plot title- default title file outd- output device parameters For a 2D dataset, the files2rr,proc2sandclevelsare also input. SEE ALSO print,prnt,autoplot  "],["3277696779","print","3277696779.html","",null," NAME print - Open print dialog box (1D, 2D, 3D) DESCRIPTION The commandprintopens the following dialog box:    Here, you can choose from three print options:   Printactive window[prnt]  The data window is printed as it is displayed on the screen. Before printing starts, the operating system print dialog box will appear where you can, for example,select the printer and printerproperties.  Print with layout - startPlot Editor[plot]  If you select this option and click OK , the Plot Editor will be started. This option is equivalent to enteringploton the TopSpin command line.  Print with layout - plot directly[autoplot]  Selecting this option activates the Plot Editor layoutlist box.Select the desired layout and click OK to print. Standard layouts are delivered with TopSpin. They use the Windowsdefault printer.User defined layouts use the printer defined in the Plot Editor. On a 1D dataset, only 1D layouts are listed, on a 2D dataset only 2D layouts are listed etc. For the last two options, the following required parameters are available: Use plot limits   from screen\/ CY- the plot limits and maximum intensity are used as they are on the screen (processing parameter F1P, F2P and CY, respectively)  from Plot Editor Reset Actions- the plot limits and maximum intensity are set according to the Plot Editor Reset Actions (right-click inside the Plot Editor data field and chooseAutomationto set the Reset Actions).  as saved in Plot Editor- the plot limits and maximum intensity are set in the specified layout Fill dataset list   from your default portfolio- the portfolio contains the current TopSpin dataset plus the data from the default Plot Editor portfolio  from port folio saved in dataset- the portfolio contains the current TopSpin dataset plus the data from the portfolio stored in this dataset Override Plotter saved in Plot Editor If enabled, the plotter defined in the Plot Editor layout will be overridden by the plotter defined by the processing parameter CURPLOT. For each Option\/Required Parameter combination, the corresponding command line command is shown in the title bar of the dialog box. In the example above this is the commandplot-f. INPUT FILES See the description ofprnt,plotandautoplot SEE ALSO prnt,plot,autoplot  "],["3277704331","prnt","3277704331.html","",null," NAME prnt - Print the current dataset (1D, 2D, 3D) DESCRIPTION The commandprntprints the current dataset as it is shown on the screen. Before printing starts, the operating system print dialog box will appear. Here you can, for example, select the printer and printer properties.    SEE ALSO print,plot,autoplot  "],["3277711883","savelogs","3277711883.html","",null," NAME savelogs - Save logfiles DESCRIPTION savelogs is mainly used for debugging purposes. This tool will collect support information about the current TopSpin installation (log and configuration files, by default no NMR data) and allows to transfer it to Bruker. It offers aCommentsfield to enter a description of your issue. Note: If already in contact with Bruker, give a reference to a mail or phone call or ticket number. If issues with spectra are observed, please add the respective NMR data with theAdditional files or directoriesoption. The file transfer process has been changed from ftp to a https secured transfer method.  This tool is also available in the menu bar:   ClickManage | Commands|Collect & Save LogFiles  The Execute Savelogs window is displayed:    The recommended token will be provided by the Bruker support. If not available, enter your name and the name of your institution or company. Once thesavelogscommand has created the savelogs file, the window changes and offers a direct upload of the file to Bruker.      ClickSendto transfer the file and notify your Bruker Support team member once the upload has been completed.  ClickOpento see the resulting savelogs file for other transfer options.  When the transfer has finished a message window is displayed. ClickClose.    If TopSpin cannot be started:   Under Windows:   Click theBruker Utilities<topspin version>icon on your desktop. An Explorer will be opened.  Double-clickMiscellaneous.  Execute the scriptsavelogs .  Under Linux:   Open a shell.  Entersavelogs.  Under macOS:   OpenApplications - <topspin version> Utilities.  Executesavelogs. INPUT FILES User-specific installation files like history files etc. named: <tshome>\/prog\/curdir\/<user>\/* OUTPUT FILES <TS home>\\savelogs\\TopSpinSupport_<Token><user><YY><MM><DD><HH><MM>.zip SEE ALSO hist    "],["3277717899","Dataset Handling","3277717899.html","",null," This chapter describes all TopSpin commands which can be used to read or write or delete datasets. "],["3277722379","copy","3277722379.html","",null," NAME Copy - Copythe contents of the current data window to theClipboard (nD) DESCRIPTION Under Windows, the commandcopycopies the contents of the current data window to the clipboard. The data are copied as a bitmap (in TopSpin 2.0 and older, data were copied in WMF format). To copy the data as a windows metafile, use the commandcopy wmf. On Linux is the screen dump (pngformat) copied to a temporary file, the pathname of this file is copied to clipboard. Enteringcopyon the command line is equivalent to clickingFile | Copyin the menu. SEE ALSO paste "],["3277729931","dalias","3277729931.html","",null," NAME dalias - Createan alias name for a dataset (nD) DESCRIPTION The Alias Tab in Topspin allows to work with short dataset names (aliases) for frequently used data. Each alias is linked to one dataset with fixed EXPNO and PROCNO. Please note, that the Alias Tab can be switched on or off in Set\/Browser Settings. The aliases may be managed through the GUI - a popup menu on the Alias Tab. An alternative option is thedaliascommand. The aliases given for single datasets are different handled from the aliases in the Data Tab. They are only a placeholder for complete directories.       Entering the commanddaliaswithout arguments displays a help message with a summary of all options:       The command requires various arguments and can be used as follows:  Create alias name for a dataset dalias add <alias> <name> <eno> <pno> <dir> or dalias add <alias> <pathname>  Note: the alias name must start with a letter!  Create the alias name <alias> for the specified dataset, e.g.: dalias add e1h exam1d_1H 1 1 C:\/bio or dalias add e1h C:\/bio\/data\/guest\/nmr\/exam1d_1H\/1\/pdata\/1  Show dataset path or name behind alisases dalias pr <alias> Print the name, expno, procno and dir of the specified alias name.  dalias prgen <alias> Print the full pathname of the specified alias name.  dalias prall Print the name, expno, procno, dir of all alias names.  dalias prallgen Print the full data path of all alias names.  Remove alias names dalias rm <alias> Remove the specified alias name.  dalias rmall Remove all alias names.  Note: Removing aliases does not remove corresponding data from disk.  SEE ALSO re, rep commandr   "],["3277746443","del, dela, delp, deldat, delete","3277746443.html","",null," NAME del - Delete data (nD) dela -Delete raw data (nD) delp- Delete processed data (nD) deldat - Delete data acquired at certain dates (nD) delete - Open the delete dialog box (nD) SYNTAX del* [<name>] DESCRIPTION Delete commands can be started from the command line or from the delete dialog box. The latter is opened with the commanddelete:   This dialog box has several options, each of which selects a certain command for execution. The commandsdel,dela,delpanddeldatallow you to display alist of datasets. Such a list includes datasets containing raw and\/or processed data as well as empty datasets which only contain parameter files. You can select one or more datasets in the list to mark them for deletion and then clickOKto actually delete them. An entire dataset with all expnos\/procnos This option selects the commanddelfor execution. It lists datasets, only showing the dataset name. To delete data, select one or more datasets and clickOK. The marked datasets are entirely deleted, including data files, parameter files and the data name directory.    Acquisition data This option selects the commanddelafor execution. It. It lists datasets showing a separate entry for each experiment number (expno). Each entry shows the dataset NAME, EXPNO, ACQU.DATA and SIZE. Datasets which do not contain raw data are displayed with ACQU.DATAnone. To delete data, select one or more datasets and check one of the following check boxes:   Delete the selected EXPNOs with all their PROCNOsto delete theexpnodirectory.  Delete the raw data files of the selected EXPNOs.   Processed data This option selects the commanddelpfor execution. It lists datasets showing a separate entry for each processed data number (procno). Each entry shows the dataset NAME, EXPNO,PROCNO, PROC.DATA and SIZE. Datasets which do not contain processed data are displayed with PROC.DATAnone. To delete data, select one or more data sets and check one of the following check boxes:   Delete the selected PROCNOsto delete theprocnodirectories.  Delete the processed data files of the selected PROCNOs.   Data acquired at certain dates This option selects the commanddeldatfor execution and lists all data sets chronologically. When started from the command line,del*commands can take one argument which may contain wild cards. Examples: dela exam1d*- List all data sets whose name starts withexam1d delaexam1d???- List all data sets whose name isexam1dplus three extra characters del*commands only list and delete the datasets of current user. The current user here refers to theuserpart of the data path of the currently selected dataset. Please distinguish:   The user part of the data path.  The owner of the data set.  The user who runs TopSpin. Usually these three things are the same, i.e. a user works on his own data. However, the user part of the data path can be any character string and does not have to correspond to a user account on the computer. Furthermore, the user who runs TopSpin might work on someone else’s data. In this case, he\/she may or may not have the permission to delete this dataset. In the latter case, thedel*commands will not delete the dataset but show an error message instead. OUTPUT FILES Fordela: Delete raw data files of the selected EXPNOs: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ audita.txt- acquisition audit trail Fordelp:Delete processed data files of the selected PROCNOs: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ auditp.txt- processing audit trail SEE ALSO delf, dels     "],["3277759371","delf, dels, delser, del2d, deli","3277759371.html","",null," NAME delf- Delete raw data (1D) dels- Delete processed data (1D) delser- Delete raw data (2D,3D) del2d- Delete processed data (2D,3D) deli- Delete imaginary processed (nD) delete - Open delete dialog box (nD) SYNTAX del* [<name>] DESCRIPTION Delete commands can be started from the command line or from the delete dialog box. The latter is opened with the commanddelete:   This dialog box has several options, each of which selects a certain command for execution. The commandsdelf,dels,delser,del2danddelidisplay alist of data sets. Such a list only includes data sets which contain data files. As opposed to commands likedelanddela, they do not show empty data sets. You can select one or more data sets to mark them for deletion and then clickOKto actually delete them.  1D raw data This option selects the commanddelffor execution. It lists 1D datasets which contain raw data showing a separate entry for each experiment number (expno). Each entry shows the dataset NAME, EXPNO, ACQU.DATA and SIZE. To delete data, select one or more data sets and check one of the following check boxes:   Delete selected EXPNOsto delete theexpnodirectory.  Delete raw data filesof the selected EXPNOs.    1D processed data This option selects the commanddelsfor execution. It lists 1D datasets which contain processed data showing a separate entry for each processed data number (procno). Each entry contains the data set NAME, EXPNO,PROCNO,PROC.DATA and SIZE. To delete data, select one or more data sets and check one of the following check boxes:   Delete the selected PROCNOsto delete theprocnodirectories.  Delete processed data files of the selected PROCNOs.   2D\/3D raw data This option selects the commanddelserfor execution. It lists 2D and 3D data sets which contain raw data showing a separate entry for each experiment number (expno). Each entry shows the data set NAME, EXPNO, ACQU.DATA and SIZE. To delete data, select one or more data sets and check one of the following check boxes:   Delete selected EXPNOsto delete theexpnodirectory.  Delete raw data files of the selected EXPNOs. 2D processed data This option selects the commanddel2dfor execution. It lists 2D data sets which contain processed data showing a separate entry for each processed data number (procno). Each entry shows the data set NAME, EXPNO,PROCNO, PROC.DATA and SIZE. To delete data, select one or more data sets and check one of the following check boxes:   Delete selected PROCNOsto delete theprocnodirectories.  Delete processed data files of the selected PROCNOs. Imaginary processed data This option selects the commanddelifor execution. It lists data sets which contain 1D, 2D or 3Dimaginary data showing a separate entry for each processed data number (procno). Each entry shows the dataset NAME, EXPNO,PROCNO, PROC.DATA and SIZE. Only the imaginary processed data files are deleted. Raw data, processed data and parameter files are kept. To delete data, mark one or more data sets and check: Delete imaginary processed data of the selected PROCNOs. When started from the command line,del*commands can take one argument which may contain wild cards. Examples: delf exam1d* List all data sets whose name starts withexam1d delfexam1d??? List all data sets whose name isexam1dplus three extra characters del*commands only list and delete the data sets of current user. The current user here refers to theuserpart of the data path of the currently selected data set. Please distinguish:   The user part of the data path.  The owner of the dataset.  The user who runs TopSpin. Usually these three things are the same, i.e. a user works on his own data. However, the user part of the data path can be any character string and does not have to correspond to a user account on the computer. Furthermore, the user who runs TopSpin might work on someone else’s data. In this case, he\/she may or may not have the permission to delete this data set. In the latter case, thedel*commands will not delete the data set but show an error message instead. OUTPUT FILES Fordelf\/delser:Delete raw data files of the selected EXPNOs: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ audita.txt- acquisition audit trail Fordels\/del2d\/deli:Delete processed data files of the selected PROCNOs: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ auditp.txt- processing audit trail SEE ALSO del, dela    "],["3277764235","dir, dira, dirp, dirdat, browse","3277764235.html","",null," NAME dir - List datasets (nD) dira - List raw data (nD) dirp - List processed data (nD) dirdat - List data acquired at certain dates (nD) browse - Open data list dialog box (nD) DESCRIPTION Commands tolist data directories can be started from the command line or from the directory dialog box. The latter is opened with the commandbrowse:   This dialog box has several options, each of which selects a certain command for execution. The commandsdir,dira,dirpanddirdatdisplay all data sets containing raw and\/or processed data as well as empty data sets which only contain parameter files. You can mark one or more entries in the list and click: Display selected data-to display the data in the currentdata window. or Display selected data in a new window-to display the data in a newdata window. When multiple entries were marked, they will be shown in one data window in multi-display mode. An entire data set with all EXPNOs\/PROCNOs This option selects the commanddirfor execution. It lists data sets, showing the data names only.   Acquisition data This option selects the commanddirafor execution. It lists data sets showing a separate entry for eachexpno. Each entry shows the data set NAME, EXPNO, ACQU.DATA and SIZE. The entryfilerefers to the data files and can befid(1D raw data),ser(2D or 3D raw data) orno raw data.   Processed data This option selects the commanddirpfor execution. It lists data sets showing a separate entry for each processed data number (procno). Each entry shows the data set NAME, EXPNO, PROCNO, PROC.DATA and SIZE. The type refers to the name of the data files and can be1r 1i(processed 1D data),2rr 2ir 2ri 2ii(2D raw data),3rrr, 3rri, ..(processed 3D data) orno processed data.   Data acquired at certain dates This option selects the commanddirdatfor execution and lists all data sets chronologically.    When started from the command line,dir*commands can take one argument which may contain wild cards. Examples: dir exam1d* List all data sets whose name starts withexam1d. dir exam1d??? List all data sets whose name isexam1dplus three extra characters. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- 1D raw data ser- 2D or 3D raw data <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data 2rr,2ir,2ri,2ii- processed 2D data 3rrr,3irr,3rir,3iir- processed 3D data SEE ALSO dirf, dirs, dirser, dir2d, browse,find, search,open,re, rep, rew, repw,reb      "],["3277777931","dirf, dirs, dirser, dir2d, browse","3277777931.html","",null," NAME dirf- List raw data (1D) dirs - List processed data (1D) dirser - List raw data (2D,3D) dir2d - List processed data (2D,3D) browse - Open the list data dialog box (nD) SYNTAX dir* [<name>] DESCRIPTION Thedir*commands display a list of data sets according to certain criteria. They can be started from the command line or from thebrowsedialog box:     ClickOKto display the raw data.    The commandsdirf,dirs,dirseranddir2ddisplay a list of data sets. This list only includes data sets which contain certain data files. As opposed to commands likediranddira, they do not show empty data sets. You can mark one or more datasets in the list and click: Display To display the data in the currentdata window. or Display in new window To display the data in a newdata window. When multiple entries were marked, the will be shown in one data window in multi-display mode. 1D raw data This option selects the commanddirffor execution. It lists 1D data sets which contain raw data showing a separate entry for each experiment number (expno). Each entry shows the data set NAME, EXPNO, ACQU.DATA and SIZE. 1D processed data This option selects the commanddirsfor execution. It lists 1D data sets which contain processed data showing a separate entry for each processed data number (procno). Each entry shows the data set NAME, EXPNO, PROCNO, PROC.DATA and SIZE. 2D\/3D raw data This option selects the commanddirserfor execution. It lists 2D and 3D data sets which contain raw data showing a separate entry for each experiment number (expno). Each entry shows the data set NAME, EXPNO, ACQU.DATA and SIZE. 2D processed data This option selects the commanddir2dfor execution. It lists 2D data sets which contain processed data showing a separate entry for each processed data number (procno). Each entry shows the data set NAME, EXPNO, PROCNO, PROC.DATA and SIZE. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- 1D raw data ser- 2D or 3D raw data <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data 2rr,2ir,2ri,2ii- processed 2D data 3rrr,3irr,3rir,3iir- processed 3D data SEE ALSO dir, dira, dirp, dirdat, browse,find, search,re, rep, rew, repw,reb   "],["3277788555","edc2","3277788555.html","",null," NAME edc2 - Define second and third data set. DESCRIPTION The commandedc2opens a dialog box in which you can define the second and third data set:   You can define the NAME, EXPNO, PROCNO and DIR (disk unit). Note that these are all parts of the data path name: <dir>\\<name>\\<expno>\\pdata\\<procno> The second data set is used by 1D commands likeadd,duadd,mul,divandaddfidand by 2D commands likeadd2d,mul2dandaddser. The second data set is, however, usually set from the add\/multiply dialog box (commandadsu). The third data set is used by the 1D commandaddwhen entered from the command line and in various AU programs (macro DATASET3). INPUT AND OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ curdat2- definition of the second data set SEE ALSO mul, mulc, nm, div,add2d, mul2d, addser,add, duadd, addfid, addc, adsu  "],["3277797643","find, search","3277797643.html","",null," NAME Find - Find data according to specified criteria (nD). DESCRIPTION The commandfindallows to find TopSpin data according to variouscriteria.   To open the Find data window (see figure below)   In the Browser and search window clickFind  or in the command line enterFind  or enterCtrl+ffind].  Enter the search items in the upper part of the dialog. Note that:   It will be searched for items containing the specified string.  Exact matching is performed for data set variables, NAME, EXPNO, PROCNO and USER, if the checkboxes at the right are enabled.  The search is restricted to data created between the specified dates. Note that this refers to the acquisition date.  TheReset maskbutton resets thedefault criteria.  Select theData directoriesto be searched in the lower part of the dialog. If no directories are selected, all will be searched.      ClickOK to start the search and display the result.    Note: when exiting TopSpin, the search criteria will be saved as default. How toDisplay one of the Found Data Sets In thesearch result window:   Click one or more data sets to select them.  ClickDisplayto display the selected data set(s) in the current data window. If multiple data sets are selected they are displayed in the new data window in multiple display mode. The search result window offers a right-click context menu with various options:   Display Display the selected data set(s) in the current data window. If multiple data sets are selected they are displayed in the same data window in multiple display mode. Equivalent to clicking theDisplaybutton or pressingEnter.  Display in New Window Display the selected data set(s) in a new window. If multiple data sets are selected they are displayed in the one new data window in multiple display mode.  Display as 2D Projection Display the selected data set as a projection of the current 2D data set. A dialog will appear allowing you to choose F1-projection, F2-projection or both. If multiple data sets are selected, only the first one is considered. If the current data set is not a 2D data set, nothing happens.  Sort This Column Sort the selected column in ascending order.  Sort + Reverse Sort the selected column in descending order.  Show Details Show\/hide the data set details Dimension, Pulse program and Acquisition date.  Save Selection to File.. Save the list of selected data sets in a text file. First opens a file dialog where you can select or specify a file name. The saved data set list can, for example, be used for serial processing (commandserial, see alsoProcessSelectedData setsbelow).  Add Selection to data set group.. Add the list of selected data sets to a data set group. You will be prompted to enter the group name. The created or modified group can be accessed from the browser.  File properties Show main data set parameters likeDimension,Pulse program,Acquisition Date,Nuclei,Spectrometer frequencyandSolvent.  Files Show the files in the processed data directory of the selected data set.  Process Selected Data sets Perform serial processing on the selected data sets. Opens a dialog where you can change or edit the data set list and specify the command, macro or Jython program to be executed (starts the commandserial). TheClosebutton allows you to close the search result dialog. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- 1D raw data acqu- acquisition parameters acqus- acquisition status parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data proc- processing parameters procs- processing status parameters Note that these are only the main 1D data files. SEE ALSO dir, dira, dirp, dirdat, browse,new,open,re, rep, rew, repw,reb     "],["3277892363","lockdataset","3277892363.html","",null," The commandlockdatasetapplies permission changes on the current data set. Content of the EXPNO and PROCNO directories will be protected against further overwrite\/append\/delete operations, and the directory objects itself will lose permissions to add file and subdirectories in it. Effectively, the directory will be frozen. It is still possible to add and process new PROCNOs for the same raw data while the initial PROCNO remains protected. This is especially useful in GLP environments and allows to implement a standard procedure like e.g. the following: automatically acquire and process data set in PROCNO 1→ digitally sign data by commandesign → applylockdatasetto protect against modification → use commandwrp 2to create new PROCNO → change to it byrep 2 → perform interactive processing there (without touching original signed data)  The commandlockdatasetcan be used as part of AU scripts like e.g. the one defined by AUNMP. It is also available by interactive menu selectionManage\/Security\/Lock Data Set Against Changes    "],["3277809035","new","3277809035.html","",null," NAME new - Define anew dataset (nD) DESCRIPTION The commandnew[Ctrl-n] opens a dialog box in which you can define a new data set.   Dataset: Here, you can specify the data set NAME, EXPNO and Directory (disk unit). Note that these are all parts of the data path name: <dir>\\<name>\\<expno>\\pdata\\<procno> Parameters:   Use current parameters– creates the new dataset with the parameters of the current dataset.  Read parameterset- copies the acquisition and processing parameters from the selected experiment.  Set Solvent- sets the acquisition parameter SOLVENT. Default is the solvent of the current data set. Additional action:   Do nothing– no addional actions are performed.  Execute getprosol– reads the probe and solvent specific parameters.  Keep parameters– keeps the listed parameters from the current dataset. Advanced:   Number of datasets (receivers)– defines the number of datasets for multi-receive experiments. Title:   Enter a description for the new dataset.  The commandnewremembers the last selected options. When you clickOK, the data set is created and displayed as the currentdata window. If the specified data set already exists, you will be prompted to overwrite it or not. Note that this will only overwrite the parameters, not the data files. newis equivalent to the commandedc. INPUT FILES <tshome>\/prog\/curdir\/<user>\/ curdat- current data set definition IfExperiment=Use current params: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ acqu- acquisition parameters acqus- acquisition status parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ proc- processing parameters procs- processing status parameters IfExperiment≠Use current params.: <tshome>\/exp\/stan\/nmr\/par\/<experiment>\/ acqu- acquisition parameters proc- processing parameters OUTPUT FILES <tshome>\/prog\/curdir\/<user>\/ curdat- current data set definition If the data set specified withnewdoes not exist yet, the current data set is copied: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ acqu- acquisition parameters acqus- acquisition status parameters <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ proc- processing parameters procs- processing status parameters For 2D and 3D data the filesacqu2,acqu2setc. are also output. SEE ALSO dir, dira, dirp, dirdat, browse,find, search,open,re, rep, rew, repw  "],["3277818891","open","3277818891.html","",null," NAME open - Open a dataset, pulse program, AU program etc. (nD) DESCRIPTION Opening data, parameters, lists and various other files can be started from the command line or from the open dialog box. The latter is opened with the commandopen[Ctrl-o]:   This dialog box has three options each with several file types. Each file type selects a certain command for execution. Open NMR data stored in standard Bruker format This option allows you to open Bruker format data in the following ways:   File chooser [reb]  RE dialog [re]  PROCNO dialog [rep] Open NMR data stored in special formats This option allows you to open the following NMR data types (formats):   JCAMP-DX [fromjdx]  Zipped TopSpin [fromzip]  WIN-NMR [winconv]  A3000 [conv]  VNMR [vconv]  JNMR [jconv]  Felix [fconv] Open other file: This option allows you to open the following lists and programs:   Pulse programs [edpul]  Au programs [edau]  Gradient programs [edgp]  CPD programs [edcpd]  Miscellaneous files [edmisc]  Parameter lists [edlist]  Jython program [edpy] The corresponding command line commands are specified in square brackets. After clickingOK, a new dialog box will appear according to the selected option and file type. SEE ALSO conv,edau, xau, delau, xauw,edlist, dellist,edmisc, rmisc, wmisc, delmisc,edpul, edcpd, edpy, edpy3, edmac,fconv,fromjdx,fromzip,jconv,re, rep, rew, repw,reb,reb,vconv,winconv  "],["3277828747","paste","3277828747.html","",null," NAME paste - Open the dataset that was last copied (nD) DESCRIPTION The commandpasteopens the dataset which was previously copied from a TopSpin data window or from the File Explorer. This involves two steps:   Copy In the File Explorer:   Go to a dataset  Right-click a dataset folder or file, e.g. the dataname,expnoorprocnofolder or any file in it and clickCopy  Paste In TopSpin:   ClickFile | Pasteor typepaste Note that if you select and copy a the data set in the File Explorer, its data path is copied to theClipboard. The commandPastereads this path from the Clipboard. If you runPastewithout first copying a data set from the Explorer, TopSpin tries to read whatever is currently stored in the Clipboard. If that is a data path, TopSpin will read it, otherwise you will get an error message. OUTPUT FILES <tshome>\/prog\/curdir\/<user>\/ curdat- current data definition SEE ALSO copy "],["3277837067","re, rep, rew, repw","3277837067.html","",null," NAME re - Read data of specifiednameorexpno(nD) rep - Read data of specifiedprocno(nD) rew - Read data of specifiedname\/expnoin new window (nD) repw - Read data of specifiedprocnoin new window (nD) DESCRIPTION The commandsreandrewallow you to read and display a new data set. They open a dialog box with the corresponding option selected:   These options are: Display data in same window Selects the commandrefor execution. It reads the specified data set in the current data window. Display data in new window Selects the commandrewfor execution. It reads the specified data set in a new data window.   Specify the data path variables. A full data path is: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> rereplaces the data set in the current data window (if it exists). The data path variables can also be specified on the command line. In this case, the dialog box is not opened and the missing data path variables are taken from the current data set. Examples: re <name> re <expno> re <name> <expno> re <expno> <procno> re <name> <expno> <procno> re <name> <expno> <procno> <dir> <user> Alternatively,reandrewcan be entered with an alias name as argument, i.e.: re <aliasname> Note that the first alphanumeric argument is always interpreted as the name (or alias name) and the first numeric argument as experiment number. The commandsrepandrepwallow you to read and display a new processed data number (procno) of the current data set. They open a dialog box with the corresponding option:  Display data in same window Selects the commandrepfor execution. It reads the specified PROCNO in the current data window.   Display data in new window Selects the commandrepwfor execution. It reads the specified PROCNO in a new data window.   The destinationprocnocan also be specified on the command line, e.g.:rep 77 INPUT FILES For re and rew: <dir>\/data\/<user>\/nmr\/<name1D>\/<expno>\/ fid- 1D raw data acqu- acquisition parameters acqus- acquisition status parameters For re, rew, rep and repw: <dir>\/data\/<user>\/nmr\/<name1D>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed 1D data proc- processing parameters procs- processing status parameters Note that these are only the main files of a 1D dataset. OUTPUT FILES <tshome>\/prog\/curdir\/<user>\/ curdat- current data definition USAGE IN AU PROGRAMS RE(name) SEE ALSO reb,open,new,find, search commands,dir, dira     "],["3277846923","reb","3277846923.html","",null," NAME reb - Open a data browser at the level of data names (nD) DESCRIPTION The commandrebopens a file browser:   Here you see a list of data set names under the same <dir> and <user> as the currently selected data set. Note that TopSpin data are stored in a directory: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> From the browser, you can:   Select the data name to be displayed in the current data window  Move up in the data directory tree to select a differentuserand\/ordir  Double-click a datanameto move down the directory tree and select a desiredexpno\/procno. Once you have selected the desiredname,expnoorprocno, clickDisplayor hitEnterto display the data set in the current data window. reballows opening data sets stored in the following directories structures: <mydata>\/<dataname>\/<expno>\/pdata\/<procno> Note that this will create a copy the data set in the standard TopSpin data path: <tshome>\/data\/<user>\/nmr\/<dataname>\/<expno>\/pdata\/<procno> Where <user> is the current internal TopSpin user. This copy can be processed, deleted or overwritten, even if the original data set is write protected. The original data set remains unchanged. SEE ALSO open,re, rep,new,find, search  "],["3277856779","rel, repl","3277856779.html","",null," NAME rel - Open a list of expnos\/procnos in current dataset repl - Open a list of procnos in the current expno DESCRIPTION The commandrellists the available expnos\/procnos under the current data set and allows to select and open one:   If the current data set contains only one expno\/procno combination, it is automatically opened. The dialog offers the following buttons: Open: Open the highlighted dataset (equivalent to pressing theEnterkey) Print: Print the dialog contents Save: Print the dialog contents to a text file Cancel: Close the dialog The commandreplworks likerel, except that it lists the available procnos under the current expno. Another dateset can also be selected directly on the command line, e.g.: rel 2- selects the expno 2 of the current dataset. repl 2- selects the procno 2 of the current dataset.  If no data set is open,relrefers to the last active dataset. If no data set has been open yet during the current TopSpin session, an error message is displayed. SEE ALSO re, rep commandr,new  "],["3277865099","reopen","3277865099.html","",null," NAME reopen - Reopen current dataset in new data window (nD) DESCRIPTION The commandreopenreopens the current data set in a new data window. This is, for example, convenient to view various regions or variousobjects (spectrum, fid, parameters etc.) of the same data set. Multipledata windows are indicated with a number insquare brackets, e.g. [1], in thetitle bar. Enteringreopenon the command line is equivalent to clickingFile | Reopenin the menu.   SEE ALSO open  "],["3277872651","smail","3277872651.html","",null," NAME smail - Send the current data set by E-mail (1D, 2D, 3D) DESCRIPTION The commandsmailsends the current data set by E-mail. It opens a dialog box where you can specify the required information or accept the default values.   In the dialog box, you can select the:   Archive type: ZIP or JCAMP  Data type(s) included: FID, spectrum and\/or parameters For ZIP format data you can choose between compression and no compression. For JCAMP format, you can choose between the following compression modes:   FIX(=0) : Table format  PACKED(=1) : No spaces between the intensity values  SQUEEZED(=2) : The sign of the intensity values is encoded in the first digit  DIFF\/DUP(=3) : The difference between successive values is encoded, suppressing repetition of successive equal values (default =DIFF\/DUP) For the included data types, you have the following choices:   FID+RSPEC+ISPEC: Raw + real and imaginary processed data  FID+RSPEC: Raw + real processed data  FID: Raw data  RSPEC+ISPEC: Real and imaginary processed data  RSPEC: Real processed data  PARAMS: Parameter files Before you can send the data you must fill in the fields:   To: The E-mail address of the recipient  From: Your own E-mail address  SMTP mail server:  Subject:  Text: INPUT FILES <tshome>\/prog\/curdir\/<user>\/ curdat- current data definition If data type includes FID : <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- 1D raw data ser- 2D raw data If data type includes RSPEC : <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> 1r- real processed 1D data 2rr- real processed 2D data If data type includes ISPEC : <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> 1i- imaginary processed 1D data 2ir- F2-imaginary processed 2D data 2ri- F1-imaginary processed 2D data 2ii- F2\/F1-imaginary processed 2D data All other files which are part of a data set like parameter files, audit trails files etc. are sent for all data types. OUTPUT FILES <userhome>\/<mydata.dx>- TopSpin data in JCAMP-DX format <userhome>\/<mydata.bnmr.zip> - TopSpin data in ZIP format  SEE ALSO tojdx,tozip  "],["3277881739","wrpa, wra, wrp, wraparam, wrpparam","3277881739.html","",null," NAME wrpa - Copy a complete data set, raw and processed data (nD) wra - Copy raw data (nD) wrp - Copy processed data (nD) wraparam - Copy acquisition data set (parameters only) wrpparam - Copy processing data set (parameters only) DESCRIPTION The commandwrpawrites (copies) a data set. It opens a dialog box where you can specify the destination data set:   When you clickOK, the entireexpnodirectory is copied including raw data,acquisition parameters, processed data and processing parameters. wrpatakes six arguments: <name>- the data set name <expno>- the experiment number <procno>- the processed data number <dir>- thedisk unit (data directory) <user>- the user y- overwrite the destination dataset if it already exists All arguments are parts of the destination data path (the data path of the foreground data set is displayed above the TopSpin data field), except for the last one which is a flag. You can, but do not have to, specify all of these arguments. If the first argument is a character string, it is interpreted as the destination data name. If the first argument is an integer value, it is interpreted as the destination experiment number. Examples of usingwrpaare: wrpa <name> wrpa <expno> wrpa <name> <expno> wrpa <name> <expno> <procno> wrpa <name> <expno> <procno> <dir> <user> y wramakes a copy of the currentexpnodirectory, including raw data,acquisition parameters, and processing parameters. The command takes two arguments and can be used as follows: wra- prompts you for the destination experiment number wra <expno>- copies the raw data to <expno> wra <expno> y- overwrites existing raw data in <expno> wrpmakes a copy of the currentprocnodirectory, including the processed data and processing parameters. The command takes two arguments and can be used as follows: wrp- prompts you for the destination processed data number wrp <procno>- copies processed data to <procno> wrp <procno> y- overwrites existing processed data in <procno> wrpparamworks likewrp, except that it does not copy the processed data files andauditp.txtfile. wraparamworks likewra, except that it does not copy the raw data files andaudita.txtfile. Note that thewr*commands only work if user who started TopSpin has the permission to create the destination data set. INPUT AND OUTPUT FILES Forwrpa,wraandwraparam: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- 1D raw data ser- 2D or 3D raw data acqu- acquisition parameters acqus- acquisition status parameters Forwrpaandwra: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- raw data (1D) ser- raw data (nD) audita.txt- acquisition audit trail Forwrpa,wra,wrpandwrpparam: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ proc- processing parameters procs- processing status parameters Forwrpa,wraandwrp: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ 1r,1i- processed data (1D) 2rr,2ir,2ri,2ii- processed data (2D) 3rrr,3irr,3rir,3rri,3iii- processed data (3D) 4rrrr,4iiii- processed 4D data auditp.txt- processing audit trail For 2D data, the additional parameter filesacqu2,acqu2s,proc2andproc2swill be created. For 3D, 4D etc. data, the respective additional parameter files will be created. Note that apart from data and parameters several other files are copied. USAGE IN AU PROGRAMS WRPA(name, expno, procno, diskunit, user) WRA(expno) WRP(procno) Note that these macros overwrite possibly existing data. SEE ALSO dir, dira, dirp, dirdat, browse,new,open,re, rep, rew, repw,reb  "],["3277900683","Parameters, Lists, AU Programs","3277900683.html","",null," This chapter describes all TopSpin commands which handle parameters andparameter sets. Furthermore, you will find commands that are used to read or edit lists like pulse programs, gradient programs, frequency lists etc. Note that several commands in this chapter are acquisition related rather than processing related. Nevertheless they play a role in the processing part of TopSpin. "],["3277905163","dpp","3277905163.html","",null," NAME dpp - Displaysprocessing status parameters (1D, 2D, 3D) DESCRIPTION The commanddppdisplays the processing status parameters. Enteringdppis equivalent with a click on the ProcPars tab andToggle status parameter viewin the dataset window..   The processing status parameters are set by processing commands and represent the status of the processed data. As such, they can only be viewed in thedppwindow. The following buttons are available: Undo the last modification (unused for status parameters). Switches between processing and processing status parameters. Changes the processing dimension of the current dataset. Show eretic parameters. Switches to Maxent parameters view. Collapse orexpand all parameters. Search for the parameter specified in the search field. Processing status parameters can also be viewed by entering their names on the command line. For example:   sft_mod- Display the processing status parameter FT_mod.  snc_proc- Display the processing status parameter NC_proc. INPUT FILES <tshome>\/classes\/prop\/ pared.prop- Parameter properties file. <tshome>\/exp\/stan\/nmr\/form\/ proc.e- Processing parameter format file. <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ procs- Processing status parameters. On 2D and 3D data the filesproc2sandproc3sare used for the second and third direction, respectively (see also chapter Parameter files). SEE ALSO edp,dpl           "],["3277915787","eddosy","3277915787.html","",null," NAME eddosy - Edit DOSY processing parameters (2D, 3D) DESCRIPTION The commandeddosyopens the following dialog box, if no DOSY parameters are available.     ClickOKto set the DOSY processing parameters.   These parameters are used by the commanddosy2danddosy3don 2D and 3D data, respectively. The following buttons are available: Undo the last modification. Can be used repeatedly. Switch to processing parameters. Switch to Gifa parameters. Copy parameters from experiment (AU programsetdiffparm). Get display limits from data set. Execute Fourier Transform (commandxf2). Start fitting. Search for the parameter specified in the search field.  For more information oneddosy: ClickHelp | Manuals | Acquisition Application Manuals | Dosy INPUT FILES <tshome>\/exp\/stan\/nmr\/form\/ dosy.e- format file foreddosy INPUT AND OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> dosy- DOSY processing parameters SEE ALSO dosy2d,dosy3d           "],["3277925643","edlist, dellist","3277925643.html","",null," NAME edlist - Edit Parameter lists dellist – Delete Parameter lists DESCRIPTION The commandedlistallows to edit parameter lists like VD Delay lists, VP Pulse lists, VC Loop Counts lists, VA Amplitude lists, VT Temperature lists, F1 Frequency lists, SP Shape lists, DS Data Set lists and PHASE Phases lists. The command edlist opens the Parameter Lists window:   On the top right the source and list type can be filtered. All items shown in the table can be edited in the upcoming text editor. For detailed information user-specific definition ofSource Directoriesand the functionalities ofManage Source Directoriesplease refer to the information given in chapter User specific handling of Source Directories. The dialog shown above offers the following buttons: Edit- to edit a list in a text file, clickEditor double-click a parameter list. Saving the modifications will overwrite the existing list. Close- closes the dialog.  The commanddellistopens the same dialog box asedlist. To delete a list, right-click the selected item, and then clickDelete… Hint:This is also possible with the commandedlist, sodellistis historical and obsolete. For further information about the commandsedlistandellistplease refer to the Acquisition Commands and Parameters User Manual under: Help | Manuals (docs) | Acquisition & Processing References | Acqu. Commands and Parameters. INPUT\/OUTPUT DIRECTORIES The default directory for user-defined lists is: <tshome>\/exp\/stan\/nmr\/lists\/<listname>\/user SEE ALSO edmisc, rmisc commandr  "],["3277933195","edmisc, rmisc, wmisc, delmisc","3277933195.html","",null," NAME edmisc - Editmiscellaneous lists rmisc - Read miscellaneous lists wmisc - Writemiscellaneous lists delmisc- Delete miscellaneous lists DESCRIPTION The commands*miscallow to read, edit, write or delete miscellaneous lists. When entered without arguments, they all open a related window for miscellaneous files. The difference is thatwmisconly offers writing possibilities for miscellaneous files,rmisconly offers reading possibility, whereas withedmiscanddelmiscyou can read, write and edit the correesponding\/selected miscellaneous file:   On the top right you can change the source and specify the miscellaneous type that should be shown in the table (see figure above). All items shown in the table can be edited, read, written or new written. This also corresponds to the commandsedmisc,rmiscandwmisc.      For detailed information about user-specific definition of source directories and the functionalities ofManage Source Directoriesplease refer to the information given in chapter User specific handling of Source Directories. Types of Miscellaneous Files The lists which can be edited are shown in the table below:      list type  contains   intrng  integral regions, created by interactiveintegration or automaticbaseline correction (abs). Used for spectrum display, print and integral listing.   base_info  polynomial,sineorexponentialbaseline function, created from the baseline mode (.basl). Used by thebaseline correction commandbcm..   baslpnts  baseline points created bydef-ptsfrom the baseline mode (.basl). Used by thesplinebaseline correction commandsab.   peaklist  peak information, created by the commandpppandmdconauto. Used by themixeddeconvolution commandmdcon.   reg  plot regions, created in interactiveintegration mode (command.int). Used bypp,lippwhen PSCAL=ireg or pireg.   Miscellaneous list types  When entered on the command line,rmisctakes two arguments and can be used as follows:   rmisc <type> -Shows all entries of the type <type>. If you select an entry, the corresponding list will be read.  rmisc <type> <name>- Reads the list <name> of the type <type>. INPUT\/OUTPUT DIRECTORIES The default directory for user-defined lists is: <tshome>\/exp\/stan\/nmr\/lists\/<listname>\/user intrng - integral range files baslpnts - spline baseline points file base_info - pol. exp. or sine baseline function files peaklist - peak information files reg - plot region files USAGE IN AU PROGRAMS RMISC(type, file) WMISC(type, file) SEE ALSO edlist, dellist    "],["3277943051","edshape","3277943051.html","",null," NAME edshape - Edit Shape Files delshape - Delete Shape Files DESCRIPTION When entered without arguments, the Shape File commandsedshape and delshapeall open the AU program dialog box:   On the top right of the upcoming window you can find the sources where the listed Shape files are stored. With pull-down menu and click on the respective Source you can change the Shape file source to let them be listed in this dialog.    The AU programs are selected from theSourcedirectory as selected at the upper right of the dialog. Note that: <tshome>\\exp\\stan\\nmr\\lists\\wavecontains all Bruker Shape files. <tshome>\\exp\\stan\\nmr\\lists\\wave\\usercontains all user defined Shape files. The dialog offers the following buttons: Close Close the dialog. Edit Edit the selected Shape file. Equivalent to double-clicking the Shape file name, or enteringedshape <name>on the command line.   Display Display the selected Shape file. The Shape Tool will be opened for display the current Shape file. The result can be seen in the following figure:   The File menu The File menu offers the following functions: New... Create a new Shape file. Note that new Shape files can only be stored in user defined directories. Save as... Save the selected Shape files under a new name. A dialog will appear where you can specify the Shape file name and destination directory. Delete... Delete the selected Shape file. Rename... Rename the selected Shape file. Note that only user defined Shape files can be renamed. Export... Export the selected Shape file to an arbitrary directory. A file dialog will appear where you can select\/specify the destination directory. Import... Import a Shape file from an arbitrary directory. A file dialog will appear where you can select\/specify the Shape file. Close Close the Shape file lists. The Options menu The Options menu offers the following functions: Show Comment Toggles between displaying Shape file with\/without comments (see the figure below). Show Date Toggles between displaying Shape file with\/without date (see figure below). Sort by Date Sort Shape files by date when selected:    Manage Source Directories Add\/modify Shape files source directories. Shape files will be searched in the order of the specified directories. Detailed information aboutManage Source Directoriesare described in chapter User specific handling of Source Directories. INPUT\/OUTPUT FILES The default directory for user-defined files is: <tshome>\/exp\/stan\/nmr\/lists\/<listname>\/user SEE ALSO edlist, dellist command      "],["3277954443","edp","3277954443.html","",null," NAME edp - Edit processing parameters (1D, 2D, 3D) DESCRIPTION The commandedpopens a dialog box in which you can set all processing parameters.   Enteringedpon the command line is equivalent with a click on the ProcPars tab bar of the dataset window. The following buttons are available: Undo the last modification. Can be used repeatedly. Switch to Maxent parameters Switch to processing status parameters Change raw data set dimensionality (parameter PPARMOD) Search for the parameter specified in the search field Inside the parameter editor, you can do the following actions:   Click a processing step, e.g. Window at the left of the dialog box. The step becomes highlighted and the corresponding parameters will appear in the right part of the dialog box.  Click in a parameter field, e.g. SI to set the parameter value. It is automatically stored.  Hit theTabkey to jump to the next parameter field.  HitShift-Tabto jump to the previous parameter field.  Use the scroll bar at the right of the dialog box to move to parameters further up or down in the dialog box. Note that you can also set parameters by entering their names on the command line. A dialog window will appear where you can enter the parameter value(s). For example: si On a 1D data set.  Or on a 2D data set:  Alternatively, you can specify the parameter value as an argument on the command line, for example: si 4k The size will be set to 4k (=4096). INPUT AND OUTPUT PARAMETERS All processing parameters. INPUT FILES <tshome>\/classes\/prop\/ pared.prop- parameter properties file <tshome>\/exp\/stan\/nmr\/form\/ proc.e- format file foredp INPUT AND OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> proc- processing parameters proc2- processing parameters for the second direction (2D or 3D) proc3- processing parameters for the third direction (3D) SEE ALSO dpp,edau, xau, delau, xauw         "],["3277966603","edpul, edcpd, edpy, edpy3, edmac","3277966603.html","",null," NAME edpul - Editpulse programs edcpd - Editcomposite pulse decoupling (CPD) programs edpy - Edit Jython programs edpy3 – Edit Python 3 programs edmac - Editmacros DESCRIPTION The commandsedpul,edcpd,edpyandedmacopen a dialog that lists pulse programs, CPD programs, Python programs and macros, respectively. The dialog offers various functions like edit, create, search, delete, import and export. These programs are stored in a database. The dialog for the commandedpulis shown in the figure below. The dialogs foredcpd,edpyandedmachave the same menu but can offer different buttons.   Search List Box Database items can be searched in two possible ways, as can be chosen from the list box at the upper left of the dialog:   Search in names- to search for a string in the item names.  Search in text- to search for a string in item text contents. Search Text Field Here you can enter one or more characters of the item name or contents. The following wildcards can be used: * : for zero or more occurrences of any character ? : for a single occurrence of any character Here are some examples:   *xxx* finds all occurrences of xxx.  ??xxx* finds all occurrences of xxx preceded by two arbitrary characters. A search mask for item names can also be specified on the command line, e.g.edpul ??cos* Conditional List boxes These list boxes are only offered if the selected item has the corresponding item defined. For example, most high resolution pulse programs have a Class and Dim definition but not Type or SubType definition. Class Allows to show a particular class of items or all items (any). Dim Allows to show items of a particular dataset dimension or all items (any). Type Allows to show a particular type of items or all items (any). SubType Allows to show items of a particular subtype of items or all items (any). Available Buttons All Show items of all classes, dimensions, types and subtypes. Edit Opens the selected item (pulse program, CPD program, ...) in the TopSpin text editor or viewer, depending on whether the selected item is writable for the current user or not (see below). Writable items can be modified in the editor. They can be saved from the editor as follows: In the menu clickFile | Save[Ctrl-s] Write-protected items can be saved under a different name as follows: In the menu clickFile | Save as.. The new item is owned by and writable for the current TopSpin user. Items can also be created \/modified with an external (non-TopSpin) editor. They can then be imported in the database as described below. Graphical Edit(for pulse programs only) Opens a symbolic graphical display of the selected pulse program, with the possibility of graphical editing. Set PULPROG(for pulse programs only) Sets the acquisition parameter PULPPROG to the name of the selected pulse program. The Options menu The Options menu offers the following functions: Show Comment Toggles between displaying items with\/without comments. Show Date Toggles between displaying items with\/without date. Sort by Date Sort items by date when selected. Manage Source Directories Add\/modify item source directories. Items will be searched for in the order of the directories specified. For detailed information about Source Directory Handling andManage Source Directoriesplease refer to chapter User specific handling of Source Directories. Export Sources... Opens a dialog to export an entire item library to a user defined directory. Note the difference to theExportfunction under the File menu (see below). The File menu The File menu offers the following functions: New Opens an empty editor for creating a new item, e.g. a pulse program. Saving the text will prompt you for the item name, and will store it in the database. The owner of the item will be the current TopSpin user.  Save As... Saves the selected item under a new name. Opens a dialog where you can selected a source directory and specify a filename.  Delete... Deletes all selected items from the database (if not write protected). You will be prompted to confirm deletion.  Rename... Allows to rename the selected item in the database (if not write protected).  Export... Exports one or more items to text files. To do that:   Mark one or more items in the dialog.  ClickFile | Export  Select or enter the storage directory and clickExport... The selected item(s) will be stored under their original names, provided there is write permission.  Import... Imports external item (e.g. pulse program) files into the database and lists it in the dialog. First, it opens a file browser where you can navigate to a directory containing your text files (which may have been created outside of TopSpin). Select or enter the desired files in the browser and clickImport. The dialog will be updated showing the imported item. Please note that:   The owner of imported items is the current TopSpin user.  Write-protected items in the database cannot be overwritten by importing items with the same name.  Writable items with the same name are only overwritten by import, after user confirmation.   Close Close the dialog Current TopSpin User The current TopSpin user can be one of the following users:   The system login user, i.e. the user who started TopSpin. This is the case ifTopSpin internal login\/logoffis disabled.  The current internal TopSpin user. This is the case ifTopSpin internal login\/logoffis enabled. To enable\/disableTopSpin internal login\/logoff, entersetand clickChangeto the right of the itemSetup users for internal.... Write Protection An item (e.g. pulse program) in the database is write-protected (cannot be modified or deleted), if its owner isBrukeror if its owner is not the current TopSpin user. Owner Each item (e.g. pulse program) in the database has an assigned owner. Please note the following aspects:   For all items (e.g. pulse programs) delivered by Bruker, the owner isBruker.  The description of theEdit, New and Importfunctions above shows how an owner is assigned to an item.  Bruker-owned items are write protected (cannot be changed\/deleted). They may, however, be copied to a new name (seeEditabove).  Pulse programs names MUST be unique across all owners! The database cannot contain two pulse programs with same name, even if their assigned owners are different. Using Pulse\/CPD Programs from a User-defined Directory When you run an acquisition, using commands likezg,gs, .., the required pulse or CPD program is normally taken from the database. You might, however, want to use pulse programs from an arbitrary, user-defined directory, e.g. for development purposes. You can do this by setting the operating system environment variablesPULPPROG_DIRandCPDPROG_DIR. They can be set in two different ways, with or without a minus sign, determining the item search order. Examples:   PULPPROG_DIR=c:\\mydir  Will causezg,gs... to search for the pulse program in the database and then, if it did not find it there, inc:\\mydir. So the database is searched first, then the defined directory.  PULPPROG_DIR=-c:\\mydir  Will causezg,gs... to search for the pulse program inc:\\mydir, and then, if it did not find it there, in the database. So the directory is searched first, then the database. Each time a pulse or CPD program is taken from a directory (rather than from the database), a message is written into the history file (to be viewed with commandhist). Please note:   The commandsedpulandedcpddo not evaluate the above environment variables.  When TopSpin is running as a client that controls a remote spectrometer, the remote environment variables are evaluated. About Macros Macros are text files which contain a sequence of TopSpin commands and\/or Jython commands. A simple macro for processing and plotting the current dataset is: # 1D processing macro em ft apk sref autoplot # plot according to Plot Editor layout TopSpin commands can be inserted in lower or uppercase letters. Jython commands must be entered as follows: xpy <name> All text behind a # character is treated as comment. About Jython and Python3 programs Python programming is extensively described in a separate document available under: ClickHelp | Manuals | Programming Manuals | Python programming INPUT AND OUTPUT FILES The default directories for pulse programs, CPD programs, Macros and Python programs are listed below, just like Bruker default directories: <tshome>\/exp\/stan\/nmr\/lists\/pp\/*- Bruker pulse programs <tshome>\/exp\/stan\/nmr\/lists\/pp\/user\/*- User defined pulse programs <tshome>\/exp\/stan\/nmr\/lists\/cpd\/*- Bruker\/CPD programs <tshome>\/exp\/stan\/nmr\/lists\/cpd\/user\/*- User CPD programs <tshome>\/exp\/stan\/nmr\/lists\/mac\/*- Bruker TopSpin macros <tshome>\/exp\/stan\/nmr\/lists\/mac\/user\/*- User TopSpin macros <tshome>\/exp\/stan\/nmr\/py\/*- Bruker Jython programs <tshome>\/exp\/stan\/nmr\/py\/user\/*- User Jython programs SEE ALSO edlist, dellist,delpul, delcpdd,xmac,xpy, xpy3   "],["3277978763","delpul, delcpd, delpy, delmac","3277978763.html","",null," NAME delpul - Deletepulse programs delcpd - Deletecomposite pulse decoupling (CPD) programs delmac - Deletemacros delpy - Delete Jython programs DESCRIPTION The commandsdelpul,delcpd,delpyanddelmacopen a dialog from which you can delete pulse programs, CPD programs, Jython programs and macros, respectively. These programs are stored in a database. The commands open the same dialog as the corresponding commandsedpul,edcpd, etc. (see the description of these commands):   To delete a list, right-click the selected item, and then clickDelete… Confirm the warning withOK. INPUT FILES <tshome>\/exp\/stan\/nmr\/lists\/pp\/*- pulse programs <tshome>\/exp\/stan\/nmr\/lists\/cpd\/*- CPD programs <tshome>\/exp\/stan\/nmr\/lists\/mac\/*- TopSpin macros <tshome>\/exp\/stan\/nmr\/py\/*- Jython programs SEE ALSO edpul, edcpde,xpy,xmac  "],["3277989387","rpar","3277989387.html","",null," NAME rpar - Read a parameter set (1D, 2D, 3D) DESCRIPTION The commandrparreads a parameter set (experiment) to the current data set. When it is entered without arguments,rparopens a dialog box with alist of available parameter sets.   Here you can select aSourcedirectory at the upper right of the dialog, then select a parameter set and clickRead...to read it to the current data set (for detailed information please refer to chapter User specific handling of Source Directories). This will open the dialog:    In this dialog, you can select the file types to be read, or just clickOKto read all types. The following buttons are available: Read... Read the parameters of the selected parameter set to the current data set. Close Close therpardialog. rparcan be used with arguments:   rpar <name>  Opens a dialog box where you can select individual parameter files of the parameter set <name>. Upon clickingOK, this file is copied to the current data set.  rpar <name> acqu  Reads the acquisition parameters (fileacqu) of the parameter set <name> to the current data set.  rpar <name> proc  Reads the processing parameters (fileproc) of the parameter set <name> to the current data set.  rpar <name> acqu proc  Reads the acquisition and processing parameters (filesacquandproc) of the parameter set <name> to the current data set.  rpar <name> all  Reads all parameter files of the parameter set <name> to the current data set.  rpar <name> all remove=yes  Reads all parameter files of the parameter set <name> to the current data set, deleting all data files and all status parameters. The first argument may contain wildcards, e.g.:   rparC*shows all parameter sets beginning with the letter C. Theremove=yesargument can be used together with any other argument. After reading a parameter set withrpar, you can modify parameters of the various types with the commands:   eda- acqu parameters  edp- processing parameters Note that Brukerparameter sets contain all parameter types, butuser defined parameter sets contain only those parameter types that were stored when the parameter set was created (seewpar). Usually, however, user defined parameter sets are also stored with all parameter types. Bruker parameter sets are delivered with TopSpin and installed with the commandexpinstall. User defined parameter sets are created withwpar, which stores the parameters of the current data set under a new or existing parameter set name. rparallows to read parameters sets of various dimensionalities, 1D, 2D, etc. If thedimensionality of the current data set and the parameter set you want to read are the same, e.g. both 1D, the current parameter files are overwritten. If the current data set contains data (raw and\/or processed data), these are kept. Furthermore, the status parameters are kept so you still have a consistent data set. However, as soon as you process the data, the new processing parameters are used, the processed data files are overwritten and the processing status parameters are updated. When you start an acquisition, the newacquisition parameters are used, the raw data are overwritten and theacquisition status parameters are updated. If thedimensionality of the current data set and the parameter set you want to read are different, the current parameter files are overwritten, all data files are deleted and status parameters are kept. If the dimensionality is reduced, the superfluous parameter files are deleted. INPUT FILES <tshome>\/exp\/stan\/nmr\/par\/<1D parameter set>\/ acqu- acquisition parameters proc- processing parameters outd- output device parameters <tshome>\/exp\/stan\/nmr\/par\/<2D parameter set>\/ acqu- F2 acquisition parameters acqu2- F1 acquisition parameters proc- F2 processing parameters proc2- F1 processing parameters outd- output device parameters clevels- 2D contour levels 3D parameter sets also contain the filesacqu3andproc3for the third direction. OUTPUT FILES <dir>\/data\/<user>\/nmr\/<1D data name>\/<expno>\/ acqu- acquisition parameters <dir>\/data\/<user>\/nmr\/<1D data name>\/<expno>\/pdata\/<procno>\/ proc- processing parameters outd- output device parameters <dir>\/data\/<user>\/nmr\/<2D data name>\/<expno>\/ acqu- F2 acquisition parameters acqu2- F1 acquisition parameters <dir>\/data\/<user>\/nmr\/<2D data name>\/<expno>\/pdata\/<procno>\/ proc- F2 processing parameters proc2- F1 processing parameters outd- output device parameters clevels- 2D contour levels The default directory for user defined parameter sets is: <tshome>\/exp\/stan\/nmr\/par\/user USAGE IN AU PROGRAMS RPAR(name, type) SEE ALSO wpar, edpar commande, (delpar), (expinstall)   "],["3278000011","wpar, edpar","3278000011.html","",null," NAME wpar - Write a parameter set edpar - Edit a parameter set DESCRIPTION The commandwparstores the parameters of the current data set in a parameter set. It opens a dialog box where you can select an experiment name and then clickWrite..to store it or clickWrite New...to store the them under a new name:   The commandedparopens a similar dialog as therparandwparcommands. The difference towparandrparis that withedparparameter sets can be read, written, written new and edited, whereasrparonly offer reading possibilities for parameter sets andwpargives the possibility to write and create (buttonWrite New ...) parameter sets. Same possibilities asedparoffers the commanddelpar. The following buttons are available: Write... Write the parameters of the current data set to the selected parameter set. Write New... Write the parameters of the current data set to a new experiment name. You will be prompted to enter this name. Close Close thewpardialog. The parameters are written to theSourcedirectory as selected at the upper right of the dialog. wparcan be used with arguments:   wpar <name>  Opens a dialog box where you can select individual parameter files of the parameter set <name>. Upon clickingOK, this file is copied to the current data set.  wpar <name> acqu  Reads the acquisition parameters (file acqu) of the parameter set <name> to the current data set.  wpar <name> proc  Reads the processing parameters (fileproc) of the parameter set <name> to the current data set.  wpar <name> acqu proc  Reads the acquisition and processing parameters (filesacquandproc) of the parameter set <name> to the current data set.  wpar <name> all  Reads all parameter files of the parameter set <name> to the current data set. The first argument may contain wildcards, e.g.:   wparC*shows all parameter sets beginning with the letter C Bruker standard experiment names should not be used when storing your own experiments withwpar. The reason is that they are overwritten when a new version of TopSpin is installed. wparis often used in the following way:   Define anew data set with the commandnew.  Enterrparto read a Bruker parameter set which defines the experiment you want to do.  Modify theacquisition parameters (witheda) to your preference and run the acquisition.  Modify processing parameters (withedp) to your preference and process the data.  Store the parameters withwparunder a new experiment name for general usage. The reason is that is thatrparwith two arguments is used in automation. INPUT FILES <dir>\/data\/<user>\/nmr\/<1D data name>\/<expno>\/ acqu- acquisition parameters <dir>\/data\/<user>\/nmr\/<1D data name>\/<expno>\/pdata\/<procno>\/ proc- processing parameters outd- output device parameters <dir>\/data\/<user>\/nmr\/<2D data name>\/<expno>\/ acqu- F2 acquisition parameters acqu2- F1 acquisition parameters <dir>\/data\/<user>\/nmr\/<2D data name>\/<expno>\/pdata\/<procno>\/ proc- F2 processing parameters proc2- F1 processing parameters outd- output device parameters clevels- 2D contour levels OUTPUT FILES <tshome>\/exp\/stan\/nmr\/par\/user\/<1D parameter set> acqu- acquisition parameters proc- processing parameters outd- output device parameters <tshome>\/exp\/stan\/nmr\/par\/user\/<2D parameter set> acqu- F2 acquisition parameters acqu2- F1 acquisition parameters proc- F2 processing parameters proc2- F1 processing parameters outd- output device parameters clevels- 2D contour levels 3D parameter sets also contain the filesacqu3andproc3for the third direction. Note that in TopSpin 2.0 and older, the user subdirectory does not exist and user defined parameter sets are stored in: <tshome>\/exp\/stan\/nmr\/par The same location as Bruker parameter sets. USAGE IN AU PROGRAMS WPAR(name, type) SEE ALSO rpar, (expinstall)  "],["3278009867","xmac","3278009867.html","",null," NAME xmac - Executemacro DESCRIPTION The commandxmacopens a dialog showing all available macros:   Select the desired macro and clickExecute. Macros can also be executed from the command line by entering the macro name, e.g.: exam_efp or xmac exam_efp The difference is that using thexmaccommand searches for macros only, whereas only entering the name searches for a TopSpin command, AU program, Jython program or macro of that name. Macros are stored in a database.xmacopens the same dialog as the corresponding commandsedmac. For more details, see the description of this command. SEE ALSO edpul, edcpde,delpul, delcpdd,xpy  "],["3278017419","xpy","3278017419.html","",null," NAME xpy - ExecuteJython program DESCRIPTION The commandxpyopens a dialog where you can select the desired Jython program:   Path Field where you can enter the full path name of the Jython program. ClickExecuteto run it. Browse Button to open a file browser where you can enter or select the Jython program. ClickExecuteto run it.   Browse in database Button to open a dialog showing the available Jython programs in the database:   Select the desired macro and clickExecute. Jython programs are stored in a database.xpyopens the same dialog as the corresponding commandsedpy. For more details, see the description of this command. Jython programs can also be executed from the command line by entering the macro name, e.g.: ExamCmd4.py or xpyExamCmd4.py The difference is that using thexpycommand searches for Jython programs only, whereas only entering just the name searches for a TopSpin command, AU program, Jython program or macro of that name. SEE ALSO edpul, edcpde,delpul, delcpdd,xmac    "],["3950233355","xpy3","3950233355.html","",null," NAME xpy3 – Execute Python 3 program  DESCRIPTION Python 3 scripts use their own Python environment. (For comparison, often mentioned Jython is a Python 2.7 dialect. Jython scripts run together with TopSpin GUI in a shared Java environment). The command xpy3 opens a dialog where you can select the desired Python program:  Path is a field where you can enter the full path name of the Python program. Click Execute to run it.  Parameters, Lists, AU Programs Python programs can also be executed from the command line by entering the script name: e.g.: xpy3 ExamCmd4.py xpy3 publish \/tmp\/mypicture.svg  SEE ALSO edpy3,edpy,xpy  "],["3277246091","Automation","3277246091.html","",null," This chapter describes all TopSpin commands which handle parameters andparameter sets. Furthermore, you will find commands that are used to read or edit lists like pulse programs, gradient programs, frequency lists etc. and, finally, commands which are used to read, edit or run AU programs. Note that several commands in this chapter are acquisition related rather than processing related. Nevertheless they play a role in the processing part of TopSpin. "],["3277252875","at","3277252875.html","",null," NAME at - schedule a TopSpin command for execution SYNTAX at [HH[:mm]] [DD[.MM[.YY]]] command DESCRIPTION The commandatperforms command scheduling. When entered without arguments, it opens the dialog shown:  Here you can specify the command to be scheduled, e.g.zg, and the starting time and date. TheTimeandDatefields are initialized with the current time and date, respectively. By clickingOK, the specified is scheduled for execution. The time and date, as well as the command to be scheduled can also be specified on the command line, using the following syntax:   at [HH[:mm]] [DD[.MM[.YY]]] command Here are some examples:   at 23:30 25.12.07 zg- will start an acquisition on the 25th of December 2007 at 23.30.  at 13 zg- will start an acquisition today at 13:00. The commandatworks user specific, i.e. the scheduled command is only executed if TopSpin runs at the specified time and the TopSpin internal user is the user who scheduled the command. For more flexible time definition and user independent scheduling, you can use the command. Scheduled commands can be viewed in the command spooler, which can be started with the commandspoolerand is available in the spectrometer status bar. SEE ALSO cron,qu,qumulti,atmulti,spooler  "],["3277261195","atmulti","3277261195.html","",null," NAME atmulti - schedule a TopSpin command for execution on multiple expnos SYNTAX atmulti [{*|1,2,3|1..7|1-7|1-7,20,21}}] DESCRIPTION The commandatmultischedules a command for execution on multiple experiment numbers. It works likeat, except that it runs on multiple expnos of the current dataset. When entered without arguments,atmultiopens the dialog shown:   Here you can enter the command to be executed, specify the time and date of execution and select the target experiments numbers. ClickingOKwill then schedule the command for execution. The commandatmultitakes two arguments, the command to be executed and the target experiment number(s). The dialog will open with the specified arguments preselected. Expnos can be specified in one of the following ways: n: a single experiment number *: all expnos under the current data name n-m: expno n through m n..m: equivalent ton-m n,m: expno n and m n m: equivalent to n,m The command to be executed can be specified before or after the expno(s). Examples of argument strings: The argument: efp 1,3,4-6 8 11- will preselect the commandefpand the expnos: 1, 3, 4, 5, 6, 8 and 11 The argument: 1..8,10 15-20- will preselect the expnos: 1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19 and 20 And leave the command field empty. Specified expnos which do not exist are ignored. The preselected command and expnos can be modified\/extended in the dialog. To select or deselect all expnos in the opened dialog:   Right-click in the dialog and chooseSelect all or Deselect all, respectively. On clickingOK, a delay job is created for each selected expno, starting with the lowest expno, and sent to the queue. Scheduled commands can be viewed in the command spooler, which can be started with the commandspoolerand is available in the spectrometer status bar. Note that if you try to exit TopSpin while a priority job is still active, you will be warned about this and requested to confirm exiting. SEE ALSO at,qu,qumulti,cron,spooler  "],["3277270283","compileall","3277270283.html","",null," NAME compileall - Compile all Bruker and UserAU programs DESCRIPTION The commandcompileallcompiles all Bruker and User AU programs. In order to compile Bruker AU programs, these must have been installed. This can be achieved using the commandexpinstall. For more information on AU programs please refer to the AU reference manual. INPUT FILES <tshome>\/exp\/stan\/nmr\/au\/src\/* AU programs(source files) OUTPUT FILES <tshome>\/prog\/au\/bin\/* AU programs(executable files) SEE ALSO cplbruk, cpluser,edau, xau, delau, xauw, (xaua, xaup), (expinstall) "],["3277278603","cplbruk, cpluser","3277278603.html","",null," NAME cplbruk - Compile BrukerAU programs cpluser - Compileuser defined AU programs SYNTAX cplbruk [<name> | all ] cpluser [<name> | all ] DESCRIPTION The commandcplbrukallows tocompile one or more Bruker AU programs.   Before you can use it, the commandexpinstallmust have been executed once, with the option \"Install Bruker library AU programs\" enabled. Then you can usecplbrukin three different ways:   cplbruk <name>- compile the Bruker AU program <name>  cplbruk all- compile all Bruker AU programs  cplbruk- lists Bruker AU programs; double-click one to compile it If you specify an argument, then it may contain wildcards; for example:   cplbruk a*compiles all Bruker AU programs which start witha.  cpluserworks likecplbruk, except that it compiles user defined AU programs. For more information on AU programs please refer to the AU reference manual. INPUT FILES <tshome>\/exp\/stan\/nmr\/au\/src\/* AU programs (source files) OUTPUT FILES <tshome>\/prog\/au\/bin\/* AU programs (executable files) SEE ALSO (expinstall),compileall,edau, xau, (xaua, xaup)  "],["3277286923","cron","3277286923.html","",null," NAME cron - schedule a TopSpin command for execution DESCRIPTION The commandcronperforms command scheduling. It allows you to executed commands periodically at predefined times. It is more versatile then the commandsatandatmultioffering full flexibility in time definition, off-schedule execution and user control. When entered without arguments, it opens the dialog shown:   Here you can specify the command to be scheduled, some scheduling options and the starting time and date. The following fields are available: Command The command to be executed. Description A description of the command. Execution Scope The scope of the command execution,UserorTopSpin. For scopeUser, the scheduled command will only be executed if TopSpin is run by the same (internal) user that is active during cron definition. If the scope is TopSpin, the scheduled command will be executed for any (internal) user. Scheduled commands with TopSpin execution scope can only be defined, cancelled or modified after entering the NMR-Administration password. Off-schedule execution This flag allows you to execute commands that were scheduled to run at the time when TopSpin was not running. These commands are executed after TopSpin startup. Note that commands that were scheduled to run multiple times during TopSpin downtime are only executed once. Direct execution The option direct execution allows you to run commands directly, i.e. by passing the default queue mechanism. Usually an expired cron job is moved into the priority queue, i.e. the job would wait for any other queued jobs to finish. Setting this flag by passes this mechanism i.e. the job is executed directly when its schedule is due. Please note that however processing commands can be ran in parallel. This is a useful tool to execute for examplenmr_saveand another processing command at the same time. The following time scheduling rules exist: Minute of the hour: 00 through 59 Hour of the day: 00 through 23 Day of the month: 00 through 31 Month of the year: January through December Day of the week: Sunday through Saturday For each of these fields, you can define an interval by selecting a value in theFromand a value in theTofield. Setting theTofield toIgnore, schedules the command for execution only at the time\/date selected in theFromfield. An asterix (*) in theFromfield indicated all possible times.  Clicking the+button to the right of a field, adds an extra field of the same type, allowing multiple interval definition. Clicking the-button removes the extra field. The cron dialog also offers a right-click menu which allows following options:   Add new rule - adding new scheduling rules  Remove rule - removing scheduling rules  Favorites - define favorites for scheduling rules SEE ALSO at,atmulti,qu,qumulti,spooler  "],["3277295243","edau, xau, delau, xauw","3277295243.html","",null," NAME edau - Edit anAU program xau - Execute anAU program delau - Delete an AU program xauw – Execute an AU program and wait for it to finish SYNTAX edau [<name>] xau [<name>] delau [<name>] xauw [<name>] DESCRIPTION When entered without arguments, the AU program commandsedau,xauanddelauall open the AU program dialog box:   The dialog offers the following buttons: Edit Edit the selected AU program. Equivalent to double-clicking the AU program name or enteringedau <name>on the command line. Compile Compile the selected AU program. Equivalent to enteringcplbruk <name>on the command line. Execute Execute the selected AU program. Equivalent to entering<name>orxau <name>on the command line. Close Close the dialog. The AU programs are selected from theSourcedirectory as selected at the upper right of the dialog. Note that: <tshome>\\exp\\stan\\nmr\\au\\src- contains all Bruker AU programs <tshome>\\exp\\stan\\nmr\\au\\src\\user- contains all user defined AU programs The File menu TheFilemenu offers the following functions: New... Create a new AU program. Note that new AU programs can only be stored in user defined directories. Save as... Save the selected AU program under a new name. A dialog will appear where you can specify the AU program name and destination directory. Delete... Delete the selected AU program. Note that both the source and binary AU program are deleted. Rename... Rename the selected AU program. Note that both the source and binary AU program are deleted.Note that only user defined AU programs can be renamed. Export... Export the selected AU program to an arbitrary directory. A file dialog will appear where you can select\/specify the destination directory. Import... Import an AU program from an arbitrary directory. A file dialog will appear where you can select\/specify the AU program. The Options menu   TheOptionsmenu offers the following functions: Show Comment Toggles between displaying AU programs with\/without comments. Show Date Toggles between displaying AU programs with\/without date. Sort by Date Sort AU programs by date when selected. Manage Source Directories Add\/modify AU programs source directories. AU programs will be searched for in the order of the directories specified. Detailed information aboutManage Source Directoriesis described in Chapter User specific handling of Source Directories. Export Sources... Opens a dialog to export an entire AU program library to a user defined directory. Note the difference to theExportfunction under theFilemenu (see below). When you edit a Bruker AU program, it is shown in view mode which means it cannot be modified. However, if you clickSave as..and store it under a different name, the stored file is automatically opened in edit mode. When you edit a User defined AU program, it is opened in edit mode and can be modified. Whenedauis entered on the command line with an argument, the corresponding AU program will be opened. If it does not exist it will be created. If the argument contains wildcards, the AU dialog box is opened showing the matching AU programs. For example,edaua*displays all AU programs which start witha. BrukerAU programs must be installed once withexpinstallbefore they can be opened withedau. The installation must be repeated when a new version of TopSpin is installed. edauuses the editor which is defined in the TopSpin User Preferences. To change it, enterset, clickMiscellaneousand select or change the editor. AU programs are usually executed simply by entering their names. The commandxauis only needed in three cases:   The AU program has not beencompiled yet.  A TopSpin command with the same name exists.  To call an Au program from another AU program (using the macro XAU). AU programs run in background and several of them can run simultaneously. The commandkillcan be used to stop a running (or hanging)AU program. For details on writing, compiling, and executing AU programs please refer to theAU reference manual: In the menu clickHelp|Manuals|Programming Manuals|AU programming   INPUT\/OUTPUT FILES <tshome>\/exp\/stan\/nmr\/au\/src\/* AU program source files. <tshome>\/prog\/au\/bin\/* AU program executable binary files SEE ALSO cplbruk, cpluser,compileall, (expinstall)    "],["3277305867","intser","3277305867.html","",null," NAME intser - integrate a list of spectra (1D, 2D) DESCRIPTION The commandintserintegrates a series of 1D or 2D data.   ClickProcess | Advanced | Integrate Spectra List.  This will open the following workflow button bar:  ClickSelect Listto define the list of data sets on which you want to perform the series of integrations. This list must have been previously created manually or can be created by clicking on the arrow key on theSelect Listbutton and selecting the commandBuild dataset list using find. The latter will open a dialogue window as shown below.    Enter appropriate values for the various list items to find the data sets you want to work with. A completed list may look like the one shown below. Click onDefine Listbutton and selectEdit Dataset List.    The first data set in the list serves as reference data set. Its PROCNO directory must contain anintrngfile with the spectral regions to be integrated. This file is created by automatic integration (commandabs) or by interactive integration (command.int). The next step is to set up the parameters for the serial integration. Clicking onDefine Parameterswill open the following dialogue box.    There are two options:   Calibrate the integrals in the series of spectra to a certain reference value. In the first (reference) spectrum, the indicatedNumber of region to calibrateis calibrated tothe Value of region to calibrate. All integrals in the series of experiments will then be scaled with the same scaling factor. This allows to immediately compare the integrals within the series of experiments.  Normalize the sum of integrals. Works like the calibration, but instead of scaling the reference region to a certain value, the sum of all integrals in the reference spectrum is scaled to theNormalization value. All integrals in the series of experiments will then be scaled with the same scaling factor. This allows to immediately compare the integrals within the series of experiments. Global scaling Takes the valueyesorno. Foryes, all integrals of all spectra in the list will be scaled relative to the normalization region of the reference spectrum. Forno, all integrals of one spectrum will be scaled relative to the normalization region of the same spectrum. The normalization region number and value are same for each spectrum (the specified values). To start the calculation, click onExecute. The integration result is stored in a text file whose contents are shown on the screen. Its format is demonstrated by the following example. Lines beginning with a # are comment lines. The format is suitable to be imported into a spreadsheet program such as Excel for further processing. The example is the result of integrating the 3 defined regions of 3 data sets. The first region is the reference region and all integrals in all spectra were integrated with the same scaling factor. # Result of 'intser' # Date\/time = Wed Feb 21 11:42:55 CET 2018 # Data set list (full path) = C:\\Bruker\\examdata\\topspin-dataset-list.txt # Region to calibrate = 0 # Value of region to calibrate = 1.0 # Global scaling = yes  # --- Integral info --- # A 1.0 #regions in PPM # # low field high field bias slope # 2.999042477377031 2.9053223999589988 -0.0 -0.0 # for region 1 # 2.824990905029257 2.747337126597173 -0.0 -0.0 # for region 2 # 2.01899823923418 1.895823280341909 -0.0 -0.0 # for region 3  # Spectrum#; Integral 0; Integral 1; Integral 2; 0;1.0;0.9944740153680266;1.012183456123523; 1;0.774737126457184;0.7625343796353649;0.7993500292763215; 2;0.6126474881645066;0.4877583034349917;0.6854909593010602;  With the parameters set as below the result of the integration will look like this.    # Result of 'intser' # Date\/time = Wed Feb 21 11:52:40 CET 2018 # Data set list (full path) = C:\\Bruker\\examdata\\topspin-dataset-list.txt # Normalization value = 100.0 # Global scaling = no  # --- Integral info --- # A 1.0 #regions in PPM # # low field high field bias slope # 2.999042477377031 2.9053223999589988 -0.0 -0.0 # for region 1 # 2.824990905029257 2.747337126597173 -0.0 -0.0 # for region 2 # 2.01899823923418 1.895823280341909 -0.0 -0.0 # for region 3  # Spectrum#; Integral 0; Integral 1; Integral 2; 0;33.259525219675844;33.07573359444518;33.664741185878974; 1;33.15629487831799;32.63405596897349;34.20964915270852; 2;34.30475406014218;27.311674271708828;38.383571668148996;  Particularly, in this example, the last three lines with the integration results are important. The commandintsercan also be used to integrate a series of 2D data. Note that in this case the file containing the integral regions isint2drng. SEE ALSO serial      "],["3277318027","qu","3277318027.html","",null," NAME qu - queue a TopSpin command for execution DESCRIPTION The commandququeues a command for execution. It requires one argument, the command to be queued.   For example, the command: qu xfb Queues the commandxfbfor execution. This means thatxfbis executed as soon as the currently running command and previously queued commands have finished. Command queuing can, for example be used, to process a 2D data set immediately after acquisition. This is done with the command sequence: zg quxfb Acquisition commands likezg,go,rgaandatmaare automatically queued, ifauto-spoolingis enabled in the User Preferences (commandset). Queued commands can be viewed in the command spooler, which can be started with the commandspoolerand is available in the spectrometer status bar. SEE ALSO cron,at,atmulti,qumulti,spooler  "],["3277325579","qumulti","3277325579.html","",null," NAME qumulti - queue a TopSpin command for execution on multiple expnos SYNTAX qumulti [{*|1,2,3|1..7|1-7|1-7,20,21}}] DESCRIPTION The commandqumultiqueues a command for execution on multiple expnos of the current dataset. When entered without arguments,qumultiopens the dialog shown:   Here you can enter the command to be executed and select the experiments numbers on which the specified command should work. The dialog shows all available expnos, with the active data set selected. ClickingOKqueues the command for execution. The commandqumultitakes two arguments, the command to be executed and the target experiment number(s). The dialog will open with the specified arguments pselected. Expnos can be specified in one of the following ways: n: a single experiment number *: all expnos under the current data name n-m: expno n through m n..m: equivalent ton-m n,m: expno n and m n m: equivalent to n,m The command to be executed can be specified before or after the expno(s). Examples of argument strings: The argumentefp 1,3,4-6 8 11will preselect the commandefpand the expnos: 1, 3, 4, 5, 6, 8 and 11. The argument: 1..8,10 15-20will preselect the expnos: 1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19 and 20, and leave the command field empty. Specified expnos which do not exist are ignored. The preselected command and expnos can be modified\/extended in the dialog. To select or deselect all expnos in the opened dialog: Right-click in the dialog and chooseSelect allorDeselect all, respectively. Ifqumultiis entered without argument, only the current expno is preselected. On clickingOK, a priority job is created for each selected expno, starting with the lowest expno, and sent to the queue. Queued commands can be viewed in the command spooler, which can be started with the commandspoolerand is available in the spectrometer status bar. Note that if you try to exit TopSpin while a priority job is still active, you will be warned about this and requested to confirm exiting. SEE ALSO cron,qu,at,atmulti,spooler  "],["3277334667","run","3277334667.html","",null," NAME run - Open dialog for starting macro, AU, Jython or serial. DESCRIPTION The commandrunopens the run dialog window:   This dialog box has various options, each of which selects a certain command for execution. Open the file explorer This option selects the commandexplfor execution. It opens the File Explorer showing the processed datafiles (the files in theprocnodirectory) of the active data set. Under Linux theKDE konqueror will be opened. If no data set is open in the TopSpin data area, the Explorer will show the users home directory.explallows you access to the current data files as well as the entire data directory tree. An alternative way to access data files is to right-click inside the data window and selectFilesin the appearing popup menu. Open Command Prompt\/Shell This option selects the commandshellfor execution. It opens a Windows Command Prompt or Linux Shell, depending on your operating system. Serial Processing This option selects the commandserialfor execution. It opens a dialog window where you can set up and start data processing of a series of data sets using TopSpin commands, macros or Jython programs. Execute an AU program This option selects the commandxaufor execution. It opens the AU dialog box showing alist of available AU program. Here you can select an AU program and clickExecuteto execute it.xaucan also be entered on the command line in which case you can specify the AU program as an argument. Execute a Jython program This option selects the commandxpyfor execution. It prompts you for the path name of a Jython program. Enter this path name and clickOKto execute the Jython program. Execute a Macro This option selects the commandxmacfor execution. It opens the Macro dialog box showing alist of available macros. Here you can select macro and clickExecuteto execute it.xmaccan also be entered on the command line in which case you can specify the macro as an argument. Open a text editor This option selects the commandedtextfor execution. It opens an empty text file with the TopSpin editor. The file can be stored in any directory. SEE ALSO expl,shell,edau, xau,xpy,xmac,edtext  "],["3277343755","serial","3277343755.html","",null," NAME serial - Serial processing with macro or Jython script DESCRIPTION To start serial, clickProcess | Advanced | Process Dataset List. This will open the following workflow button bar.    ClickSelect Dataset Listto choose the list of data sets on which you want to execute the series of commands. This list must have been previously created manually or can be created by clicking on the arrow key on theSelect Dataset Listand selecting the commandBuild dataset list using find.    The data set lists may be now reopened from the data list menu (Show Dataset List). The list is shown in the same window as a result of the data search.    Thefindcommand will open a dialogue window as shown below.    Enter appropriate values for the various list items to find the data sets you want to work with. A completed list may look like the one shown below. ClickDefine Listand selectEdit Dataset List.    The next step is to set up the commands for the serial command execution. ClickingDefine Commandwill open the following dialogue box.    Enter TopSpin commands, macros, AU programs or Jython scripts here. If you want to execute several commands, they must be separated with a semicolon. Examples are: efp xmac <your macro name> xpy <your jython program> em; ft; apk; abs  Note that Jython programs are much more versatile than macros. Details on Jython programming can be found under: Help | Manuals | Programming Manuals | Python programming Note that serial processing can also be started as follows:   ClickFile | Run A Program, then selectSerial Processingand clickOK. INPUT\/OUTPUT FILES <tshome>\/exp\/stan\/nmr\/py <tshome>\/exp\/stan\/nmr\/py\/user ser_*.py- Jython programs for serial processing <tshome>\/exp\/stan\/nmr\/lists\/mac\/ <tshome>\/exp\/stan\/nmr\/lists\/mac\/user ser_*- Macros for serial processing SEE ALSO edpul, edcpde,intser       "],["3277357451","spooler","3277357451.html","",null," NAME spooler - display queued, scheduled and cron jobs. DESCRIPTION The commandspoolerdisplays the spooler jobs. It opens a dialog showing:   Queued jobs (jobs started with the commandquorqumulti).  Scheduled jobs (jobs started with the commandatoratmulti).  Cron jobs (jobs started with the commandcron). For each job the dialog shows the command to be executed, the target data object, the owner and, depending on the job’s various other information. The Spooler dialog offer the following menus: Spooler Allows you to suspend or remove all queued, scheduled or cron jobs. Queue Allows you to:   Create new jobs.  Suspend all jobs.  Remove all jobs. For priority, delayed and cron jobs, separately. Job Allows you to:   Create new jobs.  Stop, restart or delete selected jobs.  Open the job properties dialog from here (also available by double click on the job entry). For the selected job type. Tools Allows you show the spooler log file and spooler report.     Spooler Report To show the spooler report: ClickTools | Show spooler report To delete entries from the spooler report:   Mark the entries to be deleted.  Right-click in the dialog and selectDelete.  To open datasets from the spooler report: Double-click the respective entry or Right-click the respective entry and selectDisplay.   Note that the spooler report can also be opened from Spooler field (if enabled) in the Acquisition Status Bar by right-clicking the wordSpoolerand selectingShow spooler report.  INPUT\/OUTPUT FILES <tshome>\/conf\/globals spoolerprotocol.xml- system spooler report <userhome>\/.topspin-<hostname>\/prop\/ spoolerprotocol.xml- user spooler report SEE ALSO cron,qu,qumulti,at,atmulti     "],["3277365003","Conversion Commands","3277365003.html","",null," This chapter describes all TopSpinconversion commands. These are commands which convert one data format to another. Described are the conversion of Bruker Aspect 2000\/3000, WINNMR,Varian,Jeol and Felix data to TopSpin. Furthermore, the conversion to and from JCAMP-DX, ZIP and TXT format. "],["3277371787","conv","3277371787.html","",null," NAME conv - Convert Aspect 2000\/3000 data to TopSpin format (1D, 2D, 3D) DESCRIPTION The commandconvconverts DISNMR\/DISMSL data (data from an Aspect 2000\/3000) to the TopSpin format. It opens a file browser where you can:   Navigate to the input directory where the DISNMR\/DISMSL data reside.  Select the data file to be converted and clickconvert.   In the next dialog box specify the output TopSpin data set. Note that the data path variables are initialized as follows:   NAME is the file name of the DISNMR input data  EXPNO is the extension of the DISNMR input data set. If the extension is not numeric or if it is missing, EXPNO is initialized with 1.  PROCNO is set to 1 and cannot be changed.  DIR is the <DIR> value of the current TopSpin data path.  USER is the <USER> value of the current TopSpin data path.    The commandconvexecutes the AU programdisconv. This means the commandexpinstallmust have been executed once, installing the Bruker AU programs, before you can useconv. The dialog box shown above shows the buttonxau disinfo. Clicking this button executes the corresponding AU program showing the relevant data set parameters. INPUT FILES <input directory>\/*- A2000\/3000 data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid-Avance type 1D raw data ser- Avance type 2D or 3D raw data acqu- acquisition parameters acqus- acquisition status parameters  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> 1r,1i- converted processed 1D data 2rr,2ir,2ri,2ii- converted processed 2D data proc- processing parameters procs- processing status parameters For 2D data, the additional parameter filesacqu2,acqu2s,proc2andproc2swill be created. For 3D data, the additional parameter filesacqu2,acqu2s,proc2andproc2sandacqu3,acqu3s,proc3andproc3swill be created. SEE ALSO winconv,convdta,vconv,jconv,fconv   "],["3277380875","convdta","3277380875.html","",null," NAME convdta - ConvertAvance type raw data toAMX type (1D, 2D, 3D) DESCRIPTION The commandconvdtaconverts Avance type raw data to AMX type raw data. It can handle 1D, 2D and 3D data. This is useful if you want to process data that have been acquired on an Avance spectrometer on anAMX or ARX spectrometer.   convdtatakes up to six arguments and can be used as follows:   convdta  You will be prompted for anexpnounder which the raw data must be stored.  convdta <expno>  The raw data will be stored under the specifiedexpno.  convdta <expno> <name> y  The output will be stored under the specifiednameandexpno. The last argument (y) causesconvdtato overwrite existing data without a warning.  convdta <expno> <name> <user> <dir> y n  The output will be stored under the specifiedexpno,name,useranddir. The second last argument (y) causesconvdtato overwrite existing data without a warning. The last argument (n) causes the display to remain on the current data set rather than change to the output data set. You can use any other combination of arguments as long they are entered in the correct order. The processed data number (procno) of thenew data set cannot be chosen, it is always set to 1. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- Avance type 1D raw data ser- Avance type 2D or 3D raw data acqu- acquisition parameters acqus- acquisition status parameters  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> proc- processing parameters procs- processing status parameters OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- AMX type 1D raw data ser- AMX type 2D or 3D raw data acqu- acquisition parameters acqus- acquisition status parameters audita.txt- acquisition audit trail  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> proc- processing parameters procs- processing status parameters For 2D data, the additional parameter filesacqu2,acqu2s,proc2andproc2swill be used. For 3D data, the additional parameter filesacqu2,acqu2s,proc2andproc2sandacqu3,acqu3s,proc3andproc3swill be used. USAGE IN AU PROGRAMS CONVDTA(expno) SEE ALSO conv,fconv,jconv,vconv  "],["3277389195","convertpeaklist","3277389195.html","",null," NAME convertpeaklist - Convert XML-format peak list to TXT-format peak list DESCRIPTION The commandconvertpeaklistconverts an XML-format peak list to various other formats. The output format can be controlled with the argument: txt- text format, filepeak.txt peaklist- Mixed Shape Deconvolution format, filepeaklist ml- AUREMOL format, file1r.ml(1D),masterlist.ml(2D) peaks- XEASY format, file xeasy.peaks) INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ peaklist.xml- peak listfor the Plot Editor in XML format OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ peak.txt- peak listfor the Plot Editor in TXT format SEE ALSO gdcon, ldcon, mdcon, ppp, dconpl, dcon,pps, ppf, ppl, pph, ppj, pp "],["3277397515","fconv","3277397515.html","",null," NAME fconv - Convert Felix type data to Bruker TopSpin type data (1D) DESCRIPTION The commandfconvconverts Felix data to TopSpin format. It opens a dialog window where you can navigate to the Felix input data file. Just select the desired file and clickconvert.   This will open the dialog box shown:   Here you can specify the TopSpin destination data set and clickOKto start the conversion. Thefconvsource and destination data can also be entered on the command line. Here are some examples: fconv <path>\/fdata When the specified input data are found, the dialog window shown above will appear. Here, you can specify the output data set. vconv fdata <name> <expno> <dir> <user> Here, the destination data set is specified as command line arguments. Theprocnois automatically set to 1. If the data set specification is incomplete, the dialog window shown above will appear. fconvcan convert raw and processed Felix data. Note thatfconvconverts 1D data only. INPUT FILES <fdata_name>- Felix data file OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- TopSpin 1D raw data acqu- TopSpin acquisition parameters acqus- TopSpin acquisition status parameters audita.txt- acquisition audit trail  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/1\/ proc- TopSpin processing parameters procs- TopSpin processing status parameters SEE ALSO vconv,jconv,conv,winconv,convdta   "],["3277406603","fromjdx","3277406603.html","",null," NAME fromjdx - Convert aJCAMP-DX data file to TopSpin format (1D, 2D) SYNTAX fromjdx [<pathname> [<path-variable>] [y]] DESCRIPTION The commandfromdjxconverts a JCAMP-DX data file to a TopSpin data set. JCAMP-DX is a standard ascii exchange format for spectroscopic data.     fromdjxsupports the conversion of 1D data (raw or processed) and 2D data (raw or processed-real).  fromjdxtakes up to three arguments and can be used as follows:   fromjdx  prompts for the path name of the JCAMP-DX input file, converts it and stores it under the lowest emptyexpnoandprocno1.  fromjdx <pathname>  converts the JCAMP-DX file specified by the path name and stores it under the lowest emptyexpnoandprocno1.  fromjdx <pathname> y  converts the JCAMP-DX file specified by the path name and stores it underexpno1 andprocno1. Possibly existing data are overwritten (y). In the examples above,fromjdxstores the output data set in the directory: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> Where <dir>- the data directory of the current data set <user>- the user of the currently current data set <name>- the name of the JCAMP-DX file but without the extension.dx Further examples:   fromjdx <pathname> du  Converts the JCAMP-DX file specified by the path name and stores it under thedir(=du),user,name,expnoandprocno as specified in the input JCAMP-DX file.  fromjdx <pathname> user  Converts the JCAMP-DX file specified by the path name and stores it under thedirof the current data set and theuser,name,expnoandprocno as specified in the input JCAMP-DX file.  fromjdx <pathname> name  Converts the JCAMP-DX file specified by the path name and stores it under thedirand user of the active data set and the name,expnoandprocno as specified in the input JCAMP-DX file.  fromjdx <pathname> expno  Converts the JCAMP-DX file specified by the path name and stores it under thedir,userandnameof the active data set and the expno andprocno as specified in the input JCAMP-DX file.  fromjdx <pathname> procno  Converts the JCAMP-DX file specified by the path name and stores it under thedir,userandnameof the active data set,expno1 and theprocno as specified in the input JCAMP-DX file. All the above examples can be used with theyoption to overwrite possibly existing data. INPUT FILES <path name>\/<mydata.dx> - TopSpin data in JCAMP-DX format OUTPUT FILES For 1D and 2D data: <tshome>\/prog\/curdir\/<user>\/ curdat- current data definition <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ audita.txt- acquisition audit trail (if input file contains raw data)  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> auditp.txt- processing audit trail (if input file contains processed data) outd- output device parameters title- title file (seeedti) For 1D data: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- 1D raw data (if input file contains 1D raw data) acqu- acquisition parameters acqus- acquisition status parameters  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> 1r- real processed 1D data (if input file contains 1D real processed data) 1i- imaginary processed 1D data (if input file contains 1D imaginary data) proc- processing parameters procs- processing status parameters For 2D data: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ ser- 2D raw data (input if Output Data = raw) acqu- F2 acquisition parameters acqu2- F1 acquisition parameters acqus- F2 acquisition status parameters acqu2s- F1 acquisition status parameters  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> 2rr- real processed 2D data (if input file contains 2D real processed data) proc- F2 processing parameters proc2- F1 processing parameters procs- F2 processing status parameters proc2s- F1 processing status parameters clevels- 2D contour levels USAGE IN AU PROGRAMS FROMJDX(name) For example FROMJDX(\"\/tmp\/mydata.dx\") SEE ALSO tojdx,totxt,tozip,fromzip  "],["3277416459","fromzip","3277416459.html","",null," NAME fromzip - Unzip\/display a zipped TopSpin data set (nD) SYNTAX fromzip [<path name> <dir> <user> ] DESCRIPTION The commandfromzipopens a dialog box to unzip a ZIP TopSpin data set.   Here you can enter the ZIP file (pathname) and the DIR and USER part of the output data path. fromziptakes up to three arguments and can be used as follows:   fromzip  opens the above dialog box.  fromzip <pathname> <dir> <user>  converts the ZIP file specified by the path name and stores it under the specified <dir> and <user> and thename,expnoandprocnoas stored in the ZIP archive. In the examples above,fromzipstores the output data set in the directory: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> The TopSpin data set created byfromzipbecomes the active data set. INPUT FILES <path name>\/<mydata.bnmr.zip>- TopSpin data as stored bytozip OUTPUT FILES For 1D and 2D data: <tshome>\/prog\/curdir\/<user>\/ curdat- current data definition <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ audita.txt- acquisition audit trail (if input file contains raw data)  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> auditp.txt- processing audit trail (if input file contains processed data) outd- output device parameters title- title file (seeedti) For 1D data: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- 1D raw data (if input file contains 1D raw data) acqu- acquisition parameters acqus- acquisition status parameters  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> 1r- real processed 1D data (if input file contains 1D real processed data) 1i- imaginary processed 1D data (if input file contains 1D imaginary data) proc- processing parameters procs- processing status parameters For 2D data: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ ser- 2D raw data (input if Output Data = raw) acqu- F2 acquisition parameters acqu2- F1 acquisition parameters acqus- F2 acquisition status parameters acqu2s- F1 acquisition status parameters  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> 2rr- real processed 2D data (if input file contains 2D real processed data) proc- F2 processing parameters proc2- F1 processing parameters procs- F2 processing status parameters proc2s- F1 processing status parameters clevels- 2D contour levels For 3D data, the additional parameter filesacqu3,acqu3s,proc3andproc3swill be created. SEE ALSO tozip,tojdx,totxt,fromzip  "],["3277426315","jconv","3277426315.html","",null," NAME jconv - Convert Jeol type data to Bruker TopSpin data (1D, 2D, 3D) DESCRIPTION The commandjconvconverts Jeol raw data to TopSpin format. It opens a dialog window where you can navigate to the Jeol input data file.   Just select the desired file and clickJNMR data conversion. This will open the dialog box shown:  Here you can specify the TopSpin destination data set and clickOKto start the conversion. Thejconvsource and destination data can also be entered on the command line. Here are some examples: jconv jdata.<ext> Searches forjdata.<ext>in the directory defined by the environment variable JNMR (can be set with the TopSpin command env set JNMR=<path>). When the specified input data are found, the dialog window shown in the figure above will appear. Here, you can specify the output data set.  jconv <path>\/jdata.<ext> As above, except that the source data are searched for in the directory<path>  jconv jdata.<ext> <name> <expno> <dir> <user> Here, the destination dataset is specified as command line arguments. Theprocnois automatically set to 1. If the data set specification is incomplete, the dialog window shown in the figure above will appear. jconvcan handle Jeol EX, GX and ALPHA raw data and works on 1D, 2D and 3D data. Processed data cannot be converted. The conversion of FX FID data has been implemented. FX data must have a numerical extension (like in proton.1) and the name must be specified on the command line, e.g.jconv proton.1. No parameter file is needed for the conversion, the most relevant parameters are extracted from the header of the data file.      Data type  Extension of data file  Extension of parameter file    EX  .gxd  .gxp   GX  .gxd  .gxp   ALPHA  .nmf  .txt   DELTA(new)  .jdf  .jdf   DELTA(old)  .bin  .hdr   FX  .num (an integer number)  no parameter file  jconvconverts all Jnmr parameters which have a TopSpin equivalent. First, the Jnmr parameter EXMOD is interpreted. If it is set to a certain name,jconvchecks the existence of a TopSpin parameter set with that name. If it exists, it is copied to the destination data set. If it does not exist, a standard parameter set (standard1Dfor 1D data) is copied. Thenjconvconverts all Jnmr parameters which have a TopSpin equivalent and overwrites the values of the parameter set which was previously copied. The parameters of the TopSpin parameter set which do not have a Jnmr equivalent keep their original values. If you frequently convert Jnmr data, with typical values of EXMOD, you might want to create the TopSpinparameter sets with the corresponding names. This can be done by reading a standard parameter set withrpar, modify it withedaandedpand then store it withwpar. INPUT FILES <jdata.ext>- Jeol raw data OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- TopSpin 1D raw data acqu- TopSpin acquisition parameters acqus- TopSpin acquisition status parameters audita.txt- acquisition audit trail  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/1\/ proc- TopSpin processing parameters procs- TopSpin processing status parameters jnmoriginal Jeol parameter file For 2D and 3D data, the raw data are stored in the fileserand the additional parameter filesacqu2(s),acqu3(s),proc2(s)andproc3(s)are created. USAGE IN AU PROGRAMS JCONV(jname, uxname, uxexp, uxdisk, uxuser) SEE ALSO vconv,fconv,conv,winconv,convdta   "],["3277436171","tojdx","3277436171.html","",null," NAME tojdx - Convert dataset toJCAMP-DX format (1D, 2D) DESCRIPTION The commandtodjxconverts a TopSpin data set to JCAMP-DX format. JCAMP-DX is a standard ascii exchange format for spectroscopic data. Whentojdxis entered without argument, it will open a dialog box in which you can enter the required information.   This dialog box includes: Name of the archive file The file name should have the extension.dx. This allows you to open it in TopSpin with drop & drag. Default is the data set name with the extension.dx. Directory of the archive file Any directory. Default is the users home directory. Type of archive file For JCAMP format, you can choose between the following archive types:   FIX(=0): Table format.  PACKED(=1): No spaces between the intensity values.  SQUEEZED(=2): The sign of the intensity values is encoded in the first digit.  DIFF\/DUP(=3): The difference between successive values is encoded, suppressing repetition of successive equal values. The default value isDIFF\/DUP. Include these data types For the included data types, you have the following choices:   FID (=0): Raw data.  RSPEC (=1): Real processed data.  RSPEC+ISPEC (=2): Real and imaginary processed data.  PARAMS (=3): Parameter files.  FID+RSPEC+ISPEC (=4): Raw data + real and imaginary processed data.  FID+ALL_PROCNOS (=5): Raw data +real and imaginary processed data of all PROCNO’s under the current EXPNO.  ALL_EXPNOS_DIM_1_2 (=6): Raw data +real and imaginary processed data of all EXPNO’s under the current NAME.  FID+RSPEC+ISPEC (=4): Raw and real + imaginary processed data.  ALL PROCNOS (=5): All procnos under current expno.  ALL EXPNOS (=6): All expnos under current name. The default value is RSPEC+ISPEC (=2) The above information can be entered as arguments oftojdxas follows: tojdx <path> <data> <file> <title> <origin> <owner> Note that in this case three extra arguments are required. The arguments have the following meaning: <path>: Name and directory of the archive file. <data>: Data types included. <file>: Type of archive file. <title>: The title as it appears in the output file: enter a character string. <origin>:The origin as it appears in the output file: enter a character string. <owner>: The owner as it appears in the output file: enter a character string.  The defaulttitleis theplot title as defined withedti. If no plot title is defined the data name is taken as default. The defaultoriginandownerare taken from the acquisition status parameter files (acqus). If you enter an * character as argument, the default value will be used. Here are some examples: tojdx C:\\temp\\mydata.dx 0 2 mytitle BRUKER guest tojdx D:\\nmr\\mydata.dx 0 2 mytitle * * tojdx * 1 * mytitle MYORIGIN joe tojdx F:\\users\\guest\\mydata.dx * * * * * INPUT FILES For 1D and 2D data: <tshome>\/prog\/curdir\/<user>\/ curdat- current data definition For 1D data: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- 1D raw data acqus- acquisition status parameters  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> 1r- real processed 1D data 1i- imaginary processed 1D data proc- processing status parameters procs- processing status parameters For 2D data: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ ser- 2D raw data acqus- F2 acquisition status parameters acqu2s- F1 acquisition status parameters  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> 2rr- real processed 2D data proc- F2 processing parameters proc2- F1 processing parameters procs- F2 processing status parameters proc2s- F1 processing status parameters OUTPUT FILES <path name>\/<mydata.dx>- TopSpin data in JCAMP-DX format USAGE IN AU PROGRAMS TOJDX(name, data, mode, title, origin, owner) For exampleTOJDX(\"\/tmp\/mydata.dx\", 0, 2, \"mytitle\", \"BRUKER\", \"joe\") SEE ALSO fromjdx,tozip,totxt  "],["3277446027","totxt","3277446027.html","",null," NAME totxt - Save the currently displayed region as a text file (1D, 2D) DESCRIPTION The commandtotxtsaves the currently displayed spectral region as text file. It will open the following dialog box in which you can enter the text file name and directory:   totxtworks on 1D and 2D data sets and only stores the real processed data. The 1D file format is: # File created = Wednesday, March 3, 2004 11:52:01 AM CET # Data set = exam1d_13C 1 1 C:\\bio guest # Spectral Region: # LEFT = 145.2549493926 ppm. RIGHT = 116.58206350384 ppm. # SIZE = 3940 (= number of points) # In the following ordering is from the 'left' to the 'right' limits! # Lines beginning with '#' must be considered as comment.. # 1.4612096E7 3084512.0 4615664.0 1.6594048E7 4898192.0 -4555792.0 ... INPUT FILES For 1D data: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> 1r- real processed 1D data For 2D data: <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> 2rr- real processed 2D data OUTPUT FILES <pathname>\/<mydata.txt>- text file containing displayed region SEE ALSO tojdx,tozip  "],["3277453579","tozip","3277453579.html","",null," NAME tozip - Store current dataset in ZIP file (nD) DESCRIPTION The commandtozipconverts a TopSpin dataset to ZIP format. It opens a dialog box where you can enter the required information:  This information includes: Name of archive file: output file name and extension(<datasetname> .topspin.zip) Directory of archive file: directory where output file is stored.  Type of archive:   ZIP-compress - Compressed nmr data in zip format.  ZIP-no compress - Uncompressed nmr data in zip format.  Data types included:   FID+RSPEC+ISPEC: Raw, real and imaginary processed data.  FID+RSPEC: Raw + real processed data.  FID: Raw data.  RSPEC+ISPEC: Real and imaginary processed data.  RSPEC: Real processed data.  Zip current EXPNO\/PROCNO only, or all of...: Archive current expno\/procno or all expnos\/procnos in current data set.  Options for tozipdialog window: Without argument, tozip will open it’s dialog showing the default destination file<dataname>.topspin.zip.You can change this default as follows:   Enterexplpropin TopSpin command line to open the file explorer in the user properties directory.  Edit the fileglobals.prop.  Add the line: TOZIP_CONFIG=option1|option2 Where the options must be separated by the character \"|\" and   option1= N, NE or NEP, for name, name-expno or name-expno-procno, respectively.  option2 = any string, e.g. “-mycompany.zip“  Example: Dataset: \"exam1d_13C 102 1 c:\\bruker\\topspin guest\" option2=.bruker.zip   If option1=N:   the default name is: exam1d_13C.bruker.zip.  If option1= NE:   the default name is exam1d_13C-102.bruker.zip  If option1 was NEP:   the default name is exam1d_13C-102-1.bruker.zip  Options for the command tozip   Arguments for the command tozip:  The commandtoziptakes four arguments, \"tozip optionA, optionB, optionC, optionD\":   optionA = nmr-data which should be transferred to zip file.  optionB = name and directory of archive data.  optionC = FID_RE_IM, FID_RE, FID, RE_IM, RE, PARAMS.  optionD = COMPRESS, NO_COMPRESS.  Zipfile from command line: The commandtozipcan be executed on the command line with the option ’- d’ and only the path name of the new zip file: tozip -d <path>\/<filename>.zip This command transfers the raw and processed data in uncompressed zip-format. If the graphical user interface should be used, simply enter the commandtozipas described above.  Zip file from within an AU Program: In AU Programs both commandstozipandtozip -dcan be used with the commandsendgui. The following two examples show the entering-procedure: XCMD(\"sendgui tozip -d C:\/mydata.zip\") QUIT  XCMD(\"sendgui tozip C:\/Bruker\/ts21pl1\/data\/guest\/nmr\/exam1d_1H\/1\/pdata\/1, C:\/testdata.zip, FID_RE_IM, NO_COMPRESS\") QUIT INPUT FILES If Data type includes FID <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- 1D raw data ser- 2D or 3D raw data If Data type includes RSPEC <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> 1r- real processed 1D data 2rr- real processed 2D data 3rrr- real processed 3D data If Data type includes ISPEC <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno> 1i- imaginary processed 1D data 2ir,2ri,2ii- imaginary processed 2D data 3irr,3rir,3iii- imaginary processed 3D data The parameter filesacqu*andproc*are stored for all data types. OUTPUT FILES <pathname>\/<mydata.topspin.zip>- TopSpin data in ZIP format SEE ALSO fromzip,tojdx,totxt  "],["3277462667","vconv","3277462667.html","",null," NAME vconv - ConvertVarian type data to TopSpin data (1D, 2D, 3D) DESCRIPTION The commandvconvconverts Varian data, which were measured with the Vnmr program, to TopSpin format.   It opens a browser where you can navigate to the Varian input data file. Just select the desired file and clickVNMR data conversion. This will open the dialog box shown:  Here you can specify the TopSpin destination dataset and clickOKto start the conversion. Thevconvsource and destination data can also be entered on the command line. Here are some examples: vconv vdata.fid searches forvdata.fidin the directory defined by the environment variable VNMR (can be set with the TopSpin command env set VNMR=<path>). When the specified input data are found, the dialog window shown in the figure above will appear. Here, you can specify the output data set.  vconv <path>\/vdata.fid as above, except that the source data are searched for in the directory<path>  vconv vdata.fid <name> <expno> <dir> <user> Here, the destination data set is specified as command line arguments. Theprocnois automatically set to 1. If the data set specification is incomplete, the dialog window shown in the figure above will appear.  Notethat the extension.fidof the Vnmr dataset is not obligatory. vconvconverts all Vnmr parameters which have a TopSpin equivalent. First, the Vnmr parameter SEQFIL is interpreted. If it is set to a certain name,vconvchecks the existence of a TopSpin parameter set with that name. If it exists, it is copied to the destination dataset. If it does not exist, a standard parameter set (standard1Dfor 1D data) is copied. Thenvconvconverts all Vnmr parameters which have a TopSpin equivalent and overwrites the values of the parameter set which was previously copied. The parameters of the TopSpin parameter set which do not have a Vnmr equivalent keep their original values. If you frequently convert Vnmr data, with typical values of SEQFIL, you might want to create the TopSpinparameter sets with the corresponding names. This can be done by reading a standard parameter set withrpar, modify it withedaandedpand then store it withwpar. NMR parameter equivalence between Bruker and Varian software      VNMR  XWIN-NMR \/ TopSpin  VNMR  XWIN-NMR \/ TopSpin    ct  NS(status)  rfl\/rfp  OFFSET   d1  D1  rfl1\/rfp1  OFFSET(2D)   date  DATE  rfl2\/rfp2  OFFSET(3D)   dfrq  BF2  rp  PHC0   dfrq2  BF3  rp\/lp  PHC0\/PHC1   dmf  P31  rp1\/lp1  PHC0\/PHC1(2D)   dn  DECNUC  rp2\/lp2  PHC0\/PHC1(3D)   dn2  DECBNUC  seqfil  PULPROG   dof  O2  sfrq  BF1   dof2  O3  solvent  SOLVENT   fb  FW  spin  RO   fn  SI  ss  DS   lp  PHC1  sw  SW_h   np  TD  sw1  SW_h(2D)   nt  NS(foreground)  sw2  SW_h(3D)   pp  P3  temp  TE   pslabel  AUNM  tn  NUCLEUS   pw  P0  tof  O1   pw90  P1      The original Vnmr parameter fileprocparis stored in the TopSpin processed data directory. You can check this ascii file for possible parameters which could not be converted. The table above shows the Varian parameters and there TopSpin equivalent. vconvcan handle Unity and Gemini data acquired with Vnmr 4.1 or newer. Data from older Varian spectrometers or acquired with older software versions might also work, but have not been tested by Bruker. INPUT FILES <dir>\/data\/<user>\/nmr\/<vdata>.fid or <VNMR>\/<vdata>.fid\/ fid- the Vnmr raw data procpar- the parameters text- title file OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- TopSpin 1D raw data acqu- TopSpin acquisition parameters acqus- TopSpin acquisition status parameters audita.txt- acquisition audit trail  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/1 proc- TopSpin processing parameters procs- TopSpin processing status parameters procpar- Vnmr parameter file For 2D and 3D data, the raw data are stored in the fileserand the additional parameter filesacqu2(s),acqu3(s),proc2(s)andproc3(s)are created. USAGE IN AU PROGRAMS VCONV(vname, xwname, xwexpno, xwdisk, xwuser) SEE ALSO jconv,fconv,conv   "],["3277473291","winconv","3277473291.html","",null," NAME winconv - Convert WINNMR type data to TopSpin data (1D) DESCRIPTION The commandwinconvconverts Bruker Win-nmr data to TopSpin format. It opens a browser where you can navigate to the Win-NMR input datasets. A Win-nmr dataset is a directory with several files. Each file has:   A number as file name.  The extension.FID,.1R,.1I,.AQSor.FQSfor raw data, processed real data, processed imaginary data, acquisition parameters and processing parameters, respectively. Just select any of these files and clickconvert. This will open the dialog box shown:   Here you can specify the TopSpin destination dataset. The data path fields are initialized as follows: NAME - the Win-nmr data directory EXPNO - the first three digits of the Win-nmr data name PROCNO - the second three digits of the Win-nmr data name DIR - DIR of the active TopSpin data set USER - USER of the active TopSpin data set Specify a data path or accept the initial values and clickOKto start the conversion. To display the data set, open it from the TopSpin browser or use the commandre. INPUT FILES <name>\/ num.FID- Win-nmr raw data num.1R- Win-nmr real processed data num.1I- Win-nmr imaginary processed data num.1I- Win-nmr imaginary processed data num.AQS- Win-nmr acquisition parameters num.FQS- Win-nmr processing parameters num.TIT- Win-nmr title OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ fid- TopSpin 1D raw data acqu- TopSpin acquisition parameters acqus- TopSpin acquisition status parameters  <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/1 1r- real processed data 1i- imaginary processed data proc- TopSpin processing parameters procs- TopSpin processing status parameters SEE ALSO conv,fconv,jconv,vconv,convdta  "],["3278027275","TopSpin Interface\/Processes","3278027275.html","",null," This chapter describes commands which are related to the User interface and TopSpin processes. Each user can set up his\/her own interface including the TopSpin menu, colours, printer usage etc. Commands are described for following processes on the screen, storing them in the history file or killing them. Online help is described as far as it can be started from the command line. "],["3278031755","about","3278031755.html","",null," NAME about – Displays the TopSpin version and configuration information.. DESCRIPTION The commandaboutdisplays various TopSpin version and configuration informations:   Alternatively clickHelp|Version Info.   "],["3278040075","bpan","3278040075.html","",null," NAME bpan - Opens a user defined button panel (nD) DESCRIPTION The commandbpanopens a user defined button panel. It prompts for the name of the desired panel.   A button panel is a window with user-defined buttons for executing TopSpin commands, AU programs, Jython programs or macros. It appears as an integral part of the active data window and act on that. Bruker delivers a few standard button panels available with the commandbnmr. To create your own button panels, you can modify one of these or write them from scratch. In this description we will create a very simple button panel with some 1D processing commands andprint\/exportbuttons:   To write this button panel, take the following steps:   Open the File Explorer and navigate to the subdirectoryuserdefinedof the users properties directory (to locate this, enter hist and look for the entry \"User properties directory=\").  Create a text file with the namebuttonpanel_<name>.prop, where<name>is the name of the button panel.  Enter the button definitions includingPanel title,Colors,Toggle buttons,Top buttons,Panel layout,Panel buttonsandTooltips.  Save the file. Make sure the extension of the file is.propand not.txt,.prop.txtor anything else.  Enterbpan <name>on the command line to open the button panel. Here is the content of the properties file for the button panel above: # Color definitions used in this file (RGB) BLUE1=51$ 204$ 255 YELLOW1=255$ 255$ 0 GREEN1=84$ 196$ 20 # Title definition TITLE=1D Processing Panel TITLE_COLOR=0$ 0$ 255 # Toggle button definition TOGGLE_BUTTON=To 2D TOGGLE_CMD=bpan bproc2d TOGGLE_TIP=Switch to 2D processing # Top row button definition TOP_BUTTONS=EM$ $FT$ $PK$ $ TOP_COLORS=YELLOW1$ YELLOW1$ YELLOW1 TOP_CMDS=em$ ft$ pk TOP_TIPS=Exponential multiplication $\\ Fourier transform$\\ Phase correction # Panel button definitions # LAYOUT format: rows columns hgap vgap PAN_LAYOUT=1$ 3$ 8$ 8 PAN_BUTTONS=Print$ $ EXPORT$ $SEND TO$ $ PAN_COLORS=BLUE1$ BLUE1$ BLUE1 PAN_CMDS=prnt$ exportfile$ smail PAN_TIPS=Print the spectrum<br>\\ as it appears on the screen$\\ Export the dataset<br>\\ to png, jpg, bmp etc.$\\ Send the dataset by email  Note that:   TheClosebutton and theTipscheckbox are automatically created. You don’t need to specify them.  TheTOGGLEbutton is typically, but not necessarily, used to call another button panel. In this example it calls the panelbproc2d.  Items must be separated with the \"$\" character, button items with \"$ $\".  A \"\\\" followed by \"end of line\" continues an item on the next line.  Tool tips may use html tags for text formatting.  Commands may be specified as single commands like \"em\" or as composite commands like \"em\\nft\\npk\". Note that in the latter case, the commands must be separated by \"\\n\". INPUT FILES <userhome>\/<.topspin-hostname>\/prop\/userdefined\/cmdpanel_<name>.prop SEE ALSO (bnmr)   "],["3278052235","cmdindex","3278052235.html","",null," NAME cmdindex - Open the command index DESCRIPTION The commandcmdindexopens a command index dialog box:   It displays all TopSpin commands which can be entered from the command line with a one-line description for each command. Select one or more commands for further actions. The following actions are available: Help Open the HTML Help page of the selected command. This is equivalent to double-clicking the command.  Execute Execute the selected command or commands.  New Macro Create a new macro and append commands from the list or enter commands manually.  Append Append the (first) selected command to the command line. The appended command can be edited and executed. Useful for commands with many arguments such asre.  Save Macro The selected command(s) are stored as a macro. You will be prompted for the macro name. To edit this macro, enteredmac <macro-name>. To execute it, just enter the name on the command line.  Find Find a character string in the command index. INPUT FILES <tshome>\/classes\/prop cmdindex_main.prop- command index properties file <tshome>\/prog\/docu>\/english\/xwinproc\/html *.html- TopSpin command help files OUTPUT FILES <tshome>\/exp\/stan\/nmr\/lists\/mac\/ *- Macros (created bycmdindexandSave Macro..) SEE ALSO cmdhist  "],["3278062091","cmdhist","3278062091.html","",null," NAME cmdhist - Open command history. DESCRIPTION The commandcmdhistopens a command history control window:    It displays all commands that have been entered from the command line since TopSpin was started. You can select one or more commands. Furthermore, the following buttons are available: Execute Execute the selected command or commands. Append Append the (first) selected command to the command line. The appended command can be edited and executed. Useful for commands with many arguments such asre. Save Macro... The selected command(s) are stored as a macro. You will be prompted for the macro name. To edit this macro, enteredmac <macro-name>. To execute it, just enter the name on the command line. To open the command history control window right-click in the command line and selectCommand Line History. OUTPUT FILES <tshome>\/exp\/stan\/nmr\/lists\/mac\/ *- Macros (created bycmdhistandSave Macro..) SEE ALSO hist,edpul, edcpde  "],["3278071947","docs","3278071947.html","",null," NAME docs - Open Manual list. DESCRIPTION The commanddocsopens a list of available documents. This list displays all Bruker manuals delivered on the TopSpin DVD:    The manuals are divided in topic groups asGeneral,Acquisition - User Guides, etc... Just click the manual name to open it. Furthermore, the Manual dialog offer the following buttons or check box:   Check box:Close this dialog when a manual is opened.  Multi-Doc Search: A small help for the advanced search in Adobe to find a search string in several manuals.  Books: A list of available hardcopy (printed) manuals.  Close: Close this dialog. SEE ALSO help, ghelpg  "],["3278081035","edtext","3278081035.html","",null," NAME edtext - Open an empty text file with an editor. DESCRIPTION The command edtext opens an empty text file with the TopSpin editor. The file can be stored in any directory. SEE ALSO nbook "],["3278088587","exit","3278088587.html","",null," NAME exit - Exit TopSpin DESCRIPTION The commandexitexits TopSpin and terminates all running processes. Before this happens, the following warning is displayed:   TopSpin displays different warnings and error messages, depending on the actual TopSpin use, before exiting the program:   If Acquisition is running:     If the spooler contains unfinished jobs clickOKin the respectively of the three dialogs aboveto exit TopSpin.     If IconNMR runs actively at the exit-moment, TopSpin cannot be closed:   Enteringexiton the command line is equivalent to clickingFile | Exit. SEE ALSO newwin, nextwin, close, closeall     "],["3278098443","expl","3278098443.html","",null," NAME expl - Open File Explorer, show current processing folder. DESCRIPTION The commandexplopens the Explorer (Windows) or Konqueror\/Nautilus (Linux) showing the processed datafiles (the files in theprocnodirectory) of the active dataset:    If no data set is open in the TopSpin data area, the users home directory will be shown. explallows you to access to the current data files as well as the entire data directory tree. An alternative way to access the processed data files is to right-click in the data window and selectFiles... The command can also be used with one argument: expltop Opens the TopSpin home directory explhome Opens the User home directory explspect Opens the directory<tshome>\/conf\/instr\/<curinst> explprop Opens the User properties directory expl<absolute_path> Opens the directory<absolute_path>  explcan also be started fromFile | Run a Program.   SEE ALSO run   "],["3278109835","hist","3278109835.html","",null," NAME hist - Show the TopSpinhistory and protocol. DESCRIPTION The commandhistdisplays the TopSpin protocol and history files. These files only contain information if the protocol function is active. You can switch on this function as follows:   ClickSetup preferencesor enterset.  Click theMiscellaneousgroup in the left part of the dialog box.  Check the itemRecord commands in protocol file. The protocol file contains TopSpin startup information and command information on interface level. The history file contains command information on the level of the command interpreter and application modules. It also contains error messages.   Note that the fileshistoryandprotocolare emptied when you restart TopSpin which means the history of the previous TopSpin session is lost. In case of problems, you should first make a copy of these files before you restart TopSpin. Note that a long TopSpin session, especially with automation can create very largehistoryand protocol files. Therefore, it is useful to regularly check the size of the files or simply restart TopSpin after each (automation) session. OUTPUT FILES <tshome>\/prog\/curdir\/<user>\/ history- TopSpin history file history_i.txt- TopSpin protocol file SEE ALSO ptrace   "],["3278118155","help, ghelp","3278118155.html","",null," NAME help - Search for keywords in command help. ghelp - Search for keywords in command in NMR Guide. DESCRIPTION The commandhelpopens a search dialog:   This dialog box has several options, each of which selects a certain command for execution. Search in command documentation This option activates the commandhelp. It allows you to search for the specified item in the command help documents. Search in NMR Guide knowledge base This option activates the commandghelp. It allows you to search for the specified item in the NMR Guide knowledge base. Display Command Index This option activates the commandcmdindex. It opens the command index dialog, irrespective of the specified command. Enteringhelpon the command line is equivalent to clickingHelp | Advanced Searchor clickingF1. INPUT FILES <tshome>\/prog\/docu>\/english\/xwinproc\/html *.html- TopSpin command help files <tshome>\/guide\/ *- NMR Guide files and directories SEE ALSO docs   "],["3278128011","kill, show","3278128011.html","",null," NAME kill, show - Show active TopSpin commands and allow to kill them. DESCRIPTION The commandkilldisplays alist of all active TopSpin commands.   To kill a command:   In the list select a command entry.  ClickKill... Note:a running acquisition should not be stopped withkillbecause this would leave an inconsistentdata set. Instead, the commandshaltorstopshould be used for this purpose. Note:the commandshowis equivalent tokill.  "],["3278136331","nbook","3278136331.html","",null," NAME nbook - Open the user notebook DESCRIPTION The commandnbookopens a user specific notebook. Each user can create and keep their own notebook for individual notes, information, settings etc.   INPUT AND OUTPUT FILES <userhome>\/<.topspin-hostname\/prop\/ notebook.txt- notebook text file SEE ALSO peakw  "],["3278143883","newtop","3278143883.html","",null," NAME newtop - Open a new TopSpin interface. DESCRIPTION The commandnewtopopens a new additional TopSpin interface. The additional interface is completely equivalent to the one it was started from. Enteringnewtopin the second or in the initial TopSpin interface opens another interface etc. The number of TopSpin interfaces is only limited by the available computer memory.   When single data set is displayed in multiple TopSpin interfaces, the display in each interface is completely independent from the others. As such, you can display different regions, scaling and data objects. When the data set is (re)processed from one interface, its display is automatically updated in all TopSpin interfaces. The commandexitcloses the current TopSpin interface. Interfaces that were opened from that interface remain open. Enteringexitin the last open TopSpin interface, finishes the entire TopSpin session. The position and geometry of each TopSpin interface is saved and restored after restart. SEE ALSO exit,hist,newwin, nextwin, close, closeall  "],["3278152203","newwin, nextwin, close, closeall","3278152203.html","",null," NAME newwin - Open a new (empty)data window. nextwin - Select the nextdata window. close - Close the currentdata window. closeall - Close all data windows. DESCRIPTION The commandnewwinopens a new empty data window. The commandnextwinactivates the next open data window. It is equivalent to clicking the Window Switcher or clickingF6. The commandclosecloses the current data window. It is equivalent to clickingFile | Close Active Windowor hittingCtrl-w. The commandcloseallcloses all current data windows. It is equivalent to clickingFile | Close All Windows.  SEE ALSO newtop   "],["3278162059","ptrace","3278162059.html","",null," NAME ptrace - Display messages from various log files time sorted. DESCRIPTION The commandptracedisplays the TopSpin protocol and history files time sorted:   These files only contain valuable information if the protocol function is active. You can switch on this function as follows:   ClickSetup preferencesor enterset.  Click theMiscellaneousgroup in the left part of the dialog box.  Check the itemRecord commands in protocol file. The protocol file contains TopSpin startup information and command information on interface level. The history file contains command information on the level of the command interpreter and application modules. It also contains error messages. Note that the fileshistoryandprotocolare emptied when you restart TopSpin which means the history of the previous TopSpin session is lost. In case of problems, you should first make a copy of these files before you restart TopSpin. Note that a long TopSpin session, especially with automation can create very largehistoryand protocol files. Therefore, it is useful to regularly check the size of the files or simply restart TopSpin after each (automation) session. OUTPUT FILES <tshome>\/prog\/curdir\/<user>\/ history- TopSpin history file history_i.txt- TopSpin protocol file history.traffic.txt- network traffic log stdout.dataserver.<number>.txt– data server output file <userhome>\/<.topspin-hostname>\/prop\/ protocol.txt- TopSpin protocol file (if TopSpin was started astopspin -client) SEE ALSO hist   "],["3278170379","set","3278170379.html","",null," NAME set - Open the user preferences window. DESCRIPTION The commandsetallows to set user preferences. It opens the dialog box shown:   In the left part of the dialog window, you find various categories of objects. Click the category of which you want to view\/change certain objects. It will become highlighted and the corresponding objects will be displayed at the right part of the dialog box. Some objects can be changed by entering a value, others can be changed by clickingChangeto the right of the object entry. INPUT AND OUTPUT FILE <home>\/.topspin-<hostname>\/prop globals.prop-ascii file containingUser Interface settings view.prop- colors fonts etc. Where: <home>is the users home directory <hostname>is the hostname of the computer  "],["3278178699","setdef","3278178699.html","",null," NAME setdef- Configure acknowledgment of dialog windows. DESCRIPTION With the commandsetdefthe settings for automatic dialog acknowledgement can be changed. USAGE Display a help message   xcpr setdef Display a dialog with the available sub commands.  xcpr setdef <sub command> Display a dialog with the available options for the specified sub command, where <sub command> is one ofackn,beep,quest,stderr,stdout. Sub command ackn This defines how standard dialog windows with a simple OK button are handled.   setdef ackn no Program execution continues without acknowledgment.  setdef ackn ok Program execution continues only after acknowledgment.  setdef ackn hide Program execution continues without acknowledgment. In addition, the dialog window is not displayed. Sub command beep Obsolete. There is no action related to this sub command. Sub command quest This defines how question windows with an OK and a CANCEL button are handled.   setdef quest ok Program execution continues without acknowledgment assuming OK.  setdef quest can Program execution continues without acknowledgment assuming CANCEL.  setdef quest no Program execution continues only after acknowledgment. Sub command stderr This defines whether stderr (error messages from program execution) are written to a file.   setdef stderr off Program error messages are not written to a file.  setdef stderr on Program error messages are written to a file. Sub command stdout This defines whetherstdout(standard messages from program execution) are written to a file.   setdef stdout off Program standard messages are not written to a file.  setdef stdout on Program standard messages are written to a file. DEFAULTS At TopSpin start all of these settings are reset to their defaults, namely   setdef ackn ok  setdef quest no  setdef stderr on  setdef stdout on OUTPUT FILES If program standard and\/or error messages are written to a file, the files are in the directory <tshome>\/prog\/curdir\/<user> and have the names stdout.<pid> -standard TopSpin output file stderr.<pid> -standard TopSpin error file PROGRAMMING GUIDE In AU programs the current state of each sub command option can be queried with int result = CPR_exec(“setdef <sub command> ?”); The result is   sub command ackn: ‘n’ for no, ‘o’ for ok  sub command quest: 0 for ok, 1 for can, -1 for no  sub command stdout and stderr: ‘y’ for on, ‘n’ for off  sub command beep: ‘y’ for yes, ‘n’ for no."],["3278185483","shell","3278185483.html","",null," NAME shell - Open a Windows Command Prompt or Linux Shell DESCRIPTION The commandshellopens a Command Prompt (under Windows) or a shell (under Linux).   "],["3290896907","start_rest_interface, stop_rest_interface","3290896907.html","",null," NAME start_rest_interface, stop_rest_interface  DESCRIPTION The commandstart_rest_interfacestarts a RESTful service, which allows to access Topspin from any other application. For the sake of security, an administrator password is required. The command allows to specify the port number on which the service is runningstart_rest_interface [-p portNumber] The default port is 3080. The service is limited to the local machine (localhost, 127.0.0.1). Following features are available:   Send command to Topspin  Read NMR datasets (currently limited to 1D und 2D)  Read peak lists  Read integration regions  Read and write data set parameters Commandstop_rest_interfacestops the RESTful service immediately."],["3278193035","swin","3278193035.html","",null," NAME swin - Swap the position and geometry of twodata windows. DESCRIPTION The commandswinswaps the position of two data windows. If the layout contains exactly two data windows,swinsimple swaps theirposition andgeometry. If the layout contains more than two data windows,swinallows you to swap the currently selected (active) data window with any of the other data windows. The latter can be selected from a list. swinis typically used after reading a window layout with more than one data window. SEE ALSO Newwin, nextwin, close, closeall "],["3278199819","TopSpin Audit Trails","3278199819.html","",null," This chapter describes commands which are related to TopSpin audit trail. The audit trail contains a record of all acquisition and processing activities, data checksums and electronic signatures. NOTICE   Please note, that the user management and electronic signatures are available only in the Topspin GxP version. "],["3278209547","audit, auditcheck","3278209547.html","",null," NAME audit - Open audit trail dialog box (nD) auditcheck - Check data consistency (nD) DESCRIPTION The commandauditopens the audit trail dialog box:   This dialog box has several options, each of which selects a certain command for execution. View audit trail of the processed data This option selects the commandauditprocfor execution. It shows the processing audit trail fileauditp.txt. This file is created by the processing command that creates the processed data, e.g.em. Any processing command that modifies\/updates the processed data, e.g.ft, makes an additional entry. Furthermore, any command that changes one or more processing status parameters makes an additional entry. View audit trail of the acquisition data This option selects the commandauditacqufor execution. It shows the acquisition audit trail fileaudita.txt. This file is created by the acquisition command that creates the raw data, e.g.zg. Any acquisition command that modifies\/updates the raw data, e.g.go, makes an additional entry. Furthermore, any command that changes one or more acquisition status parameters makes an additional entry. Verify audit trails This option selects the commandauditcheckfor execution. It performs an audit trail check, i.e. a data consistency check. If both raw and processed data are consistent, you will get the following message:   If the data have been manipulated, e.g. with third party software or by changing certain status parameters (e.g. SI), the checksum will be inconsistent. The following figure shows the message for inconsistent processed data.   Add a comment to audit trail This option selects the commandauditcomfor execution. It allows you to add a comment to one of the audit trail files (raw or processed). Each audit trail file entry contains the following elements:   Number: The entry number (1, 2, 3,...).  When: Starting date and time of the command.  Who: User who starts the command (the user that started Topspin).  Where: Location where the command started (the computer host name).  Version: The TopSpin version which performed the acquisition or processing.  What: Command and associated parameters, e.g. <em LB = 0.3 SI = 16384> The last line of the file is a checksum which looks like: $$ 24 EB 5D 82 76 AD F2 2B 7E D2 A1 35 7B B5 C4 D5 The commandauditcheckuses this line for the consistency check. INPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ audita.txt- acquisition audit trail <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ auditp.txt- processing audit trail Note that these are also the output files forauditcom. SEE ALSO gdcheck    "],["3278239115","gdcheck","3278239115.html","",null," NAME gdcheck - Generate data checksum DESCRIPTION The commandgdcheckgenerates a datachecksum. It updates theaudit trail files. It requires a file auditc.txt containing a comment and can be used as follows:   gdcheckcomment: Makes the processing audit trail consistent. The file auditc.txt must be in the same folder as auditp.txt.  gdcheckcomment raw:Make the acquisition audit trail consistent. The file auditc.txt must be in the same folder as audita.txt. In either case, the commandgdcheckfails if the file auditc.txt is missing from the desired directory. Otherwise, this file will be deleted, and its content is written as a comment in the audit trail. Moreover,gdcheckchecks whether the data set has been manipulated since the last audit trail command, in which case it annotates the comment with “Unknown data manipulation detected”. Callinggdchecka second time fixes the checksum error, so that a call to auditcheck returns “CheckSum OK” instead of “Unknown data manipulation”. One of the two comments should document the data manipulation. INPUT AND OUTPUT FILES <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/ audita.txt- Acquisition input audit trail, if the command is called with argument “raw”. <dir>\/data\/<user>\/nmr\/<name>\/<expno>\/pdata\/<procno>\/ auditp.txt- Processing input audit trail, if the command is called without argument “raw”. auditc.txt– Input file containing the comment, if the command is called without argument “raw”. USAGE IN AU PROGRAMS GDCHECK GDCHECK_RAW: Executes the commandgdcheck comment raw. AUDITCOMMENTA(\"user comment\"): Adds a user comment to theaudita.txtfile. AUDITCOMMENTP(\"user comment\"): Adds a user comment to theauditp.txtfile. SEE ALSO audit, auditcheck "],["3278245899","lockgui","3278245899.html","",null," NAME lockgui - Lock the TopSpin interface. DESCRIPTION The commandlockguiallows to logoff the internal user. It opens the dialog shown:  This indicates the locked status and offers buttons to unlock. Note that only the current internal user and the NMR Administrator can unlock the interface. The command can also be started as follows: ClickManage | Security | Lock TopSpin for Other Users. INPUT FILES <tshome>\/conf\/ topspin-users.prop- TopSpin users properties file. SEE ALSO esign, login, logoff  "]];